#!/bin/bash

set -e

ROOT_PATH="$(git rev-parse --show-toplevel)"
source ${ROOT_PATH}/scripts/helper

print_header "Install/Update mods"
support_arch

case "$OS" in
Darwin)
  brew install protobuf protoc-gen-go protoc-gen-go-grpc goose golangci-lint
  ;;
Linux)
  if ! [ -d ${ROOT_PATH}/.vscode/tmp ]; then
    mkdir ${ROOT_PATH}/.vscode/tmp
  fi

  # install golang linter
  GOLINTER_LATEST=$(get_latest_release "golangci/golangci-lint")
  wget "https://github.com/golangci/golangci-lint/releases/download/${GOLINTER_LATEST}/golangci-lint-${GOLINTER_LATEST#*v}-linux-amd64.tar.gz" -4 -q -O ${ROOT_PATH}/.vscode/tmp/golangci-lint.tar.gz
  tar --no-same-owner -xzf ${ROOT_PATH}/.vscode/tmp/golangci-lint.tar.gz -C ${ROOT_PATH}/.vscode/tmp
  install "${ROOT_PATH}/.vscode/tmp/golangci-lint-${GOLINTER_LATEST#*v}-linux-amd64/golangci-lint" "$HOME/.local/bin"

  PROTOS_LATEST=$(get_latest_release "protocolbuffers/protobuf")
  wget "https://github.com/protocolbuffers/protobuf/releases/download/${PROTOS_LATEST}/protoc-${PROTOS_LATEST#*v}-linux-x86_64.zip" -4 -q -O ${ROOT_PATH}/.vscode/tmp/protoc.zip
  unzip -o ${ROOT_PATH}/.vscode/tmp/protoc.zip -d $HOME/.local >/dev/null 2>&1

  # install protoc-gen-go
  go install google.golang.org/protobuf/cmd/protoc-gen-go@latest

  # install protoc-gen-go-grpc
  go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

  # install protoc-go-inject-tag
  go install github.com/favadi/protoc-go-inject-tag@latest

  # install goose
  go install github.com/pressly/goose/v3/cmd/goose@latest

  rm -rf ${ROOT_PATH}/.vscode/tmp

  source ~/.profile
  ;;
*)
  print_answer "ERROR" red
  echo "Unsupported OS: $OS"
  exit
  ;;
esac

print_answer "SUCCESS" green
