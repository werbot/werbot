// @generated by protobuf-ts 2.8.2 with parameter use_proto_field_name,ts_nocheck,long_type_string,force_optimize_code_size,force_client_none
// @generated from protobuf file "firewall.proto" (package "firewall", syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * -----------------------------------------------------
 * global messages
 *
 * @generated from protobuf message firewall.Country
 */
export interface Country {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string server_id = 2;
     */
    server_id: string;
    /**
     * @generated from protobuf field: string country_name = 3;
     */
    country_name: string;
    /**
     * @generated from protobuf field: string country_code = 4;
     */
    country_code: string;
}
/**
 * @generated from protobuf message firewall.Network
 */
export interface Network {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string server_id = 2;
     */
    server_id: string;
    /**
     * @generated from protobuf field: string start_ip = 3;
     */
    start_ip: string;
    /**
     * @generated from protobuf field: string end_ip = 4;
     */
    end_ip: string;
}
/**
 * @generated from protobuf message firewall.AccessList
 */
export interface AccessList {
    /**
     * @generated from protobuf field: string server_id = 1;
     */
    server_id: string;
    /**
     * @generated from protobuf field: bool country = 2;
     */
    country: boolean;
    /**
     * @generated from protobuf field: bool network = 3;
     */
    network: boolean;
}
/**
 * @generated from protobuf message firewall.IpMask
 */
export interface IpMask {
    /**
     * @generated from protobuf field: string start_ip = 1;
     */
    start_ip: string;
    /**
     * @generated from protobuf field: string end_ip = 2;
     */
    end_ip: string;
}
/**
 * @generated from protobuf message firewall.CountryCode
 */
export interface CountryCode {
    /**
     * @generated from protobuf field: string code = 1;
     */
    code: string;
}
/**
 * rpc ServerFirewall
 *
 * @generated from protobuf message firewall.ServerFirewall
 */
export interface ServerFirewall {
}
/**
 * @generated from protobuf message firewall.ServerFirewall.Request
 */
export interface ServerFirewall_Request {
    /**
     * @generated from protobuf field: string user_id = 1;
     */
    user_id: string; // @gotags: query:"user_id"
    /**
     * @generated from protobuf field: string project_id = 2;
     */
    project_id: string; // @gotags: query:"project_id"
    /**
     * @generated from protobuf field: string server_id = 3;
     */
    server_id: string;
}
/**
 * @generated from protobuf message firewall.ServerFirewall.Response
 */
export interface ServerFirewall_Response {
    /**
     * @generated from protobuf field: firewall.ServerFirewall.Response.Countries country = 1;
     */
    country?: ServerFirewall_Response_Countries;
    /**
     * @generated from protobuf field: firewall.ServerFirewall.Response.Networks network = 2;
     */
    network?: ServerFirewall_Response_Networks;
}
/**
 * @generated from protobuf message firewall.ServerFirewall.Response.Countries
 */
export interface ServerFirewall_Response_Countries {
    /**
     * @generated from protobuf field: bool wite_list = 1;
     */
    wite_list: boolean;
    /**
     * @generated from protobuf field: repeated firewall.Country list = 2;
     */
    list: Country[];
}
/**
 * @generated from protobuf message firewall.ServerFirewall.Response.Networks
 */
export interface ServerFirewall_Response_Networks {
    /**
     * @generated from protobuf field: bool wite_list = 1;
     */
    wite_list: boolean;
    /**
     * @generated from protobuf field: repeated firewall.Network list = 2;
     */
    list: Network[];
}
/**
 * rpc AddServerFirewall
 *
 * @generated from protobuf message firewall.AddServerFirewall
 */
export interface AddServerFirewall {
}
/**
 * @generated from protobuf message firewall.AddServerFirewall.Request
 */
export interface AddServerFirewall_Request {
    /**
     * @generated from protobuf field: string user_id = 1;
     */
    user_id: string;
    /**
     * @generated from protobuf field: string project_id = 2;
     */
    project_id: string;
    /**
     * @generated from protobuf field: string server_id = 3;
     */
    server_id: string;
    /**
     * @generated from protobuf oneof: record
     */
    record: {
        oneofKind: "ip";
        /**
         * @generated from protobuf field: firewall.IpMask ip = 4;
         */
        ip: IpMask;
    } | {
        oneofKind: "country";
        /**
         * @generated from protobuf field: firewall.CountryCode country = 5;
         */
        country: CountryCode;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message firewall.AddServerFirewall.Response
 */
export interface AddServerFirewall_Response {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
}
/**
 * rpc DeleteServerFirewall
 *
 * @generated from protobuf message firewall.DeleteServerFirewall
 */
export interface DeleteServerFirewall {
}
/**
 * @generated from protobuf message firewall.DeleteServerFirewall.Request
 */
export interface DeleteServerFirewall_Request {
    /**
     * @generated from protobuf field: string user_id = 1;
     */
    user_id: string;
    /**
     * @generated from protobuf field: string project_id = 2;
     */
    project_id: string;
    /**
     * @generated from protobuf field: string server_id = 3;
     */
    server_id: string;
    /**
     * @generated from protobuf field: firewall.Rules rule = 4;
     */
    rule: Rules;
    /**
     * @generated from protobuf field: string record_id = 5;
     */
    record_id: string;
}
/**
 * @generated from protobuf message firewall.DeleteServerFirewall.Response
 */
export interface DeleteServerFirewall_Response {
}
/**
 * rpc UpdateAccessPolicy
 *
 * @generated from protobuf message firewall.UpdateAccessPolicy
 */
export interface UpdateAccessPolicy {
}
/**
 * @generated from protobuf message firewall.UpdateAccessPolicy.Request
 */
export interface UpdateAccessPolicy_Request {
    /**
     * @generated from protobuf field: string user_id = 1;
     */
    user_id: string;
    /**
     * @generated from protobuf field: string project_id = 2;
     */
    project_id: string;
    /**
     * @generated from protobuf field: string server_id = 3;
     */
    server_id: string;
    /**
     * @generated from protobuf field: firewall.Rules rule = 4;
     */
    rule: Rules;
    /**
     * @generated from protobuf field: bool status = 5;
     */
    status: boolean;
}
/**
 * @generated from protobuf message firewall.UpdateAccessPolicy.Response
 */
export interface UpdateAccessPolicy_Response {
}
/**
 * rpc CheckIPAccess
 *
 * @generated from protobuf message firewall.CheckIPAccess
 */
export interface CheckIPAccess {
}
/**
 * @generated from protobuf message firewall.CheckIPAccess.Request
 */
export interface CheckIPAccess_Request {
    /**
     * @generated from protobuf field: string client_ip = 1;
     */
    client_ip: string;
}
/**
 * @generated from protobuf message firewall.CheckIPAccess.Response
 */
export interface CheckIPAccess_Response {
    /**
     * @generated from protobuf field: bool access = 1;
     */
    access: boolean;
    /**
     * @generated from protobuf field: string country = 2;
     */
    country: string;
}
/**
 * rpc CheckServerAccess
 *
 * @generated from protobuf message firewall.CheckServerAccess
 */
export interface CheckServerAccess {
}
/**
 * @generated from protobuf message firewall.CheckServerAccess.Request
 */
export interface CheckServerAccess_Request {
    /**
     * @generated from protobuf field: string client_ip = 1;
     */
    client_ip: string;
    /**
     * @generated from protobuf field: string country = 2;
     */
    country: string;
    /**
     * @generated from protobuf field: string account_id = 3;
     */
    account_id: string;
    /**
     * @generated from protobuf field: string user_id = 4;
     */
    user_id: string;
}
/**
 * @generated from protobuf message firewall.CheckServerAccess.Response
 */
export interface CheckServerAccess_Response {
    /**
     * @generated from protobuf field: bool access = 1;
     */
    access: boolean;
}
/**
 * @generated from protobuf enum firewall.Rules
 */
export enum Rules {
    /**
     * @generated from protobuf enum value: unspecified = 0;
     */
    unspecified = 0,
    /**
     * @generated from protobuf enum value: country = 1;
     */
    country = 1,
    /**
     * @generated from protobuf enum value: ip = 2;
     */
    ip = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class Country$Type extends MessageType<Country> {
    constructor() {
        super("firewall.Country", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "server_id", kind: "scalar", localName: "server_id", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "country_name", kind: "scalar", localName: "country_name", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "country_code", kind: "scalar", localName: "country_code", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message firewall.Country
 */
export const Country = new Country$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Network$Type extends MessageType<Network> {
    constructor() {
        super("firewall.Network", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "server_id", kind: "scalar", localName: "server_id", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "start_ip", kind: "scalar", localName: "start_ip", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "end_ip", kind: "scalar", localName: "end_ip", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message firewall.Network
 */
export const Network = new Network$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccessList$Type extends MessageType<AccessList> {
    constructor() {
        super("firewall.AccessList", [
            { no: 1, name: "server_id", kind: "scalar", localName: "server_id", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "country", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "network", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message firewall.AccessList
 */
export const AccessList = new AccessList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IpMask$Type extends MessageType<IpMask> {
    constructor() {
        super("firewall.IpMask", [
            { no: 1, name: "start_ip", kind: "scalar", localName: "start_ip", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "end_ip", kind: "scalar", localName: "end_ip", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message firewall.IpMask
 */
export const IpMask = new IpMask$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CountryCode$Type extends MessageType<CountryCode> {
    constructor() {
        super("firewall.CountryCode", [
            { no: 1, name: "code", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message firewall.CountryCode
 */
export const CountryCode = new CountryCode$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ServerFirewall$Type extends MessageType<ServerFirewall> {
    constructor() {
        super("firewall.ServerFirewall", []);
    }
}
/**
 * @generated MessageType for protobuf message firewall.ServerFirewall
 */
export const ServerFirewall = new ServerFirewall$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ServerFirewall_Request$Type extends MessageType<ServerFirewall_Request> {
    constructor() {
        super("firewall.ServerFirewall.Request", [
            { no: 1, name: "user_id", kind: "scalar", localName: "user_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true } } } },
            { no: 2, name: "project_id", kind: "scalar", localName: "project_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true } } } },
            { no: 3, name: "server_id", kind: "scalar", localName: "server_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message firewall.ServerFirewall.Request
 */
export const ServerFirewall_Request = new ServerFirewall_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ServerFirewall_Response$Type extends MessageType<ServerFirewall_Response> {
    constructor() {
        super("firewall.ServerFirewall.Response", [
            { no: 1, name: "country", kind: "message", T: () => ServerFirewall_Response_Countries },
            { no: 2, name: "network", kind: "message", T: () => ServerFirewall_Response_Networks }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message firewall.ServerFirewall.Response
 */
export const ServerFirewall_Response = new ServerFirewall_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ServerFirewall_Response_Countries$Type extends MessageType<ServerFirewall_Response_Countries> {
    constructor() {
        super("firewall.ServerFirewall.Response.Countries", [
            { no: 1, name: "wite_list", kind: "scalar", localName: "wite_list", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Country }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message firewall.ServerFirewall.Response.Countries
 */
export const ServerFirewall_Response_Countries = new ServerFirewall_Response_Countries$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ServerFirewall_Response_Networks$Type extends MessageType<ServerFirewall_Response_Networks> {
    constructor() {
        super("firewall.ServerFirewall.Response.Networks", [
            { no: 1, name: "wite_list", kind: "scalar", localName: "wite_list", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Network }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message firewall.ServerFirewall.Response.Networks
 */
export const ServerFirewall_Response_Networks = new ServerFirewall_Response_Networks$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddServerFirewall$Type extends MessageType<AddServerFirewall> {
    constructor() {
        super("firewall.AddServerFirewall", []);
    }
}
/**
 * @generated MessageType for protobuf message firewall.AddServerFirewall
 */
export const AddServerFirewall = new AddServerFirewall$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddServerFirewall_Request$Type extends MessageType<AddServerFirewall_Request> {
    constructor() {
        super("firewall.AddServerFirewall.Request", [
            { no: 1, name: "user_id", kind: "scalar", localName: "user_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true } } } },
            { no: 2, name: "project_id", kind: "scalar", localName: "project_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true } } } },
            { no: 3, name: "server_id", kind: "scalar", localName: "server_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true } } } },
            { no: 4, name: "ip", kind: "message", oneof: "record", T: () => IpMask },
            { no: 5, name: "country", kind: "message", oneof: "record", T: () => CountryCode }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message firewall.AddServerFirewall.Request
 */
export const AddServerFirewall_Request = new AddServerFirewall_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddServerFirewall_Response$Type extends MessageType<AddServerFirewall_Response> {
    constructor() {
        super("firewall.AddServerFirewall.Response", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message firewall.AddServerFirewall.Response
 */
export const AddServerFirewall_Response = new AddServerFirewall_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteServerFirewall$Type extends MessageType<DeleteServerFirewall> {
    constructor() {
        super("firewall.DeleteServerFirewall", []);
    }
}
/**
 * @generated MessageType for protobuf message firewall.DeleteServerFirewall
 */
export const DeleteServerFirewall = new DeleteServerFirewall$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteServerFirewall_Request$Type extends MessageType<DeleteServerFirewall_Request> {
    constructor() {
        super("firewall.DeleteServerFirewall.Request", [
            { no: 1, name: "user_id", kind: "scalar", localName: "user_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true } } } },
            { no: 2, name: "project_id", kind: "scalar", localName: "project_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true } } } },
            { no: 3, name: "server_id", kind: "scalar", localName: "server_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true } } } },
            { no: 4, name: "rule", kind: "enum", T: () => ["firewall.Rules", Rules] },
            { no: 5, name: "record_id", kind: "scalar", localName: "record_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message firewall.DeleteServerFirewall.Request
 */
export const DeleteServerFirewall_Request = new DeleteServerFirewall_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteServerFirewall_Response$Type extends MessageType<DeleteServerFirewall_Response> {
    constructor() {
        super("firewall.DeleteServerFirewall.Response", []);
    }
}
/**
 * @generated MessageType for protobuf message firewall.DeleteServerFirewall.Response
 */
export const DeleteServerFirewall_Response = new DeleteServerFirewall_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateAccessPolicy$Type extends MessageType<UpdateAccessPolicy> {
    constructor() {
        super("firewall.UpdateAccessPolicy", []);
    }
}
/**
 * @generated MessageType for protobuf message firewall.UpdateAccessPolicy
 */
export const UpdateAccessPolicy = new UpdateAccessPolicy$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateAccessPolicy_Request$Type extends MessageType<UpdateAccessPolicy_Request> {
    constructor() {
        super("firewall.UpdateAccessPolicy.Request", [
            { no: 1, name: "user_id", kind: "scalar", localName: "user_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true } } } },
            { no: 2, name: "project_id", kind: "scalar", localName: "project_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true } } } },
            { no: 3, name: "server_id", kind: "scalar", localName: "server_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true } } } },
            { no: 4, name: "rule", kind: "enum", T: () => ["firewall.Rules", Rules] },
            { no: 5, name: "status", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message firewall.UpdateAccessPolicy.Request
 */
export const UpdateAccessPolicy_Request = new UpdateAccessPolicy_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateAccessPolicy_Response$Type extends MessageType<UpdateAccessPolicy_Response> {
    constructor() {
        super("firewall.UpdateAccessPolicy.Response", []);
    }
}
/**
 * @generated MessageType for protobuf message firewall.UpdateAccessPolicy.Response
 */
export const UpdateAccessPolicy_Response = new UpdateAccessPolicy_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckIPAccess$Type extends MessageType<CheckIPAccess> {
    constructor() {
        super("firewall.CheckIPAccess", []);
    }
}
/**
 * @generated MessageType for protobuf message firewall.CheckIPAccess
 */
export const CheckIPAccess = new CheckIPAccess$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckIPAccess_Request$Type extends MessageType<CheckIPAccess_Request> {
    constructor() {
        super("firewall.CheckIPAccess.Request", [
            { no: 1, name: "client_ip", kind: "scalar", localName: "client_ip", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message firewall.CheckIPAccess.Request
 */
export const CheckIPAccess_Request = new CheckIPAccess_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckIPAccess_Response$Type extends MessageType<CheckIPAccess_Response> {
    constructor() {
        super("firewall.CheckIPAccess.Response", [
            { no: 1, name: "access", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "country", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message firewall.CheckIPAccess.Response
 */
export const CheckIPAccess_Response = new CheckIPAccess_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckServerAccess$Type extends MessageType<CheckServerAccess> {
    constructor() {
        super("firewall.CheckServerAccess", []);
    }
}
/**
 * @generated MessageType for protobuf message firewall.CheckServerAccess
 */
export const CheckServerAccess = new CheckServerAccess$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckServerAccess_Request$Type extends MessageType<CheckServerAccess_Request> {
    constructor() {
        super("firewall.CheckServerAccess.Request", [
            { no: 1, name: "client_ip", kind: "scalar", localName: "client_ip", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "country", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "account_id", kind: "scalar", localName: "account_id", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "user_id", kind: "scalar", localName: "user_id", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message firewall.CheckServerAccess.Request
 */
export const CheckServerAccess_Request = new CheckServerAccess_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckServerAccess_Response$Type extends MessageType<CheckServerAccess_Response> {
    constructor() {
        super("firewall.CheckServerAccess.Response", [
            { no: 1, name: "access", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message firewall.CheckServerAccess.Response
 */
export const CheckServerAccess_Response = new CheckServerAccess_Response$Type();
/**
 * @generated ServiceType for protobuf service firewall.FirewallHandlers
 */
export const FirewallHandlers = new ServiceType("firewall.FirewallHandlers", [
    { name: "ServerFirewall", options: {}, I: ServerFirewall_Request, O: ServerFirewall_Response },
    { name: "AddServerFirewall", options: {}, I: AddServerFirewall_Request, O: AddServerFirewall_Response },
    { name: "DeleteServerFirewall", options: {}, I: DeleteServerFirewall_Request, O: DeleteServerFirewall_Response },
    { name: "UpdateAccessPolicy", options: {}, I: UpdateAccessPolicy_Request, O: UpdateAccessPolicy_Response },
    { name: "CheckIPAccess", options: {}, I: CheckIPAccess_Request, O: CheckIPAccess_Response },
    { name: "CheckServerAccess", options: {}, I: CheckServerAccess_Request, O: CheckServerAccess_Response }
]);
