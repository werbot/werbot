// @generated by protobuf-ts 2.8.2 with parameter use_proto_field_name,ts_nocheck,long_type_string,force_optimize_code_size,force_client_none
// @generated from protobuf file "subscription.proto" (package "subscription", syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "./google/protobuf/timestamp";
/**
 * use only on http answer to ROLE_USER
 *
 * @generated from protobuf message subscription.PlansLite
 */
export interface PlansLite {
    /**
     * @generated from protobuf field: int32 total = 1;
     */
    total: number;
    /**
     * @generated from protobuf field: repeated subscription.PlansLite.PlanLite plans = 2;
     */
    plans: PlansLite_PlanLite[];
}
/**
 * @generated from protobuf message subscription.PlansLite.PlanLite
 */
export interface PlansLite_PlanLite {
    /**
     * @generated from protobuf field: string plan_id = 1;
     */
    plan_id: string;
    /**
     * @generated from protobuf field: int32 cost = 2;
     */
    cost: number;
    /**
     * @generated from protobuf field: int32 period = 3;
     */
    period: number;
    /**
     * @generated from protobuf field: string title = 4;
     */
    title: string;
    /**
     * @generated from protobuf field: string image = 5;
     */
    image: string;
    /**
     * @generated from protobuf field: int32 trial_period = 6;
     */
    trial_period: number;
    /**
     * @generated from protobuf field: int32 limits_servers = 7;
     */
    limits_servers: number;
    /**
     * @generated from protobuf field: int32 limits_users = 8;
     */
    limits_users: number;
    /**
     * @generated from protobuf field: int32 limits_companies = 9;
     */
    limits_companies: number;
    /**
     * @generated from protobuf field: int32 limits_connections = 10;
     */
    limits_connections: number;
}
/**
 * rpc ListSubscriptions
 *
 * @generated from protobuf message subscription.ListSubscriptions
 */
export interface ListSubscriptions {
}
/**
 * @generated from protobuf message subscription.ListSubscriptions.Request
 */
export interface ListSubscriptions_Request {
    /**
     * @generated from protobuf field: int32 limit = 1;
     */
    limit: number;
    /**
     * @generated from protobuf field: int32 offset = 2;
     */
    offset: number;
    /**
     * @generated from protobuf field: string sort_by = 3;
     */
    sort_by: string;
    /**
     * @generated from protobuf field: string query = 4;
     */
    query: string;
    /**
     * @generated from protobuf field: string user_id = 5;
     */
    user_id: string; // @gotags: query:"user_id" params:"user_id"
}
/**
 * @generated from protobuf message subscription.ListSubscriptions.Response
 */
export interface ListSubscriptions_Response {
    /**
     * @generated from protobuf field: int32 total = 1;
     */
    total: number;
    /**
     * @generated from protobuf field: repeated subscription.Subscription.Response subscriptions = 2;
     */
    subscriptions: Subscription_Response[];
}
/**
 * rpc Subscription
 *
 * @generated from protobuf message subscription.Subscription
 */
export interface Subscription {
}
/**
 * @generated from protobuf message subscription.Subscription.Request
 */
export interface Subscription_Request {
    /**
     * @generated from protobuf field: string subscription_id = 1;
     */
    subscription_id: string;
}
/**
 * @generated from protobuf message subscription.Subscription.Response
 */
export interface Subscription_Response {
    /**
     * @generated from protobuf field: string subscription_id = 1;
     */
    subscription_id: string;
    /**
     * @generated from protobuf field: string customer_id = 2;
     */
    customer_id: string;
    /**
     * @generated from protobuf field: string customer_name = 3;
     */
    customer_name: string;
    /**
     * @generated from protobuf field: string plan_id = 4;
     */
    plan_id: string;
    /**
     * @generated from protobuf field: string plan_name = 5;
     */
    plan_name: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp start_date = 6;
     */
    start_date?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp end_date = 7;
     */
    end_date?: Timestamp;
    /**
     * @generated from protobuf field: string state = 8;
     */
    state: string;
    /**
     * @generated from protobuf field: string stripe_id = 9;
     */
    stripe_id: string;
}
/**
 * rpc AddSubscription
 *
 * @generated from protobuf message subscription.AddSubscription
 */
export interface AddSubscription {
}
/**
 * @generated from protobuf message subscription.AddSubscription.Request
 */
export interface AddSubscription_Request {
    /**
     * @generated from protobuf field: string subscription_id = 1;
     */
    subscription_id: string;
    /**
     * @generated from protobuf field: string customer_id = 2;
     */
    customer_id: string;
    /**
     * @generated from protobuf field: string customer_name = 3;
     */
    customer_name: string;
    /**
     * @generated from protobuf field: string plan_id = 4;
     */
    plan_id: string;
    /**
     * @generated from protobuf field: string plan_name = 5;
     */
    plan_name: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp start_date = 6;
     */
    start_date?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp end_date = 7;
     */
    end_date?: Timestamp;
    /**
     * @generated from protobuf field: string state = 8;
     */
    state: string;
    /**
     * @generated from protobuf field: string stripe_id = 9;
     */
    stripe_id: string;
}
/**
 * @generated from protobuf message subscription.AddSubscription.Response
 */
export interface AddSubscription_Response {
    /**
     * @generated from protobuf field: string subscription_id = 1;
     */
    subscription_id: string;
}
/**
 * rpc UpdateSubscription
 *
 * @generated from protobuf message subscription.UpdateSubscription
 */
export interface UpdateSubscription {
}
/**
 * @generated from protobuf message subscription.UpdateSubscription.Request
 */
export interface UpdateSubscription_Request {
    /**
     * @generated from protobuf field: string subscription_id = 1;
     */
    subscription_id: string; // @gotags: query:"user_id" params:"user_id"
    /**
     * @generated from protobuf field: string customer_id = 2;
     */
    customer_id: string;
    /**
     * @generated from protobuf field: string customer_name = 3;
     */
    customer_name: string;
    /**
     * @generated from protobuf field: string plan_id = 4;
     */
    plan_id: string;
    /**
     * @generated from protobuf field: string plan_name = 5;
     */
    plan_name: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp start_date = 6;
     */
    start_date?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp end_date = 7;
     */
    end_date?: Timestamp;
    /**
     * @generated from protobuf field: string state = 8;
     */
    state: string;
    /**
     * @generated from protobuf field: string stripe_id = 9;
     */
    stripe_id: string;
}
/**
 * @generated from protobuf message subscription.UpdateSubscription.Response
 */
export interface UpdateSubscription_Response {
}
/**
 * rpc DeleteSubscription
 *
 * @generated from protobuf message subscription.DeleteSubscription
 */
export interface DeleteSubscription {
}
/**
 * @generated from protobuf message subscription.DeleteSubscription.Request
 */
export interface DeleteSubscription_Request {
    /**
     * @generated from protobuf field: string subscription_id = 1;
     */
    subscription_id: string; // @gotags: query:"user_id" params:"user_id"
}
/**
 * @generated from protobuf message subscription.DeleteSubscription.Response
 */
export interface DeleteSubscription_Response {
}
/**
 * rpc ListPlans
 *
 * @generated from protobuf message subscription.ListPlans
 */
export interface ListPlans {
}
/**
 * @generated from protobuf message subscription.ListPlans.Request
 */
export interface ListPlans_Request {
    /**
     * @generated from protobuf field: int32 limit = 1;
     */
    limit: number;
    /**
     * @generated from protobuf field: int32 offset = 2;
     */
    offset: number;
    /**
     * @generated from protobuf field: string sort_by = 3;
     */
    sort_by: string;
    /**
     * @generated from protobuf field: string query = 4;
     */
    query: string;
    /**
     * @generated from protobuf field: string user_id = 5;
     */
    user_id: string; // @gotags: query:"user_id" params:"user_id"
}
/**
 * @generated from protobuf message subscription.ListPlans.Response
 */
export interface ListPlans_Response {
    /**
     * @generated from protobuf field: int32 total = 1;
     */
    total: number;
    /**
     * @generated from protobuf field: repeated subscription.ListPlans.Response.PlanInfo plans = 2;
     */
    plans: ListPlans_Response_PlanInfo[];
}
/**
 * @generated from protobuf message subscription.ListPlans.Response.PlanInfo
 */
export interface ListPlans_Response_PlanInfo {
    /**
     * @generated from protobuf field: int32 subscription_count = 1;
     */
    subscription_count: number;
    /**
     * @generated from protobuf field: subscription.Plan.Response plan = 2;
     */
    plan?: Plan_Response;
}
/**
 * rpc Plan
 *
 * @generated from protobuf message subscription.Plan
 */
export interface Plan {
}
/**
 * @generated from protobuf message subscription.Plan.Request
 */
export interface Plan_Request {
    /**
     * @generated from protobuf field: string plan_id = 1;
     */
    plan_id: string; // @gotags: query:"user_id" params:"user_id"
}
/**
 * @generated from protobuf message subscription.Plan.Response
 */
export interface Plan_Response {
    /**
     * @generated from protobuf field: string plan_id = 1;
     */
    plan_id: string;
    /**
     * @generated from protobuf field: int32 cost = 2;
     */
    cost: number;
    /**
     * @generated from protobuf field: int32 period = 3;
     */
    period: number;
    /**
     * @generated from protobuf field: string title = 4;
     */
    title: string;
    /**
     * @generated from protobuf field: string stripe_id = 5;
     */
    stripe_id: string;
    /**
     * @generated from protobuf field: repeated string allowed_sections = 6;
     */
    allowed_sections: string[];
    /**
     * @generated from protobuf field: map<int32, string> benefits = 7;
     */
    benefits: {
        [key: number]: string;
    };
    /**
     * @generated from protobuf field: string image = 8;
     */
    image: string;
    /**
     * @generated from protobuf field: bool active = 9;
     */
    active: boolean;
    /**
     * @generated from protobuf field: bool trial = 10;
     */
    trial: boolean;
    /**
     * @generated from protobuf field: int32 trial_period = 11;
     */
    trial_period: number;
    /**
     * @generated from protobuf field: int32 limits_servers = 12;
     */
    limits_servers: number;
    /**
     * @generated from protobuf field: int32 limits_users = 13;
     */
    limits_users: number;
    /**
     * @generated from protobuf field: int32 limits_companies = 14;
     */
    limits_companies: number;
    /**
     * @generated from protobuf field: int32 limits_connections = 15;
     */
    limits_connections: number;
    /**
     * @generated from protobuf field: bool default = 16;
     */
    default: boolean;
}
/**
 * rpc UpdatePlan
 *
 * @generated from protobuf message subscription.UpdatePlan
 */
export interface UpdatePlan {
}
/**
 * @generated from protobuf message subscription.UpdatePlan.Request
 */
export interface UpdatePlan_Request {
    /**
     * @generated from protobuf field: string plan_id = 1;
     */
    plan_id: string; // @gotags: query:"user_id" params:"user_id"
    /**
     * @generated from protobuf field: int32 cost = 2;
     */
    cost: number;
    /**
     * @generated from protobuf field: int32 period = 3;
     */
    period: number;
    /**
     * @generated from protobuf field: string title = 4;
     */
    title: string;
    /**
     * @generated from protobuf field: string stripe_id = 5;
     */
    stripe_id: string;
    /**
     * @generated from protobuf field: repeated string allowed_sections = 6;
     */
    allowed_sections: string[];
    /**
     * @generated from protobuf field: map<int32, string> benefits = 7;
     */
    benefits: {
        [key: number]: string;
    };
    /**
     * @generated from protobuf field: string image = 8;
     */
    image: string;
    /**
     * @generated from protobuf field: bool active = 9;
     */
    active: boolean;
    /**
     * @generated from protobuf field: bool trial = 10;
     */
    trial: boolean;
    /**
     * @generated from protobuf field: int32 trial_period = 11;
     */
    trial_period: number;
    /**
     * @generated from protobuf field: int32 limits_servers = 12;
     */
    limits_servers: number;
    /**
     * @generated from protobuf field: int32 limits_users = 13;
     */
    limits_users: number;
    /**
     * @generated from protobuf field: int32 limits_companies = 14;
     */
    limits_companies: number;
    /**
     * @generated from protobuf field: int32 limits_connections = 15;
     */
    limits_connections: number;
    /**
     * @generated from protobuf field: bool default = 16;
     */
    default: boolean;
}
/**
 * @generated from protobuf message subscription.UpdatePlan.Response
 */
export interface UpdatePlan_Response {
}
/**
 * rpc ListCustomers
 *
 * @generated from protobuf message subscription.ListCustomers
 */
export interface ListCustomers {
}
/**
 * @generated from protobuf message subscription.ListCustomers.Request
 */
export interface ListCustomers_Request {
    /**
     * @generated from protobuf field: int32 limit = 1;
     */
    limit: number;
    /**
     * @generated from protobuf field: int32 offset = 2;
     */
    offset: number;
    /**
     * @generated from protobuf field: string sort_by = 3;
     */
    sort_by: string;
}
/**
 * @generated from protobuf message subscription.ListCustomers.Response
 */
export interface ListCustomers_Response {
    /**
     * @generated from protobuf field: int32 total = 1;
     */
    total: number;
    /**
     * @generated from protobuf field: repeated subscription.Customer.Response customers = 2;
     */
    customers: Customer_Response[];
}
/**
 * rpc Customer
 *
 * @generated from protobuf message subscription.Customer
 */
export interface Customer {
}
/**
 * @generated from protobuf message subscription.Customer.Request
 */
export interface Customer_Request {
    /**
     * @generated from protobuf field: string user_id = 1;
     */
    user_id: string; // @gotags: query:"user_id" params:"user_id"
}
/**
 * @generated from protobuf message subscription.Customer.Response
 */
export interface Customer_Response {
    /**
     * @generated from protobuf field: string user_id = 1;
     */
    user_id: string;
    /**
     * @generated from protobuf field: string stripe_id = 2;
     */
    stripe_id: string;
}
/**
 * rpc AddCustomer
 *
 * @generated from protobuf message subscription.AddCustomer
 */
export interface AddCustomer {
}
/**
 * @generated from protobuf message subscription.AddCustomer.Request
 */
export interface AddCustomer_Request {
    /**
     * @generated from protobuf field: string user_id = 1;
     */
    user_id: string;
    /**
     * @generated from protobuf field: string stripe_id = 2;
     */
    stripe_id: string;
}
/**
 * @generated from protobuf message subscription.AddCustomer.Response
 */
export interface AddCustomer_Response {
    /**
     * @generated from protobuf field: string customer_id = 1;
     */
    customer_id: string;
}
/**
 * rpc UpdateCustomer
 *
 * @generated from protobuf message subscription.UpdateCustomer
 */
export interface UpdateCustomer {
}
/**
 * @generated from protobuf message subscription.UpdateCustomer.Request
 */
export interface UpdateCustomer_Request {
    /**
     * @generated from protobuf field: string user_id = 1;
     */
    user_id: string;
    /**
     * @generated from protobuf field: string stripe_id = 2;
     */
    stripe_id: string;
}
/**
 * @generated from protobuf message subscription.UpdateCustomer.Response
 */
export interface UpdateCustomer_Response {
}
/**
 * rpc DeleteCustomer
 *
 * @generated from protobuf message subscription.DeleteCustomer
 */
export interface DeleteCustomer {
}
/**
 * @generated from protobuf message subscription.DeleteCustomer.Request
 */
export interface DeleteCustomer_Request {
    /**
     * @generated from protobuf field: string user_id = 1;
     */
    user_id: string; // @gotags: query:"user_id" params:"user_id"
}
/**
 * @generated from protobuf message subscription.DeleteCustomer.Response
 */
export interface DeleteCustomer_Response {
}
/**
 * rpc Changes
 *
 * @generated from protobuf message subscription.Changes
 */
export interface Changes {
}
/**
 * @generated from protobuf message subscription.Changes.Request
 */
export interface Changes_Request {
    /**
     * @generated from protobuf field: int32 limit = 1;
     */
    limit: number;
    /**
     * @generated from protobuf field: int32 offset = 2;
     */
    offset: number;
    /**
     * @generated from protobuf field: string sort_by = 3;
     */
    sort_by: string;
    /**
     * @generated from protobuf field: string query = 4;
     */
    query: string;
}
/**
 * @generated from protobuf message subscription.Changes.Response
 */
export interface Changes_Response {
    /**
     * @generated from protobuf field: int32 total = 1;
     */
    total: number;
    /**
     * @generated from protobuf field: repeated subscription.Changes.Response.Change change = 2;
     */
    change: Changes_Response_Change[];
}
/**
 * @generated from protobuf message subscription.Changes.Response.Change
 */
export interface Changes_Response_Change {
    /**
     * @generated from protobuf field: string change_id = 1;
     */
    change_id: string;
    /**
     * @generated from protobuf field: string subscription_id = 2;
     */
    subscription_id: string;
    /**
     * @generated from protobuf field: string plan_id = 3;
     */
    plan_id: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp date = 4;
     */
    date?: Timestamp;
}
/**
 * rpc Invoices
 *
 * @generated from protobuf message subscription.Invoices
 */
export interface Invoices {
}
/**
 * @generated from protobuf message subscription.Invoices.Request
 */
export interface Invoices_Request {
    /**
     * @generated from protobuf field: int32 limit = 1;
     */
    limit: number;
    /**
     * @generated from protobuf field: int32 offset = 2;
     */
    offset: number;
    /**
     * @generated from protobuf field: string sort_by = 3;
     */
    sort_by: string;
    /**
     * @generated from protobuf field: string query = 4;
     */
    query: string;
}
/**
 * @generated from protobuf message subscription.Invoices.Response
 */
export interface Invoices_Response {
    /**
     * @generated from protobuf field: int32 total = 1;
     */
    total: number;
    /**
     * @generated from protobuf field: repeated subscription.Invoices.Response.Invoice invoice = 2;
     */
    invoice: Invoices_Response_Invoice[];
}
/**
 * @generated from protobuf message subscription.Invoices.Response.Invoice
 */
export interface Invoices_Response_Invoice {
    /**
     * @generated from protobuf field: string invoice_id = 1;
     */
    invoice_id: string;
    /**
     * @generated from protobuf field: string subscription_id = 2;
     */
    subscription_id: string;
    /**
     * @generated from protobuf field: string plan_id = 3;
     */
    plan_id: string;
    /**
     * @generated from protobuf field: string stripe_id = 4;
     */
    stripe_id: string;
    /**
     * @generated from protobuf field: string url = 5;
     */
    url: string;
    /**
     * @generated from protobuf field: string status = 6;
     */
    status: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp date = 7;
     */
    date?: Timestamp;
    /**
     * @generated from protobuf field: int32 amount = 8;
     */
    amount: number;
    /**
     * @generated from protobuf field: string currency = 9;
     */
    currency: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp period_start = 10;
     */
    period_start?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp period_end = 11;
     */
    period_end?: Timestamp;
}
/**
 * @generated from protobuf enum subscription.Sections
 */
export enum Sections {
    /**
     * @generated from protobuf enum value: servers = 0;
     */
    servers = 0,
    /**
     * @generated from protobuf enum value: members = 1;
     */
    members = 1,
    /**
     * @generated from protobuf enum value: invites = 2;
     */
    invites = 2,
    /**
     * @generated from protobuf enum value: ldap = 3;
     */
    ldap = 3,
    /**
     * @generated from protobuf enum value: tasks = 4;
     */
    tasks = 4,
    /**
     * @generated from protobuf enum value: security = 5;
     */
    security = 5,
    /**
     * @generated from protobuf enum value: log_activities = 6;
     */
    log_activities = 6
}
// @generated message type with reflection information, may provide speed optimized methods
class PlansLite$Type extends MessageType<PlansLite> {
    constructor() {
        super("subscription.PlansLite", [
            { no: 1, name: "total", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "plans", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => PlansLite_PlanLite }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.PlansLite
 */
export const PlansLite = new PlansLite$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlansLite_PlanLite$Type extends MessageType<PlansLite_PlanLite> {
    constructor() {
        super("subscription.PlansLite.PlanLite", [
            { no: 1, name: "plan_id", kind: "scalar", localName: "plan_id", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cost", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "period", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "image", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "trial_period", kind: "scalar", localName: "trial_period", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "limits_servers", kind: "scalar", localName: "limits_servers", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "limits_users", kind: "scalar", localName: "limits_users", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "limits_companies", kind: "scalar", localName: "limits_companies", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "limits_connections", kind: "scalar", localName: "limits_connections", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.PlansLite.PlanLite
 */
export const PlansLite_PlanLite = new PlansLite_PlanLite$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListSubscriptions$Type extends MessageType<ListSubscriptions> {
    constructor() {
        super("subscription.ListSubscriptions", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.ListSubscriptions
 */
export const ListSubscriptions = new ListSubscriptions$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListSubscriptions_Request$Type extends MessageType<ListSubscriptions_Request> {
    constructor() {
        super("subscription.ListSubscriptions.Request", [
            { no: 1, name: "limit", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "offset", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "sort_by", kind: "scalar", localName: "sort_by", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "query", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "user_id", kind: "scalar", localName: "user_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true, ignoreEmpty: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.ListSubscriptions.Request
 */
export const ListSubscriptions_Request = new ListSubscriptions_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListSubscriptions_Response$Type extends MessageType<ListSubscriptions_Response> {
    constructor() {
        super("subscription.ListSubscriptions.Response", [
            { no: 1, name: "total", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "subscriptions", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Subscription_Response }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.ListSubscriptions.Response
 */
export const ListSubscriptions_Response = new ListSubscriptions_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Subscription$Type extends MessageType<Subscription> {
    constructor() {
        super("subscription.Subscription", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.Subscription
 */
export const Subscription = new Subscription$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Subscription_Request$Type extends MessageType<Subscription_Request> {
    constructor() {
        super("subscription.Subscription.Request", [
            { no: 1, name: "subscription_id", kind: "scalar", localName: "subscription_id", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.Subscription.Request
 */
export const Subscription_Request = new Subscription_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Subscription_Response$Type extends MessageType<Subscription_Response> {
    constructor() {
        super("subscription.Subscription.Response", [
            { no: 1, name: "subscription_id", kind: "scalar", localName: "subscription_id", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "customer_id", kind: "scalar", localName: "customer_id", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "customer_name", kind: "scalar", localName: "customer_name", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "plan_id", kind: "scalar", localName: "plan_id", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "plan_name", kind: "scalar", localName: "plan_name", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "start_date", kind: "message", localName: "start_date", T: () => Timestamp },
            { no: 7, name: "end_date", kind: "message", localName: "end_date", T: () => Timestamp },
            { no: 8, name: "state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "stripe_id", kind: "scalar", localName: "stripe_id", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.Subscription.Response
 */
export const Subscription_Response = new Subscription_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddSubscription$Type extends MessageType<AddSubscription> {
    constructor() {
        super("subscription.AddSubscription", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.AddSubscription
 */
export const AddSubscription = new AddSubscription$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddSubscription_Request$Type extends MessageType<AddSubscription_Request> {
    constructor() {
        super("subscription.AddSubscription.Request", [
            { no: 1, name: "subscription_id", kind: "scalar", localName: "subscription_id", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "customer_id", kind: "scalar", localName: "customer_id", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "customer_name", kind: "scalar", localName: "customer_name", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "plan_id", kind: "scalar", localName: "plan_id", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "plan_name", kind: "scalar", localName: "plan_name", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "start_date", kind: "message", localName: "start_date", T: () => Timestamp },
            { no: 7, name: "end_date", kind: "message", localName: "end_date", T: () => Timestamp },
            { no: 8, name: "state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "stripe_id", kind: "scalar", localName: "stripe_id", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.AddSubscription.Request
 */
export const AddSubscription_Request = new AddSubscription_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddSubscription_Response$Type extends MessageType<AddSubscription_Response> {
    constructor() {
        super("subscription.AddSubscription.Response", [
            { no: 1, name: "subscription_id", kind: "scalar", localName: "subscription_id", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.AddSubscription.Response
 */
export const AddSubscription_Response = new AddSubscription_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateSubscription$Type extends MessageType<UpdateSubscription> {
    constructor() {
        super("subscription.UpdateSubscription", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.UpdateSubscription
 */
export const UpdateSubscription = new UpdateSubscription$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateSubscription_Request$Type extends MessageType<UpdateSubscription_Request> {
    constructor() {
        super("subscription.UpdateSubscription.Request", [
            { no: 1, name: "subscription_id", kind: "scalar", localName: "subscription_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true, ignoreEmpty: true } } } },
            { no: 2, name: "customer_id", kind: "scalar", localName: "customer_id", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "customer_name", kind: "scalar", localName: "customer_name", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "plan_id", kind: "scalar", localName: "plan_id", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "plan_name", kind: "scalar", localName: "plan_name", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "start_date", kind: "message", localName: "start_date", T: () => Timestamp },
            { no: 7, name: "end_date", kind: "message", localName: "end_date", T: () => Timestamp },
            { no: 8, name: "state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "stripe_id", kind: "scalar", localName: "stripe_id", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.UpdateSubscription.Request
 */
export const UpdateSubscription_Request = new UpdateSubscription_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateSubscription_Response$Type extends MessageType<UpdateSubscription_Response> {
    constructor() {
        super("subscription.UpdateSubscription.Response", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.UpdateSubscription.Response
 */
export const UpdateSubscription_Response = new UpdateSubscription_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteSubscription$Type extends MessageType<DeleteSubscription> {
    constructor() {
        super("subscription.DeleteSubscription", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.DeleteSubscription
 */
export const DeleteSubscription = new DeleteSubscription$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteSubscription_Request$Type extends MessageType<DeleteSubscription_Request> {
    constructor() {
        super("subscription.DeleteSubscription.Request", [
            { no: 1, name: "subscription_id", kind: "scalar", localName: "subscription_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true, ignoreEmpty: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.DeleteSubscription.Request
 */
export const DeleteSubscription_Request = new DeleteSubscription_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteSubscription_Response$Type extends MessageType<DeleteSubscription_Response> {
    constructor() {
        super("subscription.DeleteSubscription.Response", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.DeleteSubscription.Response
 */
export const DeleteSubscription_Response = new DeleteSubscription_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListPlans$Type extends MessageType<ListPlans> {
    constructor() {
        super("subscription.ListPlans", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.ListPlans
 */
export const ListPlans = new ListPlans$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListPlans_Request$Type extends MessageType<ListPlans_Request> {
    constructor() {
        super("subscription.ListPlans.Request", [
            { no: 1, name: "limit", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "offset", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "sort_by", kind: "scalar", localName: "sort_by", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "query", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "user_id", kind: "scalar", localName: "user_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true, ignoreEmpty: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.ListPlans.Request
 */
export const ListPlans_Request = new ListPlans_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListPlans_Response$Type extends MessageType<ListPlans_Response> {
    constructor() {
        super("subscription.ListPlans.Response", [
            { no: 1, name: "total", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "plans", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ListPlans_Response_PlanInfo }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.ListPlans.Response
 */
export const ListPlans_Response = new ListPlans_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListPlans_Response_PlanInfo$Type extends MessageType<ListPlans_Response_PlanInfo> {
    constructor() {
        super("subscription.ListPlans.Response.PlanInfo", [
            { no: 1, name: "subscription_count", kind: "scalar", localName: "subscription_count", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "plan", kind: "message", T: () => Plan_Response }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.ListPlans.Response.PlanInfo
 */
export const ListPlans_Response_PlanInfo = new ListPlans_Response_PlanInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Plan$Type extends MessageType<Plan> {
    constructor() {
        super("subscription.Plan", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.Plan
 */
export const Plan = new Plan$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Plan_Request$Type extends MessageType<Plan_Request> {
    constructor() {
        super("subscription.Plan.Request", [
            { no: 1, name: "plan_id", kind: "scalar", localName: "plan_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true, ignoreEmpty: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.Plan.Request
 */
export const Plan_Request = new Plan_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Plan_Response$Type extends MessageType<Plan_Response> {
    constructor() {
        super("subscription.Plan.Response", [
            { no: 1, name: "plan_id", kind: "scalar", localName: "plan_id", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cost", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "period", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "stripe_id", kind: "scalar", localName: "stripe_id", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "allowed_sections", kind: "scalar", localName: "allowed_sections", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "benefits", kind: "map", K: 5 /*ScalarType.INT32*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } },
            { no: 8, name: "image", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "active", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "trial", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 11, name: "trial_period", kind: "scalar", localName: "trial_period", T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "limits_servers", kind: "scalar", localName: "limits_servers", T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "limits_users", kind: "scalar", localName: "limits_users", T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "limits_companies", kind: "scalar", localName: "limits_companies", T: 5 /*ScalarType.INT32*/ },
            { no: 15, name: "limits_connections", kind: "scalar", localName: "limits_connections", T: 5 /*ScalarType.INT32*/ },
            { no: 16, name: "default", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.Plan.Response
 */
export const Plan_Response = new Plan_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdatePlan$Type extends MessageType<UpdatePlan> {
    constructor() {
        super("subscription.UpdatePlan", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.UpdatePlan
 */
export const UpdatePlan = new UpdatePlan$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdatePlan_Request$Type extends MessageType<UpdatePlan_Request> {
    constructor() {
        super("subscription.UpdatePlan.Request", [
            { no: 1, name: "plan_id", kind: "scalar", localName: "plan_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true, ignoreEmpty: true } } } },
            { no: 2, name: "cost", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "period", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "stripe_id", kind: "scalar", localName: "stripe_id", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "allowed_sections", kind: "scalar", localName: "allowed_sections", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "benefits", kind: "map", K: 5 /*ScalarType.INT32*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } },
            { no: 8, name: "image", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "active", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "trial", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 11, name: "trial_period", kind: "scalar", localName: "trial_period", T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "limits_servers", kind: "scalar", localName: "limits_servers", T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "limits_users", kind: "scalar", localName: "limits_users", T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "limits_companies", kind: "scalar", localName: "limits_companies", T: 5 /*ScalarType.INT32*/ },
            { no: 15, name: "limits_connections", kind: "scalar", localName: "limits_connections", T: 5 /*ScalarType.INT32*/ },
            { no: 16, name: "default", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.UpdatePlan.Request
 */
export const UpdatePlan_Request = new UpdatePlan_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdatePlan_Response$Type extends MessageType<UpdatePlan_Response> {
    constructor() {
        super("subscription.UpdatePlan.Response", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.UpdatePlan.Response
 */
export const UpdatePlan_Response = new UpdatePlan_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListCustomers$Type extends MessageType<ListCustomers> {
    constructor() {
        super("subscription.ListCustomers", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.ListCustomers
 */
export const ListCustomers = new ListCustomers$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListCustomers_Request$Type extends MessageType<ListCustomers_Request> {
    constructor() {
        super("subscription.ListCustomers.Request", [
            { no: 1, name: "limit", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "offset", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "sort_by", kind: "scalar", localName: "sort_by", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.ListCustomers.Request
 */
export const ListCustomers_Request = new ListCustomers_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListCustomers_Response$Type extends MessageType<ListCustomers_Response> {
    constructor() {
        super("subscription.ListCustomers.Response", [
            { no: 1, name: "total", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "customers", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Customer_Response }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.ListCustomers.Response
 */
export const ListCustomers_Response = new ListCustomers_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Customer$Type extends MessageType<Customer> {
    constructor() {
        super("subscription.Customer", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.Customer
 */
export const Customer = new Customer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Customer_Request$Type extends MessageType<Customer_Request> {
    constructor() {
        super("subscription.Customer.Request", [
            { no: 1, name: "user_id", kind: "scalar", localName: "user_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true, ignoreEmpty: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.Customer.Request
 */
export const Customer_Request = new Customer_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Customer_Response$Type extends MessageType<Customer_Response> {
    constructor() {
        super("subscription.Customer.Response", [
            { no: 1, name: "user_id", kind: "scalar", localName: "user_id", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "stripe_id", kind: "scalar", localName: "stripe_id", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.Customer.Response
 */
export const Customer_Response = new Customer_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddCustomer$Type extends MessageType<AddCustomer> {
    constructor() {
        super("subscription.AddCustomer", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.AddCustomer
 */
export const AddCustomer = new AddCustomer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddCustomer_Request$Type extends MessageType<AddCustomer_Request> {
    constructor() {
        super("subscription.AddCustomer.Request", [
            { no: 1, name: "user_id", kind: "scalar", localName: "user_id", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "stripe_id", kind: "scalar", localName: "stripe_id", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.AddCustomer.Request
 */
export const AddCustomer_Request = new AddCustomer_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddCustomer_Response$Type extends MessageType<AddCustomer_Response> {
    constructor() {
        super("subscription.AddCustomer.Response", [
            { no: 1, name: "customer_id", kind: "scalar", localName: "customer_id", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.AddCustomer.Response
 */
export const AddCustomer_Response = new AddCustomer_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateCustomer$Type extends MessageType<UpdateCustomer> {
    constructor() {
        super("subscription.UpdateCustomer", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.UpdateCustomer
 */
export const UpdateCustomer = new UpdateCustomer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateCustomer_Request$Type extends MessageType<UpdateCustomer_Request> {
    constructor() {
        super("subscription.UpdateCustomer.Request", [
            { no: 1, name: "user_id", kind: "scalar", localName: "user_id", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "stripe_id", kind: "scalar", localName: "stripe_id", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.UpdateCustomer.Request
 */
export const UpdateCustomer_Request = new UpdateCustomer_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateCustomer_Response$Type extends MessageType<UpdateCustomer_Response> {
    constructor() {
        super("subscription.UpdateCustomer.Response", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.UpdateCustomer.Response
 */
export const UpdateCustomer_Response = new UpdateCustomer_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteCustomer$Type extends MessageType<DeleteCustomer> {
    constructor() {
        super("subscription.DeleteCustomer", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.DeleteCustomer
 */
export const DeleteCustomer = new DeleteCustomer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteCustomer_Request$Type extends MessageType<DeleteCustomer_Request> {
    constructor() {
        super("subscription.DeleteCustomer.Request", [
            { no: 1, name: "user_id", kind: "scalar", localName: "user_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true, ignoreEmpty: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.DeleteCustomer.Request
 */
export const DeleteCustomer_Request = new DeleteCustomer_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteCustomer_Response$Type extends MessageType<DeleteCustomer_Response> {
    constructor() {
        super("subscription.DeleteCustomer.Response", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.DeleteCustomer.Response
 */
export const DeleteCustomer_Response = new DeleteCustomer_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Changes$Type extends MessageType<Changes> {
    constructor() {
        super("subscription.Changes", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.Changes
 */
export const Changes = new Changes$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Changes_Request$Type extends MessageType<Changes_Request> {
    constructor() {
        super("subscription.Changes.Request", [
            { no: 1, name: "limit", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "offset", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "sort_by", kind: "scalar", localName: "sort_by", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "query", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.Changes.Request
 */
export const Changes_Request = new Changes_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Changes_Response$Type extends MessageType<Changes_Response> {
    constructor() {
        super("subscription.Changes.Response", [
            { no: 1, name: "total", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "change", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Changes_Response_Change }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.Changes.Response
 */
export const Changes_Response = new Changes_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Changes_Response_Change$Type extends MessageType<Changes_Response_Change> {
    constructor() {
        super("subscription.Changes.Response.Change", [
            { no: 1, name: "change_id", kind: "scalar", localName: "change_id", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "subscription_id", kind: "scalar", localName: "subscription_id", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "plan_id", kind: "scalar", localName: "plan_id", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "date", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.Changes.Response.Change
 */
export const Changes_Response_Change = new Changes_Response_Change$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Invoices$Type extends MessageType<Invoices> {
    constructor() {
        super("subscription.Invoices", []);
    }
}
/**
 * @generated MessageType for protobuf message subscription.Invoices
 */
export const Invoices = new Invoices$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Invoices_Request$Type extends MessageType<Invoices_Request> {
    constructor() {
        super("subscription.Invoices.Request", [
            { no: 1, name: "limit", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "offset", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "sort_by", kind: "scalar", localName: "sort_by", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "query", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.Invoices.Request
 */
export const Invoices_Request = new Invoices_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Invoices_Response$Type extends MessageType<Invoices_Response> {
    constructor() {
        super("subscription.Invoices.Response", [
            { no: 1, name: "total", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "invoice", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Invoices_Response_Invoice }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.Invoices.Response
 */
export const Invoices_Response = new Invoices_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Invoices_Response_Invoice$Type extends MessageType<Invoices_Response_Invoice> {
    constructor() {
        super("subscription.Invoices.Response.Invoice", [
            { no: 1, name: "invoice_id", kind: "scalar", localName: "invoice_id", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "subscription_id", kind: "scalar", localName: "subscription_id", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "plan_id", kind: "scalar", localName: "plan_id", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "stripe_id", kind: "scalar", localName: "stripe_id", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "status", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "date", kind: "message", T: () => Timestamp },
            { no: 8, name: "amount", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "currency", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "period_start", kind: "message", localName: "period_start", T: () => Timestamp },
            { no: 11, name: "period_end", kind: "message", localName: "period_end", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message subscription.Invoices.Response.Invoice
 */
export const Invoices_Response_Invoice = new Invoices_Response_Invoice$Type();
/**
 * @generated ServiceType for protobuf service subscription.SubscriptionHandlers
 */
export const SubscriptionHandlers = new ServiceType("subscription.SubscriptionHandlers", [
    { name: "ListSubscriptions", options: {}, I: ListSubscriptions_Request, O: ListSubscriptions_Response },
    { name: "Subscription", options: {}, I: Subscription_Request, O: Subscription_Response },
    { name: "AddSubscription", options: {}, I: AddSubscription_Request, O: AddSubscription_Response },
    { name: "UpdateSubscription", options: {}, I: UpdateSubscription_Request, O: UpdateSubscription_Response },
    { name: "DeleteSubscription", options: {}, I: DeleteSubscription_Request, O: DeleteSubscription_Response },
    { name: "ListPlans", options: {}, I: ListPlans_Request, O: ListPlans_Response },
    { name: "Plan", options: {}, I: Plan_Request, O: Plan_Response },
    { name: "UpdatePlan", options: {}, I: UpdatePlan_Request, O: UpdatePlan_Response },
    { name: "ListCustomers", options: {}, I: ListCustomers_Request, O: ListCustomers_Response },
    { name: "Customer", options: {}, I: Customer_Request, O: Customer_Response },
    { name: "AddCustomer", options: {}, I: AddCustomer_Request, O: AddCustomer_Response },
    { name: "UpdateCustomer", options: {}, I: UpdateCustomer_Request, O: UpdateCustomer_Response },
    { name: "DeleteCustomer", options: {}, I: DeleteCustomer_Request, O: DeleteCustomer_Response },
    { name: "Changes", options: {}, I: Changes_Request, O: Changes_Response },
    { name: "Invoices", options: {}, I: Invoices_Request, O: Invoices_Response }
]);
