// @generated by protobuf-ts 2.8.2 with parameter use_proto_field_name,ts_nocheck,long_type_string,force_optimize_code_size,force_client_none
// @generated from protobuf file "info.proto" (package "info", syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { RoleUser } from "./user/user";
/**
 * rpc UserStatistics
 *
 * @generated from protobuf message info.UserStatistics
 */
export interface UserStatistics {
}
/**
 * @generated from protobuf message info.UserStatistics.Request
 */
export interface UserStatistics_Request {
    /**
     * @generated from protobuf field: string user_id = 1;
     */
    user_id: string; // @gotags: query:"user_id" params:"user_id"
    /**
     * @generated from protobuf field: user.RoleUser role = 2;
     */
    role: RoleUser;
}
/**
 * @generated from protobuf message info.UserStatistics.Response
 */
export interface UserStatistics_Response {
    /**
     * @generated from protobuf field: int32 users = 1;
     */
    users: number;
    /**
     * @generated from protobuf field: int32 projects = 2;
     */
    projects: number;
    /**
     * @generated from protobuf field: int32 servers = 3;
     */
    servers: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class UserStatistics$Type extends MessageType<UserStatistics> {
    constructor() {
        super("info.UserStatistics", []);
    }
}
/**
 * @generated MessageType for protobuf message info.UserStatistics
 */
export const UserStatistics = new UserStatistics$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserStatistics_Request$Type extends MessageType<UserStatistics_Request> {
    constructor() {
        super("info.UserStatistics.Request", [
            { no: 1, name: "user_id", kind: "scalar", localName: "user_id", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { uuid: true, ignoreEmpty: true } } } },
            { no: 2, name: "role", kind: "enum", T: () => ["user.RoleUser", RoleUser] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message info.UserStatistics.Request
 */
export const UserStatistics_Request = new UserStatistics_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserStatistics_Response$Type extends MessageType<UserStatistics_Response> {
    constructor() {
        super("info.UserStatistics.Response", [
            { no: 1, name: "users", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "projects", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "servers", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message info.UserStatistics.Response
 */
export const UserStatistics_Response = new UserStatistics_Response$Type();
/**
 * @generated ServiceType for protobuf service info.InfoHandlers
 */
export const InfoHandlers = new ServiceType("info.InfoHandlers", [
    { name: "UserStatistics", options: {}, I: UserStatistics_Request, O: UserStatistics_Response }
]);
