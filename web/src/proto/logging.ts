// @generated by protobuf-ts 2.8.2 with parameter use_proto_field_name,ts_nocheck,long_type_string,force_optimize_code_size,force_client_none
// @generated from protobuf file "logging.proto" (package "logging", syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * rpc AddLogRecord
 *
 * @generated from protobuf message logging.AddLogRecord
 */
export interface AddLogRecord {
}
/**
 * @generated from protobuf message logging.AddLogRecord.Request
 */
export interface AddLogRecord_Request {
    /**
     * @generated from protobuf field: logging.Logger logger = 1;
     */
    logger: Logger;
    /**
     * @generated from protobuf field: logging.EventType event = 2;
     */
    event: EventType;
    /**
     * @generated from protobuf field: string id = 3;
     */
    id: string;
}
/**
 * @generated from protobuf message logging.AddLogRecord.Response
 */
export interface AddLogRecord_Response {
}
/**
 * @generated from protobuf enum logging.Logger
 */
export enum Logger {
    /**
     * @generated from protobuf enum value: logger_unspecified = 0;
     */
    logger_unspecified = 0,
    /**
     * @generated from protobuf enum value: profile = 1;
     */
    profile = 1,
    /**
     * @generated from protobuf enum value: project = 2;
     */
    project = 2,
    /**
     * @generated from protobuf enum value: server = 3;
     */
    server = 3
}
/**
 * @generated from protobuf enum logging.EventType
 */
export enum EventType {
    /**
     * @generated from protobuf enum value: event_unspecified = 0;
     */
    event_unspecified = 0,
    /**
     * @generated from protobuf enum value: onOnline = 1;
     */
    onOnline = 1,
    /**
     * @generated from protobuf enum value: onOffline = 2;
     */
    onOffline = 2,
    /**
     * @generated from protobuf enum value: onCreate = 3;
     */
    onCreate = 3,
    /**
     * @generated from protobuf enum value: onEdit = 4;
     */
    onEdit = 4,
    /**
     * @generated from protobuf enum value: onRemove = 5;
     */
    onRemove = 5,
    /**
     * @generated from protobuf enum value: onActive = 6;
     */
    onActive = 6,
    /**
     * @generated from protobuf enum value: onInactive = 7;
     */
    onInactive = 7,
    /**
     * @generated from protobuf enum value: onChange = 8;
     */
    onChange = 8
}
// @generated message type with reflection information, may provide speed optimized methods
class AddLogRecord$Type extends MessageType<AddLogRecord> {
    constructor() {
        super("logging.AddLogRecord", []);
    }
}
/**
 * @generated MessageType for protobuf message logging.AddLogRecord
 */
export const AddLogRecord = new AddLogRecord$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddLogRecord_Request$Type extends MessageType<AddLogRecord_Request> {
    constructor() {
        super("logging.AddLogRecord.Request", [
            { no: 1, name: "logger", kind: "enum", T: () => ["logging.Logger", Logger] },
            { no: 2, name: "event", kind: "enum", T: () => ["logging.EventType", EventType] },
            { no: 3, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message logging.AddLogRecord.Request
 */
export const AddLogRecord_Request = new AddLogRecord_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddLogRecord_Response$Type extends MessageType<AddLogRecord_Response> {
    constructor() {
        super("logging.AddLogRecord.Response", []);
    }
}
/**
 * @generated MessageType for protobuf message logging.AddLogRecord.Response
 */
export const AddLogRecord_Response = new AddLogRecord_Response$Type();
/**
 * @generated ServiceType for protobuf service logging.LoggingHandlers
 */
export const LoggingHandlers = new ServiceType("logging.LoggingHandlers", [
    { name: "AddLogRecord", options: {}, I: AddLogRecord_Request, O: AddLogRecord_Response }
]);
