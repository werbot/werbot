// @generated by protobuf-ts 2.8.2 with parameter use_proto_field_name,ts_nocheck,long_type_string,force_optimize_code_size,force_client_none
// @generated from protobuf file "audit.proto" (package "audit", syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * -----------------------------------------------------
 * global messages
 *
 * @generated from protobuf message audit.Record
 */
export interface Record {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: bool audit = 2;
     */
    audit: boolean;
    /**
     * @generated from protobuf field: string duration = 3;
     */
    duration: string;
    /**
     * @generated from protobuf field: string screen = 4;
     */
    screen: string;
    /**
     * @generated from protobuf field: string type = 5;
     */
    type: string;
}
// 
// message Audit {
// string audit_id = 1;
// string account_id = 2;
// google.protobuf.Timestamp time_start = 3;
// int32 version = 4;
// int32 width = 5;
// int32 height = 6;
// string duration = 7;
// string command = 8;
// string title = 9;
// string env_term = 10;
// string env_shell = 11;
// string sessionv = 12;
// google.protobuf.Timestamp time_end = 13;
// string client_ip = 14;
// }
// 
// message Records {
// repeated Record records = 1;
// }

// -----------------------------------------------------

/**
 * rpc rpc AddAudit
 *
 * @generated from protobuf message audit.AddAudit
 */
export interface AddAudit {
}
/**
 * @generated from protobuf message audit.AddAudit.Request
 */
export interface AddAudit_Request {
    /**
     * @generated from protobuf field: string account_id = 1;
     */
    account_id: string;
    /**
     * @generated from protobuf field: int32 version = 2;
     */
    version: number;
    /**
     * @generated from protobuf field: string session = 3;
     */
    session: string;
    /**
     * @generated from protobuf field: string client_ip = 4;
     */
    client_ip: string;
}
/**
 * @generated from protobuf message audit.AddAudit.Response
 */
export interface AddAudit_Response {
    /**
     * @generated from protobuf field: string audit_id = 1;
     */
    audit_id: string;
}
/**
 * rpc UpdateAudit
 *
 * @generated from protobuf message audit.UpdateAudit
 */
export interface UpdateAudit {
}
/**
 * @generated from protobuf message audit.UpdateAudit.Request
 */
export interface UpdateAudit_Request {
    /**
     * @generated from protobuf field: string audit_id = 1;
     */
    audit_id: string;
    /**
     * @generated from protobuf field: audit.UpdateAudit.Request.Params params = 2;
     */
    params?: UpdateAudit_Request_Params;
}
/**
 * @generated from protobuf message audit.UpdateAudit.Request.Params
 */
export interface UpdateAudit_Request_Params {
    /**
     * @generated from protobuf field: int32 width = 1;
     */
    width: number;
    /**
     * @generated from protobuf field: int32 height = 2;
     */
    height: number;
    /**
     * @generated from protobuf field: string command = 3;
     */
    command: string;
    /**
     * @generated from protobuf field: string title = 4;
     */
    title: string;
    /**
     * @generated from protobuf field: string env_term = 5;
     */
    env_term: string;
    /**
     * @generated from protobuf field: string env_shell = 6;
     */
    env_shell: string;
    /**
     * @generated from protobuf field: string duration = 7;
     */
    duration: string;
    /**
     * @generated from protobuf field: string time_end = 8;
     */
    time_end: string;
}
/**
 * @generated from protobuf message audit.UpdateAudit.Response
 */
export interface UpdateAudit_Response {
}
/**
 * rpc CreateRecord
 *
 * @generated from protobuf message audit.CreateRecord
 */
export interface CreateRecord {
}
/**
 * @generated from protobuf message audit.CreateRecord.Request
 */
export interface CreateRecord_Request {
    /**
     * @generated from protobuf field: string audit_id = 1;
     */
    audit_id: string;
    /**
     * @generated from protobuf field: repeated audit.Record records = 2;
     */
    records: Record[];
}
/**
 * @generated from protobuf message audit.CreateRecord.Response
 */
export interface CreateRecord_Response {
}
// @generated message type with reflection information, may provide speed optimized methods
class Record$Type extends MessageType<Record> {
    constructor() {
        super("audit.Record", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "audit", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "duration", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "screen", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message audit.Record
 */
export const Record = new Record$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddAudit$Type extends MessageType<AddAudit> {
    constructor() {
        super("audit.AddAudit", []);
    }
}
/**
 * @generated MessageType for protobuf message audit.AddAudit
 */
export const AddAudit = new AddAudit$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddAudit_Request$Type extends MessageType<AddAudit_Request> {
    constructor() {
        super("audit.AddAudit.Request", [
            { no: 1, name: "account_id", kind: "scalar", localName: "account_id", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "version", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "session", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "client_ip", kind: "scalar", localName: "client_ip", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message audit.AddAudit.Request
 */
export const AddAudit_Request = new AddAudit_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddAudit_Response$Type extends MessageType<AddAudit_Response> {
    constructor() {
        super("audit.AddAudit.Response", [
            { no: 1, name: "audit_id", kind: "scalar", localName: "audit_id", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message audit.AddAudit.Response
 */
export const AddAudit_Response = new AddAudit_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateAudit$Type extends MessageType<UpdateAudit> {
    constructor() {
        super("audit.UpdateAudit", []);
    }
}
/**
 * @generated MessageType for protobuf message audit.UpdateAudit
 */
export const UpdateAudit = new UpdateAudit$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateAudit_Request$Type extends MessageType<UpdateAudit_Request> {
    constructor() {
        super("audit.UpdateAudit.Request", [
            { no: 1, name: "audit_id", kind: "scalar", localName: "audit_id", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "params", kind: "message", T: () => UpdateAudit_Request_Params }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message audit.UpdateAudit.Request
 */
export const UpdateAudit_Request = new UpdateAudit_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateAudit_Request_Params$Type extends MessageType<UpdateAudit_Request_Params> {
    constructor() {
        super("audit.UpdateAudit.Request.Params", [
            { no: 1, name: "width", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "height", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "command", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "env_term", kind: "scalar", localName: "env_term", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "env_shell", kind: "scalar", localName: "env_shell", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "duration", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "time_end", kind: "scalar", localName: "time_end", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message audit.UpdateAudit.Request.Params
 */
export const UpdateAudit_Request_Params = new UpdateAudit_Request_Params$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateAudit_Response$Type extends MessageType<UpdateAudit_Response> {
    constructor() {
        super("audit.UpdateAudit.Response", []);
    }
}
/**
 * @generated MessageType for protobuf message audit.UpdateAudit.Response
 */
export const UpdateAudit_Response = new UpdateAudit_Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateRecord$Type extends MessageType<CreateRecord> {
    constructor() {
        super("audit.CreateRecord", []);
    }
}
/**
 * @generated MessageType for protobuf message audit.CreateRecord
 */
export const CreateRecord = new CreateRecord$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateRecord_Request$Type extends MessageType<CreateRecord_Request> {
    constructor() {
        super("audit.CreateRecord.Request", [
            { no: 1, name: "audit_id", kind: "scalar", localName: "audit_id", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "records", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Record }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message audit.CreateRecord.Request
 */
export const CreateRecord_Request = new CreateRecord_Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateRecord_Response$Type extends MessageType<CreateRecord_Response> {
    constructor() {
        super("audit.CreateRecord.Response", []);
    }
}
/**
 * @generated MessageType for protobuf message audit.CreateRecord.Response
 */
export const CreateRecord_Response = new CreateRecord_Response$Type();
/**
 * @generated ServiceType for protobuf service audit.AuditHandlers
 */
export const AuditHandlers = new ServiceType("audit.AuditHandlers", [
    { name: "AddAudit", options: {}, I: AddAudit_Request, O: AddAudit_Response },
    { name: "UpdateAudit", options: {}, I: UpdateAudit_Request, O: UpdateAudit_Response },
    { name: "CreateRecord", options: {}, I: CreateRecord_Request, O: CreateRecord_Response }
]);
