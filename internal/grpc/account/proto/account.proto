syntax = "proto3";

package account;

option go_package = "github.com/werbot/werbot/internal/grpc/account/proto";

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "internal/grpc/user/proto/user.proto";

service AccountHandlers {
  // Auth section
  rpc SignIn(SignIn.Request) returns (user.User.Response) {}
  rpc ResetPassword(ResetPassword.Request) returns (ResetPassword.Response) {}

  // Account section
  rpc ListAccounts(ListAccounts.Request) returns (ListAccounts.Response) {}
  rpc Account(Account.Request) returns (Account.Response) {}
  rpc AddAccount(AddAccount.Request) returns (AddAccount.Response) {}
  rpc UpdateAccount(UpdateAccount.Request) returns (UpdateAccount.Response) {}
  rpc DeleteAccount(DeleteAccount.Request) returns (DeleteAccount.Response) {}

  rpc AccountIDByLogin(AccountIDByLogin.Request) returns (AccountIDByLogin.Response) {}

  rpc UpdateStatus(UpdateStatus.Request) returns (UpdateStatus.Response) {}

  rpc SessionAccount(SessionAccount.Request) returns (SessionAccount.Response) {}
  rpc FindByTokenAccount(FindByTokenAccount.Request) returns (FindByTokenAccount.Response) {}
}

enum AccountStatus {
  unspecified = 0;
  offline = 1;
  online = 2;
}

// rpc SignIn
message SignIn {
  message Request {
    string email = 2    [(validate.rules).string.email = true];
    string password = 3 [(validate.rules).string = { min_len: 8, max_len: 32 }];
  }

  message Response {
    string user_id = 1;
    string name = 2;
    string email = 3;
    user.Role user_role = 4;
  }
}
// -----------------------------------------------------


// rpc ResetPassword
message ResetPassword {
  message Request {
    oneof request {
      string email = 1    [(validate.rules).string.email = true];
      string password = 2 [(validate.rules).string = {min_len: 8, max_len: 32}];
    }
    string token = 3      [(validate.rules).string = {ignore_empty: true, uuid: true}];
  }

  message Response {
    string message = 1;
    string token = 2;
  }
}
// -----------------------------------------------------


message RefreshTokenRequest {
  string refresh_token = 1 [(validate.rules).string.uuid = true];
}

message UserParameters {
  string user_name = 1;
  string user_id = 2;
  user.Role roles = 3;
  string sub = 4;
}


// -----------------------------------------------------


// rpc ListAccounts
message ListAccounts {
  message Request {
    // for pagination
    int32 limit = 1;
    int32 offset = 2;
    string sort_by = 3;
    // ---

    string query = 4;
  }

  message Response{
    int32 total = 1;
    repeated Account.Response accounts = 2;
  }
}
// -----------------------------------------------------


// rpc Account
message Account {
  message Request {
    string account_id = 1 [(validate.rules).string.uuid = true];
  }

  message Response {
    string account_id = 1;
    bool online = 2;
    bool active = 3;
    string name = 4;
    string surname = 5;
    string connection_login = 7;
    google.protobuf.Timestamp last_update = 8;
    google.protobuf.Timestamp created = 9;
  }
}
// -----------------------------------------------------


// rpc AddAccount
message AddAccount {
  message Request {
    string account_id = 1 [(validate.rules).string.uuid = true];
  }

  message Response {}
}
// -----------------------------------------------------


// rpc UpdateAccount
message UpdateAccount {
  message Request {
    string account_id = 1 [(validate.rules).string.uuid = true];
  }

  message Response {}
}
// -----------------------------------------------------


// rpc DeleteAccount
message DeleteAccount {
  message Request {
    string account_id = 1 [(validate.rules).string.uuid = true];
  }

  message Response {}
}
// -----------------------------------------------------


// rpc AccountIDByLogin
message AccountIDByLogin {
  message Request {
    string login = 1;
    string fingerprint = 2;
    string client_ip = 3 [(validate.rules).string.ip = true];
  }

  message Response {
    string user_id = 1;
  }
}
// -----------------------------------------------------


// rpc UpdateStatus
message UpdateStatus {
  message Request {
    string account_id = 1 [(validate.rules).string.uuid = true];
    AccountStatus status = 2;
  }

  message Response {
    int32 total = 1;
    repeated Account.Response accounts = 2;
  }
}
// -----------------------------------------------------


// rpc SessionAccount
message SessionAccount {
  message Request {
    string name = 1;
  }

  message Response {
    int32 total = 1;
    repeated Account.Response accounts = 2;
  }
}
// -----------------------------------------------------


// rpc SessionAccount
message FindByTokenAccount {
  message Request {
    string name = 1;
  }

  message Response {}
}
// -----------------------------------------------------
