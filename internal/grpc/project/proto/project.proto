syntax = "proto3";

package project;

option go_package = "github.com/werbot/werbot/internal/grpc/project/proto";

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

service ProjectHandlers {
  rpc ListProjects(ListProjects.Request) returns (ListProjects.Response) {}
  rpc Project(Project.Request) returns (Project.Response) {}
  rpc AddProject(AddProject.Request) returns (AddProject.Response) {}
  rpc UpdateProject(UpdateProject.Request) returns (UpdateProject.Response) {}
  rpc DeleteProject(DeleteProject.Request) returns (DeleteProject.Response) {}

  // API key section
  rpc Key(Key.Request) returns (Key.Response) {}
  rpc AddKey(AddKey.Request) returns (AddKey.Response) {}
  rpc UpdateKey(UpdateKey.Request) returns (UpdateKey.Response) {}
  rpc DeleteKey(DeleteKey.Request) returns (DeleteKey.Response) {}
}

// rpc ListProjects
message ListProjects {
  message Request {
    int32 limit = 1;
    int32 offset = 2;
    string sort_by = 3;
    string query = 4;
  }

  message Response{
    int32 total = 1;
    repeated Project.Response projects = 2;
  }
}
// -----------------------------------------------------


// rpc Project
message Project {
  message Request {
    string owner_id = 1   [(validate.rules).string = {ignore_empty: true, uuid: true}]; // @gotags: query:"owner_id" params:"owner_id"
    string project_id = 2 [(validate.rules).string = {ignore_empty: true, uuid: true}]; // @gotags: query:"project_id" params:"project_id"
  }

  message Response{
    string project_id = 1;
    string owner_id = 2;
    string title = 3;
    string login = 4;
    int32 members_count = 5;
    int32 servers_count = 6;
    google.protobuf.Timestamp last_update = 7;
    google.protobuf.Timestamp created = 9;
  }
}
// -----------------------------------------------------


// rpc AddProject
message AddProject {
  message Request {
    string owner_id = 1 [(validate.rules).string = {ignore_empty: true, uuid: true}];
    string login = 2    [(validate.rules).string = {pattern: '^[a-z0-9]+$', min_len: 3, max_len: 20}];
    string title = 3    [(validate.rules).string = {min_len: 3, max_len: 128}];
  }

  message Response {
    string project_id = 1;
  }
}
// -----------------------------------------------------


// rpc UpdateProject
message UpdateProject {
  message Request {
    string project_id = 1 [(validate.rules).string.uuid = true]; // @gotags: query:"project_id" params:"project_id"
    string owner_id = 2   [(validate.rules).string = {ignore_empty: true, uuid: true}]; // @gotags: query:"owner_id" params:"owner_id"
    string title = 3      [(validate.rules).string = {min_len: 3, max_len: 128}]; // @gotags: query:"title" params:"title"
  }

  message Response {}
}
// -----------------------------------------------------


// rpc DeleteProject
message DeleteProject{
  message Request {
    string owner_id = 1   [(validate.rules).string = {ignore_empty: true, uuid: true}]; // @gotags: query:"owner_id" params:"owner_id"
    string project_id = 2 [(validate.rules).string.uuid = true]; // @gotags: query:"project_id" params:"project_id"
  }

  message Response {}
}
// -----------------------------------------------------


// rpc Key
message Key {
  message Request {
    string project_id = 1 [(validate.rules).string.uuid = true]; // @gotags: query:"project_id"
  }

  message Response {
    string api_key = 1;
    string api_secret = 2;
    bool api_online =3;
    google.protobuf.Timestamp last_update = 6;
    google.protobuf.Timestamp created = 7;
  }
}
// -----------------------------------------------------


// rpc AddKey
message AddKey {
  message Request {
    string project_id = 1 [(validate.rules).string.uuid = true]; // @gotags: query:"project_id"
  }

  message Response {
    Key.Response key = 1;
  }
}
// -----------------------------------------------------

// rpc UpdateKey
message UpdateKey {
  message Request {
    string project_id = 1 [(validate.rules).string.uuid = true]; // @gotags: query:"project_id"
    string api_key = 2    [(validate.rules).string.uuid = true]; // @gotags: query:"api_key"
  }

  message Response {
    Key.Response key = 1;
  }
}
// -----------------------------------------------------

// rpc DeleteKey
message DeleteKey {
  message Request {
    string project_id = 1 [(validate.rules).string.uuid = true]; // @gotags: query:"project_id"
    string api_key = 2    [(validate.rules).string.uuid = true]; // @gotags: query:"api_key"
  }

  message Response {}
}
// -----------------------------------------------------
