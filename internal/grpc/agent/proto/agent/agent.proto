syntax = "proto3";

package agent;

import "buf/validate/validate.proto";
import "internal/grpc/scheme/proto/access/access.proto";

option go_package = "github.com/werbot/werbot/internal/grpc/agent/proto/agent";

service AgentHandlers {
  rpc Auth(Auth.Request) returns (Auth.Response) {}

  // Agent section
  rpc AddScheme(AddScheme.Request) returns (AddScheme.Response) {}
  // rpc UpdateScheme(UpdateScheme.Request) returns (UpdateScheme.Response) {}
}

message Auth {
  message Request {
    string token = 1 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
  }

  message Response {
    access.SchemeType scheme_type = 1;
    string api_key = 2;
    string api_secret = 3;
  }
}

// rpc AddScheme
message AddScheme {
  message Request {
    string token = 1 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"

    string address = 2 [(buf.validate.field).string.address = true, (buf.validate.field).required = true];
    int32 port = 3 [(buf.validate.field).int32 = { gte: 1 lt: 65536 }, (buf.validate.field).required = true];
    string login = 4 [(buf.validate.field).string = { pattern: '^[a-zA-Z0-9]+$' min_len: 3 max_len: 20 }, (buf.validate.field).required = true];
    string title = 5 [(buf.validate.field).string = { min_len: 5 max_len: 128 }, (buf.validate.field).ignore_empty = true];
  }

  message Response {
    string scheme_id = 1;
    string public_key = 2;
  }
}
// -----------------------------------------------------

// rpc UpdateScheme
// message UpdateScheme {
//  message Request {}
//
//  message Response {}
//}
// -----------------------------------------------------
