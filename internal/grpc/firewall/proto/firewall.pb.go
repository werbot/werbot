// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.3
// source: firewall.proto

package proto

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Rules int32

const (
	Rules_unspecified Rules = 0
	Rules_country     Rules = 1
	Rules_ip          Rules = 2
)

// Enum value maps for Rules.
var (
	Rules_name = map[int32]string{
		0: "unspecified",
		1: "country",
		2: "ip",
	}
	Rules_value = map[string]int32{
		"unspecified": 0,
		"country":     1,
		"ip":          2,
	}
)

func (x Rules) Enum() *Rules {
	p := new(Rules)
	*p = x
	return p
}

func (x Rules) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Rules) Descriptor() protoreflect.EnumDescriptor {
	return file_firewall_proto_enumTypes[0].Descriptor()
}

func (Rules) Type() protoreflect.EnumType {
	return &file_firewall_proto_enumTypes[0]
}

func (x Rules) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Rules.Descriptor instead.
func (Rules) EnumDescriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{0}
}

// -----------------------------------------------------
// global messages
type Country struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ServerId    string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	CountryName string `protobuf:"bytes,3,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"`
	CountryCode string `protobuf:"bytes,4,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
}

func (x *Country) Reset() {
	*x = Country{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Country) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Country) ProtoMessage() {}

func (x *Country) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Country.ProtoReflect.Descriptor instead.
func (*Country) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{0}
}

func (x *Country) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Country) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *Country) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

func (x *Country) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

type Network struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	StartIp  string `protobuf:"bytes,3,opt,name=start_ip,json=startIp,proto3" json:"start_ip,omitempty"`
	EndIp    string `protobuf:"bytes,4,opt,name=end_ip,json=endIp,proto3" json:"end_ip,omitempty"`
}

func (x *Network) Reset() {
	*x = Network{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Network.ProtoReflect.Descriptor instead.
func (*Network) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{1}
}

func (x *Network) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Network) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *Network) GetStartIp() string {
	if x != nil {
		return x.StartIp
	}
	return ""
}

func (x *Network) GetEndIp() string {
	if x != nil {
		return x.EndIp
	}
	return ""
}

type AccessList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Country  bool   `protobuf:"varint,2,opt,name=country,proto3" json:"country,omitempty"`
	Network  bool   `protobuf:"varint,3,opt,name=network,proto3" json:"network,omitempty"`
}

func (x *AccessList) Reset() {
	*x = AccessList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessList) ProtoMessage() {}

func (x *AccessList) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessList.ProtoReflect.Descriptor instead.
func (*AccessList) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{2}
}

func (x *AccessList) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *AccessList) GetCountry() bool {
	if x != nil {
		return x.Country
	}
	return false
}

func (x *AccessList) GetNetwork() bool {
	if x != nil {
		return x.Network
	}
	return false
}

type IpMask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartIp string `protobuf:"bytes,1,opt,name=start_ip,json=startIp,proto3" json:"start_ip,omitempty"`
	EndIp   string `protobuf:"bytes,2,opt,name=end_ip,json=endIp,proto3" json:"end_ip,omitempty"`
}

func (x *IpMask) Reset() {
	*x = IpMask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpMask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpMask) ProtoMessage() {}

func (x *IpMask) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpMask.ProtoReflect.Descriptor instead.
func (*IpMask) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{3}
}

func (x *IpMask) GetStartIp() string {
	if x != nil {
		return x.StartIp
	}
	return ""
}

func (x *IpMask) GetEndIp() string {
	if x != nil {
		return x.EndIp
	}
	return ""
}

// rpc ServerFirewall
type ServerFirewall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerFirewall) Reset() {
	*x = ServerFirewall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerFirewall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerFirewall) ProtoMessage() {}

func (x *ServerFirewall) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerFirewall.ProtoReflect.Descriptor instead.
func (*ServerFirewall) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{4}
}

// rpc AddServerFirewall
type AddServerFirewall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddServerFirewall) Reset() {
	*x = AddServerFirewall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddServerFirewall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServerFirewall) ProtoMessage() {}

func (x *AddServerFirewall) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServerFirewall.ProtoReflect.Descriptor instead.
func (*AddServerFirewall) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{5}
}

// rpc UpdateServerFirewall
type UpdateServerFirewall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerFirewall) Reset() {
	*x = UpdateServerFirewall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerFirewall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerFirewall) ProtoMessage() {}

func (x *UpdateServerFirewall) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerFirewall.ProtoReflect.Descriptor instead.
func (*UpdateServerFirewall) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{6}
}

// rpc DeleteServerFirewall
type DeleteServerFirewall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteServerFirewall) Reset() {
	*x = DeleteServerFirewall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServerFirewall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServerFirewall) ProtoMessage() {}

func (x *DeleteServerFirewall) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServerFirewall.ProtoReflect.Descriptor instead.
func (*DeleteServerFirewall) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{7}
}

// rpc IPAccess
type IPAccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IPAccess) Reset() {
	*x = IPAccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAccess) ProtoMessage() {}

func (x *IPAccess) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAccess.ProtoReflect.Descriptor instead.
func (*IPAccess) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{8}
}

// rpc ServerAccess
type ServerAccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerAccess) Reset() {
	*x = ServerAccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccess) ProtoMessage() {}

func (x *ServerAccess) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccess.ProtoReflect.Descriptor instead.
func (*ServerAccess) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{9}
}

// rpc ServerAccessUser
type ServerAccessUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerAccessUser) Reset() {
	*x = ServerAccessUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccessUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccessUser) ProtoMessage() {}

func (x *ServerAccessUser) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccessUser.ProtoReflect.Descriptor instead.
func (*ServerAccessUser) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{10}
}

// rpc ServerAccessTime
type ServerAccessTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerAccessTime) Reset() {
	*x = ServerAccessTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccessTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccessTime) ProtoMessage() {}

func (x *ServerAccessTime) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccessTime.ProtoReflect.Descriptor instead.
func (*ServerAccessTime) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{11}
}

// rpc ServerAccessIP
type ServerAccessIP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerAccessIP) Reset() {
	*x = ServerAccessIP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccessIP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccessIP) ProtoMessage() {}

func (x *ServerAccessIP) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccessIP.ProtoReflect.Descriptor instead.
func (*ServerAccessIP) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{12}
}

// rpc ServerAccessCountry
type ServerAccessCountry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerAccessCountry) Reset() {
	*x = ServerAccessCountry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccessCountry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccessCountry) ProtoMessage() {}

func (x *ServerAccessCountry) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccessCountry.ProtoReflect.Descriptor instead.
func (*ServerAccessCountry) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{13}
}

type ServerFirewall_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id"`           
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" query:"project_id"`  
	ServerId  string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" query:"server_id"`     
}

func (x *ServerFirewall_Request) Reset() {
	*x = ServerFirewall_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerFirewall_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerFirewall_Request) ProtoMessage() {}

func (x *ServerFirewall_Request) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerFirewall_Request.ProtoReflect.Descriptor instead.
func (*ServerFirewall_Request) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ServerFirewall_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ServerFirewall_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ServerFirewall_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type ServerFirewall_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country *ServerFirewall_Countries `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	Network *ServerFirewall_Networks  `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
}

func (x *ServerFirewall_Response) Reset() {
	*x = ServerFirewall_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerFirewall_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerFirewall_Response) ProtoMessage() {}

func (x *ServerFirewall_Response) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerFirewall_Response.ProtoReflect.Descriptor instead.
func (*ServerFirewall_Response) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{4, 1}
}

func (x *ServerFirewall_Response) GetCountry() *ServerFirewall_Countries {
	if x != nil {
		return x.Country
	}
	return nil
}

func (x *ServerFirewall_Response) GetNetwork() *ServerFirewall_Networks {
	if x != nil {
		return x.Network
	}
	return nil
}

type ServerFirewall_Countries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WiteList bool       `protobuf:"varint,1,opt,name=wite_list,json=witeList,proto3" json:"wite_list,omitempty"`
	List     []*Country `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ServerFirewall_Countries) Reset() {
	*x = ServerFirewall_Countries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerFirewall_Countries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerFirewall_Countries) ProtoMessage() {}

func (x *ServerFirewall_Countries) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerFirewall_Countries.ProtoReflect.Descriptor instead.
func (*ServerFirewall_Countries) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{4, 2}
}

func (x *ServerFirewall_Countries) GetWiteList() bool {
	if x != nil {
		return x.WiteList
	}
	return false
}

func (x *ServerFirewall_Countries) GetList() []*Country {
	if x != nil {
		return x.List
	}
	return nil
}

type ServerFirewall_Networks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WiteList bool       `protobuf:"varint,1,opt,name=wite_list,json=witeList,proto3" json:"wite_list,omitempty"`
	List     []*Network `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ServerFirewall_Networks) Reset() {
	*x = ServerFirewall_Networks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerFirewall_Networks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerFirewall_Networks) ProtoMessage() {}

func (x *ServerFirewall_Networks) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerFirewall_Networks.ProtoReflect.Descriptor instead.
func (*ServerFirewall_Networks) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{4, 3}
}

func (x *ServerFirewall_Networks) GetWiteList() bool {
	if x != nil {
		return x.WiteList
	}
	return false
}

func (x *ServerFirewall_Networks) GetList() []*Network {
	if x != nil {
		return x.List
	}
	return nil
}

type AddServerFirewall_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ServerId  string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	// Types that are assignable to Record:
	//
	//	*AddServerFirewall_Request_Ip
	//	*AddServerFirewall_Request_CountryCode
	Record isAddServerFirewall_Request_Record `protobuf_oneof:"record"`
}

func (x *AddServerFirewall_Request) Reset() {
	*x = AddServerFirewall_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddServerFirewall_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServerFirewall_Request) ProtoMessage() {}

func (x *AddServerFirewall_Request) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServerFirewall_Request.ProtoReflect.Descriptor instead.
func (*AddServerFirewall_Request) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{5, 0}
}

func (x *AddServerFirewall_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddServerFirewall_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AddServerFirewall_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (m *AddServerFirewall_Request) GetRecord() isAddServerFirewall_Request_Record {
	if m != nil {
		return m.Record
	}
	return nil
}

func (x *AddServerFirewall_Request) GetIp() *IpMask {
	if x, ok := x.GetRecord().(*AddServerFirewall_Request_Ip); ok {
		return x.Ip
	}
	return nil
}

func (x *AddServerFirewall_Request) GetCountryCode() string {
	if x, ok := x.GetRecord().(*AddServerFirewall_Request_CountryCode); ok {
		return x.CountryCode
	}
	return ""
}

type isAddServerFirewall_Request_Record interface {
	isAddServerFirewall_Request_Record()
}

type AddServerFirewall_Request_Ip struct {
	Ip *IpMask `protobuf:"bytes,4,opt,name=ip,proto3,oneof"`
}

type AddServerFirewall_Request_CountryCode struct {
	CountryCode string `protobuf:"bytes,5,opt,name=country_code,json=countryCode,proto3,oneof"`
}

func (*AddServerFirewall_Request_Ip) isAddServerFirewall_Request_Record() {}

func (*AddServerFirewall_Request_CountryCode) isAddServerFirewall_Request_Record() {}

type AddServerFirewall_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddServerFirewall_Response) Reset() {
	*x = AddServerFirewall_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddServerFirewall_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServerFirewall_Response) ProtoMessage() {}

func (x *AddServerFirewall_Response) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServerFirewall_Response.ProtoReflect.Descriptor instead.
func (*AddServerFirewall_Response) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{5, 1}
}

func (x *AddServerFirewall_Response) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateServerFirewall_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ServerId  string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Rule      Rules  `protobuf:"varint,4,opt,name=rule,proto3,enum=firewall.Rules" json:"rule,omitempty"`
	Status    bool   `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateServerFirewall_Request) Reset() {
	*x = UpdateServerFirewall_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerFirewall_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerFirewall_Request) ProtoMessage() {}

func (x *UpdateServerFirewall_Request) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerFirewall_Request.ProtoReflect.Descriptor instead.
func (*UpdateServerFirewall_Request) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{6, 0}
}

func (x *UpdateServerFirewall_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateServerFirewall_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateServerFirewall_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *UpdateServerFirewall_Request) GetRule() Rules {
	if x != nil {
		return x.Rule
	}
	return Rules_unspecified
}

func (x *UpdateServerFirewall_Request) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UpdateServerFirewall_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerFirewall_Response) Reset() {
	*x = UpdateServerFirewall_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerFirewall_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerFirewall_Response) ProtoMessage() {}

func (x *UpdateServerFirewall_Response) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerFirewall_Response.ProtoReflect.Descriptor instead.
func (*UpdateServerFirewall_Response) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{6, 1}
}

type DeleteServerFirewall_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ServerId  string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Rule      Rules  `protobuf:"varint,4,opt,name=rule,proto3,enum=firewall.Rules" json:"rule,omitempty"`
	RecordId  string `protobuf:"bytes,5,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
}

func (x *DeleteServerFirewall_Request) Reset() {
	*x = DeleteServerFirewall_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServerFirewall_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServerFirewall_Request) ProtoMessage() {}

func (x *DeleteServerFirewall_Request) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServerFirewall_Request.ProtoReflect.Descriptor instead.
func (*DeleteServerFirewall_Request) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{7, 0}
}

func (x *DeleteServerFirewall_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteServerFirewall_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteServerFirewall_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *DeleteServerFirewall_Request) GetRule() Rules {
	if x != nil {
		return x.Rule
	}
	return Rules_unspecified
}

func (x *DeleteServerFirewall_Request) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

type DeleteServerFirewall_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteServerFirewall_Response) Reset() {
	*x = DeleteServerFirewall_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServerFirewall_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServerFirewall_Response) ProtoMessage() {}

func (x *DeleteServerFirewall_Response) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServerFirewall_Response.ProtoReflect.Descriptor instead.
func (*DeleteServerFirewall_Response) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{7, 1}
}

type IPAccess_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientIp string `protobuf:"bytes,1,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
}

func (x *IPAccess_Request) Reset() {
	*x = IPAccess_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPAccess_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAccess_Request) ProtoMessage() {}

func (x *IPAccess_Request) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAccess_Request.ProtoReflect.Descriptor instead.
func (*IPAccess_Request) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{8, 0}
}

func (x *IPAccess_Request) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

type IPAccess_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IPAccess_Response) Reset() {
	*x = IPAccess_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPAccess_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAccess_Response) ProtoMessage() {}

func (x *IPAccess_Response) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAccess_Response.ProtoReflect.Descriptor instead.
func (*IPAccess_Response) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{8, 1}
}

type ServerAccess_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id"`        
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" query:"server_id"`  
	MemberIp string `protobuf:"bytes,3,opt,name=member_ip,json=memberIp,proto3" json:"member_ip,omitempty" query:"member_ip"`  
}

func (x *ServerAccess_Request) Reset() {
	*x = ServerAccess_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccess_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccess_Request) ProtoMessage() {}

func (x *ServerAccess_Request) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccess_Request.ProtoReflect.Descriptor instead.
func (*ServerAccess_Request) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ServerAccess_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ServerAccess_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ServerAccess_Request) GetMemberIp() string {
	if x != nil {
		return x.MemberIp
	}
	return ""
}

type ServerAccess_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerAccess_Response) Reset() {
	*x = ServerAccess_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccess_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccess_Response) ProtoMessage() {}

func (x *ServerAccess_Response) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccess_Response.ProtoReflect.Descriptor instead.
func (*ServerAccess_Response) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{9, 1}
}

type ServerAccessUser_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *ServerAccessUser_Request) Reset() {
	*x = ServerAccessUser_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccessUser_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccessUser_Request) ProtoMessage() {}

func (x *ServerAccessUser_Request) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccessUser_Request.ProtoReflect.Descriptor instead.
func (*ServerAccessUser_Request) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{10, 0}
}

func (x *ServerAccessUser_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ServerAccessUser_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type ServerAccessUser_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerAccessUser_Response) Reset() {
	*x = ServerAccessUser_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccessUser_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccessUser_Response) ProtoMessage() {}

func (x *ServerAccessUser_Response) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccessUser_Response.ProtoReflect.Descriptor instead.
func (*ServerAccessUser_Response) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{10, 1}
}

type ServerAccessTime_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *ServerAccessTime_Request) Reset() {
	*x = ServerAccessTime_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccessTime_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccessTime_Request) ProtoMessage() {}

func (x *ServerAccessTime_Request) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccessTime_Request.ProtoReflect.Descriptor instead.
func (*ServerAccessTime_Request) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ServerAccessTime_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type ServerAccessTime_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerAccessTime_Response) Reset() {
	*x = ServerAccessTime_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccessTime_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccessTime_Response) ProtoMessage() {}

func (x *ServerAccessTime_Response) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccessTime_Response.ProtoReflect.Descriptor instead.
func (*ServerAccessTime_Response) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{11, 1}
}

type ServerAccessIP_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	MemberIp string `protobuf:"bytes,2,opt,name=member_ip,json=memberIp,proto3" json:"member_ip,omitempty"`
}

func (x *ServerAccessIP_Request) Reset() {
	*x = ServerAccessIP_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccessIP_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccessIP_Request) ProtoMessage() {}

func (x *ServerAccessIP_Request) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccessIP_Request.ProtoReflect.Descriptor instead.
func (*ServerAccessIP_Request) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{12, 0}
}

func (x *ServerAccessIP_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ServerAccessIP_Request) GetMemberIp() string {
	if x != nil {
		return x.MemberIp
	}
	return ""
}

type ServerAccessIP_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerAccessIP_Response) Reset() {
	*x = ServerAccessIP_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccessIP_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccessIP_Response) ProtoMessage() {}

func (x *ServerAccessIP_Response) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccessIP_Response.ProtoReflect.Descriptor instead.
func (*ServerAccessIP_Response) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{12, 1}
}

type ServerAccessCountry_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	MemberIp string `protobuf:"bytes,2,opt,name=member_ip,json=memberIp,proto3" json:"member_ip,omitempty"`
}

func (x *ServerAccessCountry_Request) Reset() {
	*x = ServerAccessCountry_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccessCountry_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccessCountry_Request) ProtoMessage() {}

func (x *ServerAccessCountry_Request) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccessCountry_Request.ProtoReflect.Descriptor instead.
func (*ServerAccessCountry_Request) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{13, 0}
}

func (x *ServerAccessCountry_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ServerAccessCountry_Request) GetMemberIp() string {
	if x != nil {
		return x.MemberIp
	}
	return ""
}

type ServerAccessCountry_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerAccessCountry_Response) Reset() {
	*x = ServerAccessCountry_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_firewall_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccessCountry_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccessCountry_Response) ProtoMessage() {}

func (x *ServerAccessCountry_Response) ProtoReflect() protoreflect.Message {
	mi := &file_firewall_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccessCountry_Response.ProtoReflect.Descriptor instead.
func (*ServerAccessCountry_Response) Descriptor() ([]byte, []int) {
	return file_firewall_proto_rawDescGZIP(), []int{13, 1}
}

var File_firewall_proto protoreflect.FileDescriptor

var file_firewall_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x7c, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x68, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x49, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x49, 0x70, 0x22, 0x5d, 0x0a, 0x0a, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x3a, 0x0a, 0x06, 0x49, 0x70,
	0x4d, 0x61, 0x73, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x70, 0x12,
	0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6e, 0x64, 0x49, 0x70, 0x22, 0xba, 0x03, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x1a, 0x7f, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xd0, 0x01, 0x01, 0xb0,
	0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x85, 0x01, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x77,
	0x61, 0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61,
	0x6c, 0x6c, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c,
	0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x1a, 0x4f, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x77, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x69, 0x72,
	0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x1a, 0x4e, 0x0a, 0x08, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x77, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x69, 0x72,
	0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x8e, 0x02, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x1a, 0xdc, 0x01, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xd0, 0x01, 0x01,
	0xb0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61,
	0x6c, 0x6c, 0x2e, 0x49, 0x70, 0x4d, 0x61, 0x73, 0x6b, 0x48, 0x00, 0x52, 0x02, 0x69, 0x70, 0x12,
	0x2d, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x98, 0x01, 0x02, 0x48,
	0x00, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x08,
	0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xe1, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x1a, 0xbc, 0x01,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72,
	0x06, 0xd0, 0x01, 0x01, 0xb0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x04,
	0x72, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x0a, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf0, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c,
	0x6c, 0x1a, 0xcb, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xfa, 0x42, 0x08, 0x72, 0x06, 0xd0, 0x01, 0x01, 0xb0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x1a,
	0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x0a, 0x08, 0x49,
	0x50, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x2f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x70, 0x01, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x7c, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xd0, 0x01, 0x01, 0xb0, 0x01, 0x01, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0xb0, 0x01, 0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x70, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x70, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x76, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x1a, 0x56, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xd0, 0x01, 0x01, 0xb0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x30, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0xb0, 0x01, 0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0a, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x74, 0x0a, 0x0e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x50, 0x1a, 0x56, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0xb0, 0x01, 0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x70, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x70, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x79, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x1a, 0x56, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x70, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x70, 0x1a, 0x0a,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x2d, 0x0a, 0x05, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x10,
	0x01, 0x12, 0x06, 0x0a, 0x02, 0x69, 0x70, 0x10, 0x02, 0x32, 0xbc, 0x07, 0x0a, 0x10, 0x46, 0x69,
	0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x45,
	0x0a, 0x08, 0x49, 0x50, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x2e, 0x66, 0x69, 0x72,
	0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x49, 0x50, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c,
	0x6c, 0x2e, 0x49, 0x50, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46,
	0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x12, 0x20, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61,
	0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c,
	0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x66, 0x69, 0x72, 0x65,
	0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x69, 0x72, 0x65, 0x77,
	0x61, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60,
	0x0a, 0x11, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x69, 0x72, 0x65, 0x77,
	0x61, 0x6c, 0x6c, 0x12, 0x23, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x41,
	0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x77,
	0x61, 0x6c, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x69, 0x72,
	0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x69, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x12, 0x26, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x77,
	0x61, 0x6c, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x69, 0x72, 0x65, 0x77,
	0x61, 0x6c, 0x6c, 0x12, 0x26, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x69, 0x72, 0x65, 0x77,
	0x61, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x66, 0x69,
	0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c,
	0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c,
	0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x10, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x2e,
	0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x2e, 0x66,
	0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x50, 0x12, 0x20, 0x2e, 0x66, 0x69, 0x72, 0x65,
	0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x50, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x66, 0x69,
	0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x50, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x66, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x25, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61,
	0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x74, 0x2f, 0x77, 0x65,
	0x72, 0x62, 0x6f, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x2f, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_firewall_proto_rawDescOnce sync.Once
	file_firewall_proto_rawDescData = file_firewall_proto_rawDesc
)

func file_firewall_proto_rawDescGZIP() []byte {
	file_firewall_proto_rawDescOnce.Do(func() {
		file_firewall_proto_rawDescData = protoimpl.X.CompressGZIP(file_firewall_proto_rawDescData)
	})
	return file_firewall_proto_rawDescData
}

var file_firewall_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_firewall_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_firewall_proto_goTypes = []interface{}{
	(Rules)(0),                            // 0: firewall.Rules
	(*Country)(nil),                       // 1: firewall.Country
	(*Network)(nil),                       // 2: firewall.Network
	(*AccessList)(nil),                    // 3: firewall.AccessList
	(*IpMask)(nil),                        // 4: firewall.IpMask
	(*ServerFirewall)(nil),                // 5: firewall.ServerFirewall
	(*AddServerFirewall)(nil),             // 6: firewall.AddServerFirewall
	(*UpdateServerFirewall)(nil),          // 7: firewall.UpdateServerFirewall
	(*DeleteServerFirewall)(nil),          // 8: firewall.DeleteServerFirewall
	(*IPAccess)(nil),                      // 9: firewall.IPAccess
	(*ServerAccess)(nil),                  // 10: firewall.ServerAccess
	(*ServerAccessUser)(nil),              // 11: firewall.ServerAccessUser
	(*ServerAccessTime)(nil),              // 12: firewall.ServerAccessTime
	(*ServerAccessIP)(nil),                // 13: firewall.ServerAccessIP
	(*ServerAccessCountry)(nil),           // 14: firewall.ServerAccessCountry
	(*ServerFirewall_Request)(nil),        // 15: firewall.ServerFirewall.Request
	(*ServerFirewall_Response)(nil),       // 16: firewall.ServerFirewall.Response
	(*ServerFirewall_Countries)(nil),      // 17: firewall.ServerFirewall.Countries
	(*ServerFirewall_Networks)(nil),       // 18: firewall.ServerFirewall.Networks
	(*AddServerFirewall_Request)(nil),     // 19: firewall.AddServerFirewall.Request
	(*AddServerFirewall_Response)(nil),    // 20: firewall.AddServerFirewall.Response
	(*UpdateServerFirewall_Request)(nil),  // 21: firewall.UpdateServerFirewall.Request
	(*UpdateServerFirewall_Response)(nil), // 22: firewall.UpdateServerFirewall.Response
	(*DeleteServerFirewall_Request)(nil),  // 23: firewall.DeleteServerFirewall.Request
	(*DeleteServerFirewall_Response)(nil), // 24: firewall.DeleteServerFirewall.Response
	(*IPAccess_Request)(nil),              // 25: firewall.IPAccess.Request
	(*IPAccess_Response)(nil),             // 26: firewall.IPAccess.Response
	(*ServerAccess_Request)(nil),          // 27: firewall.ServerAccess.Request
	(*ServerAccess_Response)(nil),         // 28: firewall.ServerAccess.Response
	(*ServerAccessUser_Request)(nil),      // 29: firewall.ServerAccessUser.Request
	(*ServerAccessUser_Response)(nil),     // 30: firewall.ServerAccessUser.Response
	(*ServerAccessTime_Request)(nil),      // 31: firewall.ServerAccessTime.Request
	(*ServerAccessTime_Response)(nil),     // 32: firewall.ServerAccessTime.Response
	(*ServerAccessIP_Request)(nil),        // 33: firewall.ServerAccessIP.Request
	(*ServerAccessIP_Response)(nil),       // 34: firewall.ServerAccessIP.Response
	(*ServerAccessCountry_Request)(nil),   // 35: firewall.ServerAccessCountry.Request
	(*ServerAccessCountry_Response)(nil),  // 36: firewall.ServerAccessCountry.Response
}
var file_firewall_proto_depIdxs = []int32{
	17, // 0: firewall.ServerFirewall.Response.country:type_name -> firewall.ServerFirewall.Countries
	18, // 1: firewall.ServerFirewall.Response.network:type_name -> firewall.ServerFirewall.Networks
	1,  // 2: firewall.ServerFirewall.Countries.list:type_name -> firewall.Country
	2,  // 3: firewall.ServerFirewall.Networks.list:type_name -> firewall.Network
	4,  // 4: firewall.AddServerFirewall.Request.ip:type_name -> firewall.IpMask
	0,  // 5: firewall.UpdateServerFirewall.Request.rule:type_name -> firewall.Rules
	0,  // 6: firewall.DeleteServerFirewall.Request.rule:type_name -> firewall.Rules
	25, // 7: firewall.FirewallHandlers.IPAccess:input_type -> firewall.IPAccess.Request
	15, // 8: firewall.FirewallHandlers.ServerFirewall:input_type -> firewall.ServerFirewall.Request
	19, // 9: firewall.FirewallHandlers.AddServerFirewall:input_type -> firewall.AddServerFirewall.Request
	21, // 10: firewall.FirewallHandlers.UpdateServerFirewall:input_type -> firewall.UpdateServerFirewall.Request
	23, // 11: firewall.FirewallHandlers.DeleteServerFirewall:input_type -> firewall.DeleteServerFirewall.Request
	27, // 12: firewall.FirewallHandlers.ServerAccess:input_type -> firewall.ServerAccess.Request
	29, // 13: firewall.FirewallHandlers.ServerAccessUser:input_type -> firewall.ServerAccessUser.Request
	31, // 14: firewall.FirewallHandlers.ServerAccessTime:input_type -> firewall.ServerAccessTime.Request
	33, // 15: firewall.FirewallHandlers.ServerAccessIP:input_type -> firewall.ServerAccessIP.Request
	35, // 16: firewall.FirewallHandlers.ServerAccessCountry:input_type -> firewall.ServerAccessCountry.Request
	26, // 17: firewall.FirewallHandlers.IPAccess:output_type -> firewall.IPAccess.Response
	16, // 18: firewall.FirewallHandlers.ServerFirewall:output_type -> firewall.ServerFirewall.Response
	20, // 19: firewall.FirewallHandlers.AddServerFirewall:output_type -> firewall.AddServerFirewall.Response
	22, // 20: firewall.FirewallHandlers.UpdateServerFirewall:output_type -> firewall.UpdateServerFirewall.Response
	24, // 21: firewall.FirewallHandlers.DeleteServerFirewall:output_type -> firewall.DeleteServerFirewall.Response
	28, // 22: firewall.FirewallHandlers.ServerAccess:output_type -> firewall.ServerAccess.Response
	30, // 23: firewall.FirewallHandlers.ServerAccessUser:output_type -> firewall.ServerAccessUser.Response
	32, // 24: firewall.FirewallHandlers.ServerAccessTime:output_type -> firewall.ServerAccessTime.Response
	34, // 25: firewall.FirewallHandlers.ServerAccessIP:output_type -> firewall.ServerAccessIP.Response
	36, // 26: firewall.FirewallHandlers.ServerAccessCountry:output_type -> firewall.ServerAccessCountry.Response
	17, // [17:27] is the sub-list for method output_type
	7,  // [7:17] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_firewall_proto_init() }
func file_firewall_proto_init() {
	if File_firewall_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_firewall_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Country); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Network); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpMask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerFirewall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddServerFirewall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerFirewall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServerFirewall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPAccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccessUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccessTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccessIP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccessCountry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerFirewall_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerFirewall_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerFirewall_Countries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerFirewall_Networks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddServerFirewall_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddServerFirewall_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerFirewall_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerFirewall_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServerFirewall_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServerFirewall_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPAccess_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPAccess_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccess_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccess_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccessUser_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccessUser_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccessTime_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccessTime_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccessIP_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccessIP_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccessCountry_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_firewall_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccessCountry_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_firewall_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*AddServerFirewall_Request_Ip)(nil),
		(*AddServerFirewall_Request_CountryCode)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_firewall_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_firewall_proto_goTypes,
		DependencyIndexes: file_firewall_proto_depIdxs,
		EnumInfos:         file_firewall_proto_enumTypes,
		MessageInfos:      file_firewall_proto_msgTypes,
	}.Build()
	File_firewall_proto = out.File
	file_firewall_proto_rawDesc = nil
	file_firewall_proto_goTypes = nil
	file_firewall_proto_depIdxs = nil
}
