// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: server.proto

package proto

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Auth int32

const (
	Auth_auth_unspecified Auth = 0
	Auth_password         Auth = 1
	Auth_key              Auth = 2
	Auth_agent            Auth = 3
)

// Enum value maps for Auth.
var (
	Auth_name = map[int32]string{
		0: "auth_unspecified",
		1: "password",
		2: "key",
		3: "agent",
	}
	Auth_value = map[string]int32{
		"auth_unspecified": 0,
		"password":         1,
		"key":              2,
		"agent":            3,
	}
)

func (x Auth) Enum() *Auth {
	p := new(Auth)
	*p = x
	return p
}

func (x Auth) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Auth) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[0].Descriptor()
}

func (Auth) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[0]
}

func (x Auth) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Auth.Descriptor instead.
func (Auth) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0}
}

type ServerScheme int32

const (
	ServerScheme_server_unspecified ServerScheme = 0
	ServerScheme_tcp                ServerScheme = 1
	ServerScheme_udp                ServerScheme = 2
	ServerScheme_ssh                ServerScheme = 3
	ServerScheme_telnet             ServerScheme = 4
)

// Enum value maps for ServerScheme.
var (
	ServerScheme_name = map[int32]string{
		0: "server_unspecified",
		1: "tcp",
		2: "udp",
		3: "ssh",
		4: "telnet",
	}
	ServerScheme_value = map[string]int32{
		"server_unspecified": 0,
		"tcp":                1,
		"udp":                2,
		"ssh":                3,
		"telnet":             4,
	}
)

func (x ServerScheme) Enum() *ServerScheme {
	p := new(ServerScheme)
	*p = x
	return p
}

func (x ServerScheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerScheme) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[1].Descriptor()
}

func (ServerScheme) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[1]
}

func (x ServerScheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerScheme.Descriptor instead.
func (ServerScheme) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1}
}

type DatabaseScheme int32

const (
	DatabaseScheme_database_unspecified DatabaseScheme = 0
	DatabaseScheme_mysql                DatabaseScheme = 1
	DatabaseScheme_postgres             DatabaseScheme = 2
	DatabaseScheme_redis                DatabaseScheme = 3
	DatabaseScheme_mongodb              DatabaseScheme = 4
	DatabaseScheme_elastic              DatabaseScheme = 5
	DatabaseScheme_dynamodb             DatabaseScheme = 6
	DatabaseScheme_cassandra            DatabaseScheme = 7
	DatabaseScheme_sqlserver            DatabaseScheme = 8
	DatabaseScheme_snowflake            DatabaseScheme = 9
)

// Enum value maps for DatabaseScheme.
var (
	DatabaseScheme_name = map[int32]string{
		0: "database_unspecified",
		1: "mysql",
		2: "postgres",
		3: "redis",
		4: "mongodb",
		5: "elastic",
		6: "dynamodb",
		7: "cassandra",
		8: "sqlserver",
		9: "snowflake",
	}
	DatabaseScheme_value = map[string]int32{
		"database_unspecified": 0,
		"mysql":                1,
		"postgres":             2,
		"redis":                3,
		"mongodb":              4,
		"elastic":              5,
		"dynamodb":             6,
		"cassandra":            7,
		"sqlserver":            8,
		"snowflake":            9,
	}
)

func (x DatabaseScheme) Enum() *DatabaseScheme {
	p := new(DatabaseScheme)
	*p = x
	return p
}

func (x DatabaseScheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DatabaseScheme) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[2].Descriptor()
}

func (DatabaseScheme) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[2]
}

func (x DatabaseScheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DatabaseScheme.Descriptor instead.
func (DatabaseScheme) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2}
}

type DesktopScheme int32

const (
	DesktopScheme_desktop_unspecified DesktopScheme = 0
	DesktopScheme_rdp                 DesktopScheme = 1
	DesktopScheme_vnc                 DesktopScheme = 2
)

// Enum value maps for DesktopScheme.
var (
	DesktopScheme_name = map[int32]string{
		0: "desktop_unspecified",
		1: "rdp",
		2: "vnc",
	}
	DesktopScheme_value = map[string]int32{
		"desktop_unspecified": 0,
		"rdp":                 1,
		"vnc":                 2,
	}
)

func (x DesktopScheme) Enum() *DesktopScheme {
	p := new(DesktopScheme)
	*p = x
	return p
}

func (x DesktopScheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DesktopScheme) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[3].Descriptor()
}

func (DesktopScheme) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[3]
}

func (x DesktopScheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DesktopScheme.Descriptor instead.
func (DesktopScheme) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3}
}

type ContainersScheme int32

const (
	ContainersScheme_containers_unspecified ContainersScheme = 0
	ContainersScheme_docker                 ContainersScheme = 1
	ContainersScheme_k8s                    ContainersScheme = 2
)

// Enum value maps for ContainersScheme.
var (
	ContainersScheme_name = map[int32]string{
		0: "containers_unspecified",
		1: "docker",
		2: "k8s",
	}
	ContainersScheme_value = map[string]int32{
		"containers_unspecified": 0,
		"docker":                 1,
		"k8s":                    2,
	}
)

func (x ContainersScheme) Enum() *ContainersScheme {
	p := new(ContainersScheme)
	*p = x
	return p
}

func (x ContainersScheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainersScheme) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[4].Descriptor()
}

func (ContainersScheme) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[4]
}

func (x ContainersScheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContainersScheme.Descriptor instead.
func (ContainersScheme) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{4}
}

type CloudsScheme int32

const (
	CloudsScheme_clouds_unspecified CloudsScheme = 0
	CloudsScheme_aws                CloudsScheme = 1
	CloudsScheme_google             CloudsScheme = 2
	CloudsScheme_azure              CloudsScheme = 3
	CloudsScheme_do                 CloudsScheme = 4
	CloudsScheme_hetzner            CloudsScheme = 5
)

// Enum value maps for CloudsScheme.
var (
	CloudsScheme_name = map[int32]string{
		0: "clouds_unspecified",
		1: "aws",
		2: "google",
		3: "azure",
		4: "do",
		5: "hetzner",
	}
	CloudsScheme_value = map[string]int32{
		"clouds_unspecified": 0,
		"aws":                1,
		"google":             2,
		"azure":              3,
		"do":                 4,
		"hetzner":            5,
	}
)

func (x CloudsScheme) Enum() *CloudsScheme {
	p := new(CloudsScheme)
	*p = x
	return p
}

func (x CloudsScheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloudsScheme) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[5].Descriptor()
}

func (CloudsScheme) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[5]
}

func (x CloudsScheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloudsScheme.Descriptor instead.
func (CloudsScheme) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{5}
}

type SessionStatus int32

const (
	SessionStatus_session_unspecified SessionStatus = 0
	SessionStatus_opened              SessionStatus = 1
	SessionStatus_closed              SessionStatus = 2
)

// Enum value maps for SessionStatus.
var (
	SessionStatus_name = map[int32]string{
		0: "session_unspecified",
		1: "opened",
		2: "closed",
	}
	SessionStatus_value = map[string]int32{
		"session_unspecified": 0,
		"opened":              1,
		"closed":              2,
	}
)

func (x SessionStatus) Enum() *SessionStatus {
	p := new(SessionStatus)
	*p = x
	return p
}

func (x SessionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[6].Descriptor()
}

func (SessionStatus) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[6]
}

func (x SessionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionStatus.Descriptor instead.
func (SessionStatus) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{6}
}

type Type int32

const (
	Type_type_unspecified Type = 0
	Type_healthcheck      Type = 1
	Type_shell            Type = 2
	Type_bastion          Type = 3
	Type_invite           Type = 4
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "type_unspecified",
		1: "healthcheck",
		2: "shell",
		3: "bastion",
		4: "invite",
	}
	Type_value = map[string]int32{
		"type_unspecified": 0,
		"healthcheck":      1,
		"shell":            2,
		"bastion":          3,
		"invite":           4,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[7].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[7]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{7}
}

// rpc ListServers
type ListServers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListServers) Reset() {
	*x = ListServers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServers) ProtoMessage() {}

func (x *ListServers) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServers.ProtoReflect.Descriptor instead.
func (*ListServers) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0}
}

// rpc Server
type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1}
}

// rpc AddServer
type AddServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddServer) Reset() {
	*x = AddServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServer) ProtoMessage() {}

func (x *AddServer) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServer.ProtoReflect.Descriptor instead.
func (*AddServer) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2}
}

// rpc UpdateServer
type UpdateServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServer) Reset() {
	*x = UpdateServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServer) ProtoMessage() {}

func (x *UpdateServer) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServer.ProtoReflect.Descriptor instead.
func (*UpdateServer) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3}
}

// rpc DeleteServer
type DeleteServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteServer) Reset() {
	*x = DeleteServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServer) ProtoMessage() {}

func (x *DeleteServer) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServer.ProtoReflect.Descriptor instead.
func (*DeleteServer) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{4}
}

// rpc ServerAccess
type ServerAccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerAccess) Reset() {
	*x = ServerAccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccess) ProtoMessage() {}

func (x *ServerAccess) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccess.ProtoReflect.Descriptor instead.
func (*ServerAccess) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{5}
}

// rpc UpdateServerAccess
type UpdateServerAccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerAccess) Reset() {
	*x = UpdateServerAccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerAccess) ProtoMessage() {}

func (x *UpdateServerAccess) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerAccess.ProtoReflect.Descriptor instead.
func (*UpdateServerAccess) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{6}
}

// rpc ServerActivity
type ServerActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerActivity) Reset() {
	*x = ServerActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerActivity) ProtoMessage() {}

func (x *ServerActivity) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerActivity.ProtoReflect.Descriptor instead.
func (*ServerActivity) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{7}
}

// rpc UpdateServerActivity
type UpdateServerActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerActivity) Reset() {
	*x = UpdateServerActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerActivity) ProtoMessage() {}

func (x *UpdateServerActivity) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerActivity.ProtoReflect.Descriptor instead.
func (*UpdateServerActivity) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{8}
}

// rpc UpdateHostKey
type UpdateHostKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateHostKey) Reset() {
	*x = UpdateHostKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHostKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHostKey) ProtoMessage() {}

func (x *UpdateHostKey) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHostKey.ProtoReflect.Descriptor instead.
func (*UpdateHostKey) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{9}
}

// rpc AddSession
type AddSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddSession) Reset() {
	*x = AddSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSession) ProtoMessage() {}

func (x *AddSession) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSession.ProtoReflect.Descriptor instead.
func (*AddSession) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{10}
}

// rpc ServerNameByID
type ServerNameByID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerNameByID) Reset() {
	*x = ServerNameByID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerNameByID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerNameByID) ProtoMessage() {}

func (x *ServerNameByID) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerNameByID.ProtoReflect.Descriptor instead.
func (*ServerNameByID) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{11}
}

// rpc ListShareServers
type ListShareServers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListShareServers) Reset() {
	*x = ListShareServers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShareServers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShareServers) ProtoMessage() {}

func (x *ListShareServers) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShareServers.ProtoReflect.Descriptor instead.
func (*ListShareServers) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{12}
}

// rpc AddShareServer
type AddShareServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddShareServer) Reset() {
	*x = AddShareServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddShareServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddShareServer) ProtoMessage() {}

func (x *AddShareServer) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddShareServer.ProtoReflect.Descriptor instead.
func (*AddShareServer) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{13}
}

// rpc UpdateShareServer
type UpdateShareServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateShareServer) Reset() {
	*x = UpdateShareServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShareServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShareServer) ProtoMessage() {}

func (x *UpdateShareServer) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShareServer.ProtoReflect.Descriptor instead.
func (*UpdateShareServer) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{14}
}

// rpc DeleteShareServer
type DeleteShareServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteShareServer) Reset() {
	*x = DeleteShareServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShareServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShareServer) ProtoMessage() {}

func (x *DeleteShareServer) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShareServer.ProtoReflect.Descriptor instead.
func (*DeleteShareServer) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{15}
}

type ListServers_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	Query  string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListServers_Request) Reset() {
	*x = ListServers_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServers_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServers_Request) ProtoMessage() {}

func (x *ListServers_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServers_Request.ProtoReflect.Descriptor instead.
func (*ListServers_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ListServers_Request) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListServers_Request) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListServers_Request) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListServers_Request) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type ListServers_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   int32              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Servers []*Server_Response `protobuf:"bytes,2,rep,name=servers,proto3" json:"servers,omitempty"`
}

func (x *ListServers_Response) Reset() {
	*x = ListServers_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServers_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServers_Response) ProtoMessage() {}

func (x *ListServers_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServers_Response.ProtoReflect.Descriptor instead.
func (*ListServers_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ListServers_Response) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListServers_Response) GetServers() []*Server_Response {
	if x != nil {
		return x.Servers
	}
	return nil
}

type Server_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" params:"user_id"`           
	ServerId  string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" query:"server_id" params:"server_id"`     
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" query:"project_id" params:"project_id"`  
}

func (x *Server_Request) Reset() {
	*x = Server_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_Request) ProtoMessage() {}

func (x *Server_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_Request.ProtoReflect.Descriptor instead.
func (*Server_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Server_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Server_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *Server_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type Server_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId     string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ProjectId    string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AccessId     string                 `protobuf:"bytes,3,opt,name=access_id,json=accessId,proto3" json:"access_id,omitempty"`
	ProjectLogin string                 `protobuf:"bytes,4,opt,name=project_login,json=projectLogin,proto3" json:"project_login,omitempty"`
	Address      string                 `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Port         int32                  `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
	Token        string                 `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	Login        string                 `protobuf:"bytes,8,opt,name=login,proto3" json:"login,omitempty"`
	Title        string                 `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
	Audit        bool                   `protobuf:"varint,10,opt,name=audit,proto3" json:"audit,omitempty"`
	Online       bool                   `protobuf:"varint,11,opt,name=online,proto3" json:"online,omitempty"`
	AccountId    string                 `protobuf:"bytes,12,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Auth         Auth                   `protobuf:"varint,13,opt,name=auth,proto3,enum=server.Auth" json:"auth,omitempty"`
	Scheme       ServerScheme           `protobuf:"varint,14,opt,name=scheme,proto3,enum=server.ServerScheme" json:"scheme,omitempty"`
	HostKey      []byte                 `protobuf:"bytes,15,opt,name=host_key,json=hostKey,proto3" json:"host_key,omitempty"`
	Description  string                 `protobuf:"bytes,16,opt,name=description,proto3" json:"description,omitempty"`
	Active       bool                   `protobuf:"varint,17,opt,name=active,proto3" json:"active,omitempty"`
	CountMembers int32                  `protobuf:"varint,18,opt,name=count_members,json=countMembers,proto3" json:"count_members,omitempty"`
	LastUpdate   *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	Created      *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *Server_Response) Reset() {
	*x = Server_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_Response) ProtoMessage() {}

func (x *Server_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_Response.ProtoReflect.Descriptor instead.
func (*Server_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Server_Response) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *Server_Response) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Server_Response) GetAccessId() string {
	if x != nil {
		return x.AccessId
	}
	return ""
}

func (x *Server_Response) GetProjectLogin() string {
	if x != nil {
		return x.ProjectLogin
	}
	return ""
}

func (x *Server_Response) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Server_Response) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Server_Response) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Server_Response) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *Server_Response) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Server_Response) GetAudit() bool {
	if x != nil {
		return x.Audit
	}
	return false
}

func (x *Server_Response) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *Server_Response) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Server_Response) GetAuth() Auth {
	if x != nil {
		return x.Auth
	}
	return Auth_auth_unspecified
}

func (x *Server_Response) GetScheme() ServerScheme {
	if x != nil {
		return x.Scheme
	}
	return ServerScheme_server_unspecified
}

func (x *Server_Response) GetHostKey() []byte {
	if x != nil {
		return x.HostKey
	}
	return nil
}

func (x *Server_Response) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Server_Response) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Server_Response) GetCountMembers() int32 {
	if x != nil {
		return x.CountMembers
	}
	return 0
}

func (x *Server_Response) GetLastUpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdate
	}
	return nil
}

func (x *Server_Response) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

type AddServer_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId   string       `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Address     string       `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Port        int32        `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	Title       string       `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Scheme      ServerScheme `protobuf:"varint,6,opt,name=scheme,proto3,enum=server.ServerScheme" json:"scheme,omitempty"`
	Audit       bool         `protobuf:"varint,7,opt,name=audit,proto3" json:"audit,omitempty"`
	Active      bool         `protobuf:"varint,8,opt,name=active,proto3" json:"active,omitempty"`
	Description string       `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	Login       string       `protobuf:"bytes,10,opt,name=login,proto3" json:"login,omitempty"`
	// Types that are assignable to Access:
	//
	//	*AddServer_Request_Password
	//	*AddServer_Request_Key
	Access isAddServer_Request_Access `protobuf_oneof:"access"`
}

func (x *AddServer_Request) Reset() {
	*x = AddServer_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddServer_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServer_Request) ProtoMessage() {}

func (x *AddServer_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServer_Request.ProtoReflect.Descriptor instead.
func (*AddServer_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2, 0}
}

func (x *AddServer_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddServer_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AddServer_Request) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddServer_Request) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *AddServer_Request) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddServer_Request) GetScheme() ServerScheme {
	if x != nil {
		return x.Scheme
	}
	return ServerScheme_server_unspecified
}

func (x *AddServer_Request) GetAudit() bool {
	if x != nil {
		return x.Audit
	}
	return false
}

func (x *AddServer_Request) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddServer_Request) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddServer_Request) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (m *AddServer_Request) GetAccess() isAddServer_Request_Access {
	if m != nil {
		return m.Access
	}
	return nil
}

func (x *AddServer_Request) GetPassword() string {
	if x, ok := x.GetAccess().(*AddServer_Request_Password); ok {
		return x.Password
	}
	return ""
}

func (x *AddServer_Request) GetKey() string {
	if x, ok := x.GetAccess().(*AddServer_Request_Key); ok {
		return x.Key
	}
	return ""
}

type isAddServer_Request_Access interface {
	isAddServer_Request_Access()
}

type AddServer_Request_Password struct {
	Password string `protobuf:"bytes,11,opt,name=password,proto3,oneof"`
}

type AddServer_Request_Key struct {
	Key string `protobuf:"bytes,12,opt,name=key,proto3,oneof"` // key UUID from redis
}

func (*AddServer_Request_Password) isAddServer_Request_Access() {}

func (*AddServer_Request_Key) isAddServer_Request_Access() {}

type AddServer_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *AddServer_Response) Reset() {
	*x = AddServer_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddServer_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServer_Response) ProtoMessage() {}

func (x *AddServer_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServer_Response.ProtoReflect.Descriptor instead.
func (*AddServer_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2, 1}
}

func (x *AddServer_Response) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type UpdateServer_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ServerId  string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	// Types that are assignable to Setting:
	//
	//	*UpdateServer_Request_Info
	//	*UpdateServer_Request_Audit
	//	*UpdateServer_Request_Active
	//	*UpdateServer_Request_Online
	Setting isUpdateServer_Request_Setting `protobuf_oneof:"setting"`
}

func (x *UpdateServer_Request) Reset() {
	*x = UpdateServer_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServer_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServer_Request) ProtoMessage() {}

func (x *UpdateServer_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServer_Request.ProtoReflect.Descriptor instead.
func (*UpdateServer_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3, 0}
}

func (x *UpdateServer_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateServer_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateServer_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (m *UpdateServer_Request) GetSetting() isUpdateServer_Request_Setting {
	if m != nil {
		return m.Setting
	}
	return nil
}

func (x *UpdateServer_Request) GetInfo() *UpdateServer_Info {
	if x, ok := x.GetSetting().(*UpdateServer_Request_Info); ok {
		return x.Info
	}
	return nil
}

func (x *UpdateServer_Request) GetAudit() bool {
	if x, ok := x.GetSetting().(*UpdateServer_Request_Audit); ok {
		return x.Audit
	}
	return false
}

func (x *UpdateServer_Request) GetActive() bool {
	if x, ok := x.GetSetting().(*UpdateServer_Request_Active); ok {
		return x.Active
	}
	return false
}

func (x *UpdateServer_Request) GetOnline() bool {
	if x, ok := x.GetSetting().(*UpdateServer_Request_Online); ok {
		return x.Online
	}
	return false
}

type isUpdateServer_Request_Setting interface {
	isUpdateServer_Request_Setting()
}

type UpdateServer_Request_Info struct {
	Info *UpdateServer_Info `protobuf:"bytes,4,opt,name=info,proto3,oneof"`
}

type UpdateServer_Request_Audit struct {
	Audit bool `protobuf:"varint,5,opt,name=audit,proto3,oneof"`
}

type UpdateServer_Request_Active struct {
	Active bool `protobuf:"varint,6,opt,name=active,proto3,oneof"`
}

type UpdateServer_Request_Online struct {
	Online bool `protobuf:"varint,7,opt,name=online,proto3,oneof"`
}

func (*UpdateServer_Request_Info) isUpdateServer_Request_Setting() {}

func (*UpdateServer_Request_Audit) isUpdateServer_Request_Setting() {}

func (*UpdateServer_Request_Active) isUpdateServer_Request_Setting() {}

func (*UpdateServer_Request_Online) isUpdateServer_Request_Setting() {}

type UpdateServer_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastUpdate *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
}

func (x *UpdateServer_Response) Reset() {
	*x = UpdateServer_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServer_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServer_Response) ProtoMessage() {}

func (x *UpdateServer_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServer_Response.ProtoReflect.Descriptor instead.
func (*UpdateServer_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3, 1}
}

func (x *UpdateServer_Response) GetLastUpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdate
	}
	return nil
}

type UpdateServer_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty" query:"address"`  
	Port        int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty" query:"port"`       
	Login       string `protobuf:"bytes,3,opt,name=login,proto3" json:"login,omitempty" query:"login"`      
	Title       string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty" query:"title"`      
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateServer_Info) Reset() {
	*x = UpdateServer_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServer_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServer_Info) ProtoMessage() {}

func (x *UpdateServer_Info) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServer_Info.ProtoReflect.Descriptor instead.
func (*UpdateServer_Info) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3, 2}
}

func (x *UpdateServer_Info) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UpdateServer_Info) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *UpdateServer_Info) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *UpdateServer_Info) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateServer_Info) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DeleteServer_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id"`           
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" query:"project_id"`  
	ServerId  string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" query:"server_id"`     
}

func (x *DeleteServer_Request) Reset() {
	*x = DeleteServer_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServer_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServer_Request) ProtoMessage() {}

func (x *DeleteServer_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServer_Request.ProtoReflect.Descriptor instead.
func (*DeleteServer_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{4, 0}
}

func (x *DeleteServer_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteServer_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteServer_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type DeleteServer_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteServer_Response) Reset() {
	*x = DeleteServer_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServer_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServer_Response) ProtoMessage() {}

func (x *DeleteServer_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServer_Response.ProtoReflect.Descriptor instead.
func (*DeleteServer_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{4, 1}
}

type ServerAccess_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id"`           
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" query:"project_id"`  
	ServerId  string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" query:"server_id"`     
}

func (x *ServerAccess_Request) Reset() {
	*x = ServerAccess_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccess_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccess_Request) ProtoMessage() {}

func (x *ServerAccess_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccess_Request.ProtoReflect.Descriptor instead.
func (*ServerAccess_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ServerAccess_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ServerAccess_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ServerAccess_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type ServerAccess_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  Auth   `protobuf:"varint,1,opt,name=auth,proto3,enum=server.Auth" json:"auth,omitempty"`
	Login string `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	// Types that are assignable to Access:
	//
	//	*ServerAccess_Response_Password
	//	*ServerAccess_Response_Key
	Access isServerAccess_Response_Access `protobuf_oneof:"access"`
}

func (x *ServerAccess_Response) Reset() {
	*x = ServerAccess_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccess_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccess_Response) ProtoMessage() {}

func (x *ServerAccess_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccess_Response.ProtoReflect.Descriptor instead.
func (*ServerAccess_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{5, 1}
}

func (x *ServerAccess_Response) GetAuth() Auth {
	if x != nil {
		return x.Auth
	}
	return Auth_auth_unspecified
}

func (x *ServerAccess_Response) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (m *ServerAccess_Response) GetAccess() isServerAccess_Response_Access {
	if m != nil {
		return m.Access
	}
	return nil
}

func (x *ServerAccess_Response) GetPassword() string {
	if x, ok := x.GetAccess().(*ServerAccess_Response_Password); ok {
		return x.Password
	}
	return ""
}

func (x *ServerAccess_Response) GetKey() *ServerAccess_Key {
	if x, ok := x.GetAccess().(*ServerAccess_Response_Key); ok {
		return x.Key
	}
	return nil
}

type isServerAccess_Response_Access interface {
	isServerAccess_Response_Access()
}

type ServerAccess_Response_Password struct {
	Password string `protobuf:"bytes,3,opt,name=password,proto3,oneof"`
}

type ServerAccess_Response_Key struct {
	Key *ServerAccess_Key `protobuf:"bytes,4,opt,name=key,proto3,oneof"`
}

func (*ServerAccess_Response_Password) isServerAccess_Response_Access() {}

func (*ServerAccess_Response_Key) isServerAccess_Response_Access() {}

type ServerAccess_Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Public     string `protobuf:"bytes,1,opt,name=public,proto3" json:"public,omitempty"`
	Private    string `protobuf:"bytes,2,opt,name=private,proto3" json:"private,omitempty"`
	Password   string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Fingeprint string `protobuf:"bytes,4,opt,name=fingeprint,proto3" json:"fingeprint,omitempty"`
}

func (x *ServerAccess_Key) Reset() {
	*x = ServerAccess_Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccess_Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccess_Key) ProtoMessage() {}

func (x *ServerAccess_Key) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccess_Key.ProtoReflect.Descriptor instead.
func (*ServerAccess_Key) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{5, 2}
}

func (x *ServerAccess_Key) GetPublic() string {
	if x != nil {
		return x.Public
	}
	return ""
}

func (x *ServerAccess_Key) GetPrivate() string {
	if x != nil {
		return x.Private
	}
	return ""
}

func (x *ServerAccess_Key) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ServerAccess_Key) GetFingeprint() string {
	if x != nil {
		return x.Fingeprint
	}
	return ""
}

type UpdateServerAccess_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ServerId  string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	// Types that are assignable to Access:
	//
	//	*UpdateServerAccess_Request_Password
	//	*UpdateServerAccess_Request_Key
	Access isUpdateServerAccess_Request_Access `protobuf_oneof:"access"`
}

func (x *UpdateServerAccess_Request) Reset() {
	*x = UpdateServerAccess_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerAccess_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerAccess_Request) ProtoMessage() {}

func (x *UpdateServerAccess_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerAccess_Request.ProtoReflect.Descriptor instead.
func (*UpdateServerAccess_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{6, 0}
}

func (x *UpdateServerAccess_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateServerAccess_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateServerAccess_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (m *UpdateServerAccess_Request) GetAccess() isUpdateServerAccess_Request_Access {
	if m != nil {
		return m.Access
	}
	return nil
}

func (x *UpdateServerAccess_Request) GetPassword() string {
	if x, ok := x.GetAccess().(*UpdateServerAccess_Request_Password); ok {
		return x.Password
	}
	return ""
}

func (x *UpdateServerAccess_Request) GetKey() string {
	if x, ok := x.GetAccess().(*UpdateServerAccess_Request_Key); ok {
		return x.Key
	}
	return ""
}

type isUpdateServerAccess_Request_Access interface {
	isUpdateServerAccess_Request_Access()
}

type UpdateServerAccess_Request_Password struct {
	Password string `protobuf:"bytes,5,opt,name=password,proto3,oneof"`
}

type UpdateServerAccess_Request_Key struct {
	Key string `protobuf:"bytes,6,opt,name=key,proto3,oneof"`
}

func (*UpdateServerAccess_Request_Password) isUpdateServerAccess_Request_Access() {}

func (*UpdateServerAccess_Request_Key) isUpdateServerAccess_Request_Access() {}

type UpdateServerAccess_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerAccess_Response) Reset() {
	*x = UpdateServerAccess_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerAccess_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerAccess_Response) ProtoMessage() {}

func (x *UpdateServerAccess_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerAccess_Response.ProtoReflect.Descriptor instead.
func (*UpdateServerAccess_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{6, 1}
}

type ServerActivity_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id"`           
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" query:"project_id"`  
	ServerId  string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" query:"server_id"`     
}

func (x *ServerActivity_Request) Reset() {
	*x = ServerActivity_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerActivity_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerActivity_Request) ProtoMessage() {}

func (x *ServerActivity_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerActivity_Request.ProtoReflect.Descriptor instead.
func (*ServerActivity_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ServerActivity_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ServerActivity_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ServerActivity_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type ServerActivity_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Monday    []int32 `protobuf:"varint,1,rep,packed,name=monday,proto3" json:"monday,omitempty"`
	Tuesday   []int32 `protobuf:"varint,2,rep,packed,name=tuesday,proto3" json:"tuesday,omitempty"`
	Wednesday []int32 `protobuf:"varint,3,rep,packed,name=wednesday,proto3" json:"wednesday,omitempty"`
	Thursday  []int32 `protobuf:"varint,4,rep,packed,name=thursday,proto3" json:"thursday,omitempty"`
	Friday    []int32 `protobuf:"varint,5,rep,packed,name=friday,proto3" json:"friday,omitempty"`
	Saturday  []int32 `protobuf:"varint,6,rep,packed,name=saturday,proto3" json:"saturday,omitempty"`
	Sunday    []int32 `protobuf:"varint,7,rep,packed,name=sunday,proto3" json:"sunday,omitempty"`
}

func (x *ServerActivity_Response) Reset() {
	*x = ServerActivity_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerActivity_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerActivity_Response) ProtoMessage() {}

func (x *ServerActivity_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerActivity_Response.ProtoReflect.Descriptor instead.
func (*ServerActivity_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{7, 1}
}

func (x *ServerActivity_Response) GetMonday() []int32 {
	if x != nil {
		return x.Monday
	}
	return nil
}

func (x *ServerActivity_Response) GetTuesday() []int32 {
	if x != nil {
		return x.Tuesday
	}
	return nil
}

func (x *ServerActivity_Response) GetWednesday() []int32 {
	if x != nil {
		return x.Wednesday
	}
	return nil
}

func (x *ServerActivity_Response) GetThursday() []int32 {
	if x != nil {
		return x.Thursday
	}
	return nil
}

func (x *ServerActivity_Response) GetFriday() []int32 {
	if x != nil {
		return x.Friday
	}
	return nil
}

func (x *ServerActivity_Response) GetSaturday() []int32 {
	if x != nil {
		return x.Saturday
	}
	return nil
}

func (x *ServerActivity_Response) GetSunday() []int32 {
	if x != nil {
		return x.Sunday
	}
	return nil
}

type UpdateServerActivity_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string                   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id"`           
	ProjectId string                   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" query:"project_id"`  
	ServerId  string                   `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" query:"server_id"`     
	Activity  *ServerActivity_Response `protobuf:"bytes,4,opt,name=activity,proto3" json:"activity,omitempty"`
}

func (x *UpdateServerActivity_Request) Reset() {
	*x = UpdateServerActivity_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerActivity_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerActivity_Request) ProtoMessage() {}

func (x *UpdateServerActivity_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerActivity_Request.ProtoReflect.Descriptor instead.
func (*UpdateServerActivity_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{8, 0}
}

func (x *UpdateServerActivity_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateServerActivity_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateServerActivity_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *UpdateServerActivity_Request) GetActivity() *ServerActivity_Response {
	if x != nil {
		return x.Activity
	}
	return nil
}

type UpdateServerActivity_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerActivity_Response) Reset() {
	*x = UpdateServerActivity_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerActivity_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerActivity_Response) ProtoMessage() {}

func (x *UpdateServerActivity_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerActivity_Response.ProtoReflect.Descriptor instead.
func (*UpdateServerActivity_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{8, 1}
}

type UpdateHostKey_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" query:"server_id"`  
	Hostkey  []byte `protobuf:"bytes,2,opt,name=hostkey,proto3" json:"hostkey,omitempty"`
}

func (x *UpdateHostKey_Request) Reset() {
	*x = UpdateHostKey_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHostKey_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHostKey_Request) ProtoMessage() {}

func (x *UpdateHostKey_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHostKey_Request.ProtoReflect.Descriptor instead.
func (*UpdateHostKey_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{9, 0}
}

func (x *UpdateHostKey_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *UpdateHostKey_Request) GetHostkey() []byte {
	if x != nil {
		return x.Hostkey
	}
	return nil
}

type UpdateHostKey_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateHostKey_Response) Reset() {
	*x = UpdateHostKey_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHostKey_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHostKey_Response) ProtoMessage() {}

func (x *UpdateHostKey_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHostKey_Response.ProtoReflect.Descriptor instead.
func (*UpdateHostKey_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{9, 1}
}

type AddSession_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty" query:"account_id"`  
	Status    SessionStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=server.SessionStatus" json:"status,omitempty"`
	Created   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Message   string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddSession_Request) Reset() {
	*x = AddSession_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSession_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSession_Request) ProtoMessage() {}

func (x *AddSession_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSession_Request.ProtoReflect.Descriptor instead.
func (*AddSession_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{10, 0}
}

func (x *AddSession_Request) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AddSession_Request) GetStatus() SessionStatus {
	if x != nil {
		return x.Status
	}
	return SessionStatus_session_unspecified
}

func (x *AddSession_Request) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddSession_Request) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddSession_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *AddSession_Response) Reset() {
	*x = AddSession_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSession_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSession_Response) ProtoMessage() {}

func (x *AddSession_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSession_Response.ProtoReflect.Descriptor instead.
func (*AddSession_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{10, 1}
}

func (x *AddSession_Response) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type ServerNameByID_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" params:"user_id"`           
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" query:"project_id" params:"project_id"`  
	ServerId  string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" query:"server_id" params:"server_id"`     
}

func (x *ServerNameByID_Request) Reset() {
	*x = ServerNameByID_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerNameByID_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerNameByID_Request) ProtoMessage() {}

func (x *ServerNameByID_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerNameByID_Request.ProtoReflect.Descriptor instead.
func (*ServerNameByID_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ServerNameByID_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ServerNameByID_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ServerNameByID_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type ServerNameByID_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerName string `protobuf:"bytes,1,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
}

func (x *ServerNameByID_Response) Reset() {
	*x = ServerNameByID_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerNameByID_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerNameByID_Response) ProtoMessage() {}

func (x *ServerNameByID_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerNameByID_Response.ProtoReflect.Descriptor instead.
func (*ServerNameByID_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{11, 1}
}

func (x *ServerNameByID_Response) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

type ListShareServers_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	UserId string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" params:"user_id"`  
}

func (x *ListShareServers_Request) Reset() {
	*x = ListShareServers_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShareServers_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShareServers_Request) ProtoMessage() {}

func (x *ListShareServers_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShareServers_Request.ProtoReflect.Descriptor instead.
func (*ListShareServers_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{12, 0}
}

func (x *ListShareServers_Request) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListShareServers_Request) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListShareServers_Request) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListShareServers_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListShareServers_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   int32                                     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Servers []*ListShareServers_Response_SharedServer `protobuf:"bytes,2,rep,name=servers,proto3" json:"servers,omitempty"`
}

func (x *ListShareServers_Response) Reset() {
	*x = ListShareServers_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShareServers_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShareServers_Response) ProtoMessage() {}

func (x *ListShareServers_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShareServers_Response.ProtoReflect.Descriptor instead.
func (*ListShareServers_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{12, 1}
}

func (x *ListShareServers_Response) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListShareServers_Response) GetServers() []*ListShareServers_Response_SharedServer {
	if x != nil {
		return x.Servers
	}
	return nil
}

type ListShareServers_Response_SharedServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserLogin         string `protobuf:"bytes,1,opt,name=user_login,json=userLogin,proto3" json:"user_login,omitempty"`
	ProjectLogin      string `protobuf:"bytes,2,opt,name=project_login,json=projectLogin,proto3" json:"project_login,omitempty"`
	ServerId          string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ServerToken       string `protobuf:"bytes,4,opt,name=server_token,json=serverToken,proto3" json:"server_token,omitempty"`
	ServerOnline      bool   `protobuf:"varint,5,opt,name=server_online,json=serverOnline,proto3" json:"server_online,omitempty"`
	ServerTitle       string `protobuf:"bytes,6,opt,name=server_title,json=serverTitle,proto3" json:"server_title,omitempty"`
	ServerDescription string `protobuf:"bytes,7,opt,name=server_description,json=serverDescription,proto3" json:"server_description,omitempty"`
}

func (x *ListShareServers_Response_SharedServer) Reset() {
	*x = ListShareServers_Response_SharedServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShareServers_Response_SharedServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShareServers_Response_SharedServer) ProtoMessage() {}

func (x *ListShareServers_Response_SharedServer) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShareServers_Response_SharedServer.ProtoReflect.Descriptor instead.
func (*ListShareServers_Response_SharedServer) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{12, 1, 0}
}

func (x *ListShareServers_Response_SharedServer) GetUserLogin() string {
	if x != nil {
		return x.UserLogin
	}
	return ""
}

func (x *ListShareServers_Response_SharedServer) GetProjectLogin() string {
	if x != nil {
		return x.ProjectLogin
	}
	return ""
}

func (x *ListShareServers_Response_SharedServer) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ListShareServers_Response_SharedServer) GetServerToken() string {
	if x != nil {
		return x.ServerToken
	}
	return ""
}

func (x *ListShareServers_Response_SharedServer) GetServerOnline() bool {
	if x != nil {
		return x.ServerOnline
	}
	return false
}

func (x *ListShareServers_Response_SharedServer) GetServerTitle() string {
	if x != nil {
		return x.ServerTitle
	}
	return ""
}

func (x *ListShareServers_Response_SharedServer) GetServerDescription() string {
	if x != nil {
		return x.ServerDescription
	}
	return ""
}

type AddShareServer_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" params:"user_id"`           
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" query:"project_id" params:"project_id"`  
	ServerId  string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" query:"server_id" params:"server_id"`     
}

func (x *AddShareServer_Request) Reset() {
	*x = AddShareServer_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddShareServer_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddShareServer_Request) ProtoMessage() {}

func (x *AddShareServer_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddShareServer_Request.ProtoReflect.Descriptor instead.
func (*AddShareServer_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{13, 0}
}

func (x *AddShareServer_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddShareServer_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AddShareServer_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type AddShareServer_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddShareServer_Response) Reset() {
	*x = AddShareServer_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddShareServer_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddShareServer_Response) ProtoMessage() {}

func (x *AddShareServer_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddShareServer_Response.ProtoReflect.Descriptor instead.
func (*AddShareServer_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{13, 1}
}

type UpdateShareServer_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" params:"user_id"`           
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" query:"project_id" params:"project_id"`  
	ShareId   string `protobuf:"bytes,3,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty" query:"share_id" params:"share_id"`        
}

func (x *UpdateShareServer_Request) Reset() {
	*x = UpdateShareServer_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShareServer_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShareServer_Request) ProtoMessage() {}

func (x *UpdateShareServer_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShareServer_Request.ProtoReflect.Descriptor instead.
func (*UpdateShareServer_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{14, 0}
}

func (x *UpdateShareServer_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateShareServer_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateShareServer_Request) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

type UpdateShareServer_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateShareServer_Response) Reset() {
	*x = UpdateShareServer_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShareServer_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShareServer_Response) ProtoMessage() {}

func (x *UpdateShareServer_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShareServer_Response.ProtoReflect.Descriptor instead.
func (*UpdateShareServer_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{14, 1}
}

type DeleteShareServer_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ShareId   string `protobuf:"bytes,3,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
}

func (x *DeleteShareServer_Request) Reset() {
	*x = DeleteShareServer_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShareServer_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShareServer_Request) ProtoMessage() {}

func (x *DeleteShareServer_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShareServer_Request.ProtoReflect.Descriptor instead.
func (*DeleteShareServer_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{15, 0}
}

func (x *DeleteShareServer_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteShareServer_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteShareServer_Request) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

type DeleteShareServer_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteShareServer_Response) Reset() {
	*x = DeleteShareServer_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShareServer_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShareServer_Response) ProtoMessage() {}

func (x *DeleteShareServer_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShareServer_Response.ProtoReflect.Descriptor instead.
func (*DeleteShareServer_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{15, 1}
}

var File_server_proto protoreflect.FileDescriptor

var file_server_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x1a, 0x66, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x53, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x31,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x22, 0x92, 0x06, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x82, 0x01, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xd0, 0x01,
	0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xd0, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48,
	0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x1a, 0x82, 0x05, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x06, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x68, 0x6f, 0x73,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0xe8, 0x03, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x1a, 0xb1, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xd0, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72,
	0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xa8, 0x01, 0x01, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x0b, 0xba, 0x48, 0x08, 0x1a, 0x06, 0x10, 0x80, 0x80, 0x04, 0x28, 0x01, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x72, 0x05, 0x10, 0x03, 0x18, 0x80, 0x01, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x42, 0x08, 0xba, 0x48,
	0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c,
	0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xba,
	0x48, 0x13, 0x72, 0x11, 0x10, 0x03, 0x18, 0x14, 0x32, 0x0b, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x5d, 0x2b, 0x24, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x42, 0x08,
	0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x27, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xa1, 0x04, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x1a, 0x87, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0b, 0xba, 0x48, 0x08, 0xd0, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0,
	0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x12, 0x18, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x47, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0xbd, 0x01, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xa8, 0x01, 0x01, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0b, 0xba, 0x48, 0x08, 0x1a, 0x06, 0x10, 0x80, 0x80, 0x04, 0x28, 0x01, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x16, 0xba, 0x48, 0x13, 0x72, 0x11, 0x10, 0x03, 0x18, 0x14, 0x32, 0x0b, 0x5e,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x20, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xba, 0x48, 0x07, 0x72, 0x05, 0x10, 0x03, 0x18, 0x80, 0x01, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9b, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x7f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xd0, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05,
	0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x9f, 0x03, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x1a, 0x7f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0b, 0xba, 0x48, 0x08, 0xd0, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03,
	0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x98, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2c, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x48,
	0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x1a, 0x73, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x67, 0x65,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0xf6, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0xd3, 0x01, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xd0, 0x01,
	0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72,
	0x03, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x08, 0x18, 0x20, 0x48, 0x00, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xd0, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x48, 0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd6,
	0x02, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x1a, 0x7f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba,
	0x48, 0x08, 0xd0, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x1a, 0xc2, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x06, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x75, 0x65, 0x73, 0x64,
	0x61, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x74, 0x75, 0x65, 0x73, 0x64, 0x61,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x77, 0x65, 0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x08, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x72, 0x69, 0x64, 0x61, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x66, 0x72, 0x69,
	0x64, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x22, 0xe1, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x1a, 0xbc, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba,
	0x48, 0x08, 0xd0, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x1a,
	0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x1a, 0x4a, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72,
	0x03, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x68, 0x6f, 0x73, 0x74, 0x6b, 0x65, 0x79, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xeb, 0x01, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x1a, 0xb1, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x29, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x7f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xd0, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72,
	0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x2b, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x83, 0x04, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x1a, 0x76, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08,
	0xd0, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x1a, 0xf6, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x48, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x1a, 0x89, 0x02,
	0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9d, 0x01, 0x0a, 0x0e, 0x41, 0x64,
	0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x7f, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xd0, 0x01, 0x01,
	0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03,
	0xb0, 0x01, 0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0a, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a,
	0x7d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08,
	0xd0, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05,
	0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x64, 0x1a, 0x0a,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x1a, 0x7d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48,
	0x08, 0xd0, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48,
	0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x64, 0x1a,
	0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x3e, 0x0a, 0x04, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x6e, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x10, 0x02,
	0x12, 0x09, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x10, 0x03, 0x2a, 0x4d, 0x0a, 0x0c, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x74, 0x63, 0x70, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03,
	0x75, 0x64, 0x70, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x73, 0x73, 0x68, 0x10, 0x03, 0x12, 0x0a,
	0x0a, 0x06, 0x74, 0x65, 0x6c, 0x6e, 0x65, 0x74, 0x10, 0x04, 0x2a, 0xa3, 0x01, 0x0a, 0x0e, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x14, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x6d, 0x79, 0x73, 0x71, 0x6c,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x10, 0x02,
	0x12, 0x09, 0x0a, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x6d,
	0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x65, 0x6c, 0x61, 0x73,
	0x74, 0x69, 0x63, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64,
	0x62, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x63, 0x61, 0x73, 0x73, 0x61, 0x6e, 0x64, 0x72, 0x61,
	0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x73, 0x71, 0x6c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10,
	0x08, 0x12, 0x0d, 0x0a, 0x09, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x10, 0x09,
	0x2a, 0x3a, 0x0a, 0x0d, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x13, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x5f, 0x75, 0x6e, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x72, 0x64,
	0x70, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x76, 0x6e, 0x63, 0x10, 0x02, 0x2a, 0x43, 0x0a, 0x10,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x5f, 0x75,
	0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x6b, 0x38, 0x73, 0x10,
	0x02, 0x2a, 0x5b, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x12, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x5f, 0x75, 0x6e, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x61, 0x77, 0x73,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x09,
	0x0a, 0x05, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x64, 0x6f, 0x10,
	0x04, 0x12, 0x0b, 0x0a, 0x07, 0x68, 0x65, 0x74, 0x7a, 0x6e, 0x65, 0x72, 0x10, 0x05, 0x2a, 0x40,
	0x0a, 0x0d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x17, 0x0a, 0x13, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x65, 0x64, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x10, 0x02,
	0x2a, 0x51, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0f,
	0x0a, 0x0b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x62, 0x61,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x10, 0x04, 0x32, 0xc5, 0x0a, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x4a, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3b, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x44, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5f, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x12, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x59, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x41, 0x64,
	0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5c, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74,
	0x4b, 0x65, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x4b,
	0x65, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a,
	0x0a, 0x41, 0x64, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x41, 0x64, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x35, 0x5a, 0x33, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x74,
	0x2f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_proto_rawDescOnce sync.Once
	file_server_proto_rawDescData = file_server_proto_rawDesc
)

func file_server_proto_rawDescGZIP() []byte {
	file_server_proto_rawDescOnce.Do(func() {
		file_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_proto_rawDescData)
	})
	return file_server_proto_rawDescData
}

var file_server_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_server_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_server_proto_goTypes = []interface{}{
	(Auth)(0),                                      // 0: server.Auth
	(ServerScheme)(0),                              // 1: server.ServerScheme
	(DatabaseScheme)(0),                            // 2: server.DatabaseScheme
	(DesktopScheme)(0),                             // 3: server.DesktopScheme
	(ContainersScheme)(0),                          // 4: server.ContainersScheme
	(CloudsScheme)(0),                              // 5: server.CloudsScheme
	(SessionStatus)(0),                             // 6: server.SessionStatus
	(Type)(0),                                      // 7: server.Type
	(*ListServers)(nil),                            // 8: server.ListServers
	(*Server)(nil),                                 // 9: server.Server
	(*AddServer)(nil),                              // 10: server.AddServer
	(*UpdateServer)(nil),                           // 11: server.UpdateServer
	(*DeleteServer)(nil),                           // 12: server.DeleteServer
	(*ServerAccess)(nil),                           // 13: server.ServerAccess
	(*UpdateServerAccess)(nil),                     // 14: server.UpdateServerAccess
	(*ServerActivity)(nil),                         // 15: server.ServerActivity
	(*UpdateServerActivity)(nil),                   // 16: server.UpdateServerActivity
	(*UpdateHostKey)(nil),                          // 17: server.UpdateHostKey
	(*AddSession)(nil),                             // 18: server.AddSession
	(*ServerNameByID)(nil),                         // 19: server.ServerNameByID
	(*ListShareServers)(nil),                       // 20: server.ListShareServers
	(*AddShareServer)(nil),                         // 21: server.AddShareServer
	(*UpdateShareServer)(nil),                      // 22: server.UpdateShareServer
	(*DeleteShareServer)(nil),                      // 23: server.DeleteShareServer
	(*ListServers_Request)(nil),                    // 24: server.ListServers.Request
	(*ListServers_Response)(nil),                   // 25: server.ListServers.Response
	(*Server_Request)(nil),                         // 26: server.Server.Request
	(*Server_Response)(nil),                        // 27: server.Server.Response
	(*AddServer_Request)(nil),                      // 28: server.AddServer.Request
	(*AddServer_Response)(nil),                     // 29: server.AddServer.Response
	(*UpdateServer_Request)(nil),                   // 30: server.UpdateServer.Request
	(*UpdateServer_Response)(nil),                  // 31: server.UpdateServer.Response
	(*UpdateServer_Info)(nil),                      // 32: server.UpdateServer.Info
	(*DeleteServer_Request)(nil),                   // 33: server.DeleteServer.Request
	(*DeleteServer_Response)(nil),                  // 34: server.DeleteServer.Response
	(*ServerAccess_Request)(nil),                   // 35: server.ServerAccess.Request
	(*ServerAccess_Response)(nil),                  // 36: server.ServerAccess.Response
	(*ServerAccess_Key)(nil),                       // 37: server.ServerAccess.Key
	(*UpdateServerAccess_Request)(nil),             // 38: server.UpdateServerAccess.Request
	(*UpdateServerAccess_Response)(nil),            // 39: server.UpdateServerAccess.Response
	(*ServerActivity_Request)(nil),                 // 40: server.ServerActivity.Request
	(*ServerActivity_Response)(nil),                // 41: server.ServerActivity.Response
	(*UpdateServerActivity_Request)(nil),           // 42: server.UpdateServerActivity.Request
	(*UpdateServerActivity_Response)(nil),          // 43: server.UpdateServerActivity.Response
	(*UpdateHostKey_Request)(nil),                  // 44: server.UpdateHostKey.Request
	(*UpdateHostKey_Response)(nil),                 // 45: server.UpdateHostKey.Response
	(*AddSession_Request)(nil),                     // 46: server.AddSession.Request
	(*AddSession_Response)(nil),                    // 47: server.AddSession.Response
	(*ServerNameByID_Request)(nil),                 // 48: server.ServerNameByID.Request
	(*ServerNameByID_Response)(nil),                // 49: server.ServerNameByID.Response
	(*ListShareServers_Request)(nil),               // 50: server.ListShareServers.Request
	(*ListShareServers_Response)(nil),              // 51: server.ListShareServers.Response
	(*ListShareServers_Response_SharedServer)(nil), // 52: server.ListShareServers.Response.SharedServer
	(*AddShareServer_Request)(nil),                 // 53: server.AddShareServer.Request
	(*AddShareServer_Response)(nil),                // 54: server.AddShareServer.Response
	(*UpdateShareServer_Request)(nil),              // 55: server.UpdateShareServer.Request
	(*UpdateShareServer_Response)(nil),             // 56: server.UpdateShareServer.Response
	(*DeleteShareServer_Request)(nil),              // 57: server.DeleteShareServer.Request
	(*DeleteShareServer_Response)(nil),             // 58: server.DeleteShareServer.Response
	(*timestamppb.Timestamp)(nil),                  // 59: google.protobuf.Timestamp
}
var file_server_proto_depIdxs = []int32{
	27, // 0: server.ListServers.Response.servers:type_name -> server.Server.Response
	0,  // 1: server.Server.Response.auth:type_name -> server.Auth
	1,  // 2: server.Server.Response.scheme:type_name -> server.ServerScheme
	59, // 3: server.Server.Response.last_update:type_name -> google.protobuf.Timestamp
	59, // 4: server.Server.Response.created:type_name -> google.protobuf.Timestamp
	1,  // 5: server.AddServer.Request.scheme:type_name -> server.ServerScheme
	32, // 6: server.UpdateServer.Request.info:type_name -> server.UpdateServer.Info
	59, // 7: server.UpdateServer.Response.last_update:type_name -> google.protobuf.Timestamp
	0,  // 8: server.ServerAccess.Response.auth:type_name -> server.Auth
	37, // 9: server.ServerAccess.Response.key:type_name -> server.ServerAccess.Key
	41, // 10: server.UpdateServerActivity.Request.activity:type_name -> server.ServerActivity.Response
	6,  // 11: server.AddSession.Request.status:type_name -> server.SessionStatus
	59, // 12: server.AddSession.Request.created:type_name -> google.protobuf.Timestamp
	52, // 13: server.ListShareServers.Response.servers:type_name -> server.ListShareServers.Response.SharedServer
	24, // 14: server.ServerHandlers.ListServers:input_type -> server.ListServers.Request
	26, // 15: server.ServerHandlers.Server:input_type -> server.Server.Request
	28, // 16: server.ServerHandlers.AddServer:input_type -> server.AddServer.Request
	30, // 17: server.ServerHandlers.UpdateServer:input_type -> server.UpdateServer.Request
	33, // 18: server.ServerHandlers.DeleteServer:input_type -> server.DeleteServer.Request
	35, // 19: server.ServerHandlers.ServerAccess:input_type -> server.ServerAccess.Request
	38, // 20: server.ServerHandlers.UpdateServerAccess:input_type -> server.UpdateServerAccess.Request
	40, // 21: server.ServerHandlers.ServerActivity:input_type -> server.ServerActivity.Request
	42, // 22: server.ServerHandlers.UpdateServerActivity:input_type -> server.UpdateServerActivity.Request
	50, // 23: server.ServerHandlers.ListShareServers:input_type -> server.ListShareServers.Request
	53, // 24: server.ServerHandlers.AddShareServer:input_type -> server.AddShareServer.Request
	55, // 25: server.ServerHandlers.UpdateShareServer:input_type -> server.UpdateShareServer.Request
	57, // 26: server.ServerHandlers.DeleteShareServer:input_type -> server.DeleteShareServer.Request
	44, // 27: server.ServerHandlers.UpdateHostKey:input_type -> server.UpdateHostKey.Request
	46, // 28: server.ServerHandlers.AddSession:input_type -> server.AddSession.Request
	48, // 29: server.ServerHandlers.ServerNameByID:input_type -> server.ServerNameByID.Request
	25, // 30: server.ServerHandlers.ListServers:output_type -> server.ListServers.Response
	27, // 31: server.ServerHandlers.Server:output_type -> server.Server.Response
	29, // 32: server.ServerHandlers.AddServer:output_type -> server.AddServer.Response
	31, // 33: server.ServerHandlers.UpdateServer:output_type -> server.UpdateServer.Response
	34, // 34: server.ServerHandlers.DeleteServer:output_type -> server.DeleteServer.Response
	36, // 35: server.ServerHandlers.ServerAccess:output_type -> server.ServerAccess.Response
	39, // 36: server.ServerHandlers.UpdateServerAccess:output_type -> server.UpdateServerAccess.Response
	41, // 37: server.ServerHandlers.ServerActivity:output_type -> server.ServerActivity.Response
	43, // 38: server.ServerHandlers.UpdateServerActivity:output_type -> server.UpdateServerActivity.Response
	51, // 39: server.ServerHandlers.ListShareServers:output_type -> server.ListShareServers.Response
	54, // 40: server.ServerHandlers.AddShareServer:output_type -> server.AddShareServer.Response
	56, // 41: server.ServerHandlers.UpdateShareServer:output_type -> server.UpdateShareServer.Response
	58, // 42: server.ServerHandlers.DeleteShareServer:output_type -> server.DeleteShareServer.Response
	45, // 43: server.ServerHandlers.UpdateHostKey:output_type -> server.UpdateHostKey.Response
	47, // 44: server.ServerHandlers.AddSession:output_type -> server.AddSession.Response
	49, // 45: server.ServerHandlers.ServerNameByID:output_type -> server.ServerNameByID.Response
	30, // [30:46] is the sub-list for method output_type
	14, // [14:30] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_server_proto_init() }
func file_server_proto_init() {
	if File_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerAccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHostKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerNameByID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListShareServers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddShareServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateShareServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShareServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServers_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServers_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddServer_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddServer_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServer_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServer_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServer_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServer_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServer_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccess_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccess_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccess_Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerAccess_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerAccess_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerActivity_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerActivity_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerActivity_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerActivity_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHostKey_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHostKey_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSession_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSession_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerNameByID_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerNameByID_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListShareServers_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListShareServers_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListShareServers_Response_SharedServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddShareServer_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddShareServer_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateShareServer_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateShareServer_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShareServer_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShareServer_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_server_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*AddServer_Request_Password)(nil),
		(*AddServer_Request_Key)(nil),
	}
	file_server_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*UpdateServer_Request_Info)(nil),
		(*UpdateServer_Request_Audit)(nil),
		(*UpdateServer_Request_Active)(nil),
		(*UpdateServer_Request_Online)(nil),
	}
	file_server_proto_msgTypes[28].OneofWrappers = []interface{}{
		(*ServerAccess_Response_Password)(nil),
		(*ServerAccess_Response_Key)(nil),
	}
	file_server_proto_msgTypes[30].OneofWrappers = []interface{}{
		(*UpdateServerAccess_Request_Password)(nil),
		(*UpdateServerAccess_Request_Key)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   51,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_proto_goTypes,
		DependencyIndexes: file_server_proto_depIdxs,
		EnumInfos:         file_server_proto_enumTypes,
		MessageInfos:      file_server_proto_msgTypes,
	}.Build()
	File_server_proto = out.File
	file_server_proto_rawDesc = nil
	file_server_proto_goTypes = nil
	file_server_proto_depIdxs = nil
}
