syntax = "proto3";

package server;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/werbot/werbot/internal/grpc/server/proto";

service ServerHandlers {
  // Server section
  rpc ListServers(ListServers.Request) returns (ListServers.Response) {}
  rpc Server(Server.Request) returns (Server.Response) {}
  rpc AddServer(AddServer.Request) returns (AddServer.Response) {}
  rpc UpdateServer(UpdateServer.Request) returns (UpdateServer.Response) {}
  rpc DeleteServer(DeleteServer.Request) returns (DeleteServer.Response) {}

  // Server Access section
  rpc ServerAccess(ServerAccess.Request) returns (ServerAccess.Response) {}
  rpc UpdateServerAccess(UpdateServerAccess.Request) returns (UpdateServerAccess.Response) {}

  // Server Activity section
  rpc ServerActivity(ServerActivity.Request) returns (ServerActivity.Response) {}
  rpc UpdateServerActivity(UpdateServerActivity.Request) returns (UpdateServerActivity.Response) {}

  // share server
  rpc ListShareServers(ListShareServers.Request) returns (ListShareServers.Response) {}
  rpc AddShareServer(AddShareServer.Request) returns (AddShareServer.Response) {}
  rpc UpdateShareServer(UpdateShareServer.Request) returns (UpdateShareServer.Response) {}
  rpc DeleteShareServer(DeleteShareServer.Request) returns (DeleteShareServer.Response) {}

  // Other
  rpc UpdateHostKey(UpdateHostKey.Request) returns (UpdateHostKey.Response) {}
  rpc AddSession(AddSession.Request) returns (AddSession.Response) {}
  rpc ServerNameByID(ServerNameByID.Request) returns (ServerNameByID.Response) {}
}

enum Auth {
  auth_unspecified = 0;
  password = 1;
  key = 2;
  agent = 3;
}

enum Address {
  address_unspecified = 0;
  IPv4 = 1;
  IPv6 = 2;
  Hostname = 3;
}

enum ServerScheme {
  server_unspecified = 0;
  tcp = 1;
  udp = 2;
  ssh = 3;
  telnet = 4;
}

enum DatabaseScheme {
  database_unspecified = 0;
  mysql = 1;
  postgres = 2;
  redis = 3;
  mongodb = 4;
  elastic = 5;
  dynamodb = 6;
  cassandra = 7;
  sqlserver = 8;
  snowflake = 9;
}

enum DesktopScheme {
  desktop_unspecified = 0;
  rdp = 1;
  vnc = 2;
}

enum ContainersScheme {
  containers_unspecified = 0;
  docker = 1;
  k8s = 2;
}

enum CloudsScheme {
  clouds_unspecified = 0;
  aws = 1;
  google = 2;
  azure = 3;
  do = 4;
  hetzner = 5;
}

enum SessionStatus {
  session_unspecified = 0;
  opened = 1;
  closed = 2;
}

enum Type {
  type_unspecified = 0;
  healthcheck = 1;
  shell = 2;
  bastion = 3;
  invite = 4;
}

// rpc ListServers
message ListServers {
  message Request {
    string project_id = 1;
    string user_id = 2;
    string login = 3;
    int32 limit = 4;
    int32 offset = 5;
    string sort_by = 6;
  }

  message Response {
    int32 total = 1;
    repeated Server.Response servers = 2;
  }
}
// -----------------------------------------------------

// rpc Server
message Server {
  message Request {
    string user_id = 1 [
      (buf.validate.field).string.uuid = true,
      (buf.validate.field).ignore_empty = true
    ]; // @gotags: query:"user_id"
    string server_id = 2 [
      (buf.validate.field).string.uuid = true,
      (buf.validate.field).ignore_empty = true
    ]; // @gotags: query:"server_id"
    string project_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: query:"project_id"
  }

  message Response {
    string server_id = 1;
    string project_id = 2;
    string access_id = 3;
    string project_login = 4;
    string address = 5;
    int32 port = 6;
    string token = 7;
    string login = 8;
    string title = 9;
    bool audit = 10;
    bool online = 11;
    string account_id = 12;
    Auth auth = 13;
    ServerScheme scheme = 14;
    bytes host_key = 15;
    string description = 16;
    bool active = 17;
    int32 count_members = 18;
    google.protobuf.Timestamp locked_at = 19;
    google.protobuf.Timestamp archived_at = 20;
    google.protobuf.Timestamp updated_at = 21;
    google.protobuf.Timestamp created_at = 22;
  }
}
// -----------------------------------------------------

// rpc AddServer
message AddServer {
  message Request {
    string user_id = 1 [
      (buf.validate.field).string.uuid = true,
      (buf.validate.field).ignore_empty = true
    ];
    string project_id = 2 [(buf.validate.field).string.uuid = true];
    string address = 3 [(buf.validate.field).string.address = true];
    int32 port = 4 [(buf.validate.field).int32 = {
      gte: 1,
      lt: 65536
    }];
    string title = 5 [(buf.validate.field).string = {
      min_len: 3,
      max_len: 128
    }];
    ServerScheme scheme = 6 [(buf.validate.field).enum.defined_only = true];
    bool audit = 7;
    bool active = 8;
    string description = 9;

    string login = 10 [(buf.validate.field).string = {
      pattern: '^[a-z0-9]+$',
      min_len: 3,
      max_len: 20
    }];
    oneof access {
      string password = 11;
      string key = 12; // key UUID from redis
    }
  }

  message Response {
    string server_id = 1;
    // string fingeprint = 2;
    // string key_public = 3;
  }
}
// -----------------------------------------------------

// rpc UpdateServer
message UpdateServer {
  message Request {
    string user_id = 1 [
      (buf.validate.field).string.uuid = true,
      (buf.validate.field).ignore_empty = true
    ];
    string project_id = 2 [
      (buf.validate.field).string.uuid = true,
      (buf.validate.field).ignore_empty = true
    ];
    string server_id = 3 [
      (buf.validate.field).string.uuid = true,
      (buf.validate.field).ignore_empty = true
    ];
    oneof setting {
      Info info = 4;
      bool audit = 5;
      bool active = 6;
      bool online = 7;
    }
  }

  message Response {
    google.protobuf.Timestamp updated_at = 1;
  }

  message Info {
    string address = 1 [(buf.validate.field).string.address = true]; // @gotags: query:"address"
    int32 port = 2 [(buf.validate.field).int32 = {
      gte: 1,
      lt: 65536
    }]; // @gotags: query:"port"
    string login = 3 [(buf.validate.field).string = {
      pattern: '^[a-z0-9]+$',
      min_len: 3,
      max_len: 20
    }]; // @gotags: query:"login"
    string title = 4 [(buf.validate.field).string = {
      min_len: 3,
      max_len: 128
    }]; // @gotags: query:"title"
    string description = 5;
  }
}
// -----------------------------------------------------

// rpc DeleteServer
message DeleteServer {
  message Request {
    string user_id = 1 [
      (buf.validate.field).string.uuid = true,
      (buf.validate.field).ignore_empty = true
    ]; // @gotags: query:"user_id"
    string project_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: query:"project_id"
    string server_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: query:"server_id"
  }

  message Response {}
}
// -----------------------------------------------------

// rpc ServerAccess
message ServerAccess {
  message Request {
    string user_id = 1 [
      (buf.validate.field).string.uuid = true,
      (buf.validate.field).ignore_empty = true
    ]; // @gotags: query:"user_id"
    string project_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: query:"project_id"
    string server_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: query:"server_id"
  }

  message Response {
    Auth auth = 1;
    string login = 2;
    oneof access {
      string password = 3;
      Key key = 4;
    }
  }

  message Key {
    string public = 1;
    string private = 2;
    string password = 3;
    string fingeprint = 4;
  }
}
// -----------------------------------------------------

// rpc UpdateServerAccess
message UpdateServerAccess {
  message Request {
    string user_id = 1 [
      (buf.validate.field).string.uuid = true,
      (buf.validate.field).ignore_empty = true
    ];
    string project_id = 2 [(buf.validate.field).string.uuid = true];
    string server_id = 3 [(buf.validate.field).string.uuid = true];
    oneof access {
      string password = 5 [(buf.validate.field).string = {
        min_len: 8,
        max_len: 32
      }];
      string key = 6 [
        (buf.validate.field).string.uuid = true,
        (buf.validate.field).ignore_empty = true
      ];
    }
  }

  message Response {}
}
// -----------------------------------------------------

// rpc ServerActivity
message ServerActivity {
  message Request {
    string user_id = 1 [
      (buf.validate.field).string.uuid = true,
      (buf.validate.field).ignore_empty = true
    ]; // @gotags: query:"user_id"
    string project_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: query:"project_id"
    string server_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: query:"server_id"
  }

  message Response {
    repeated int32 monday = 1;
    repeated int32 tuesday = 2;
    repeated int32 wednesday = 3;
    repeated int32 thursday = 4;
    repeated int32 friday = 5;
    repeated int32 saturday = 6;
    repeated int32 sunday = 7;
  }
}
// -----------------------------------------------------

// rpc UpdateServerActivity
message UpdateServerActivity {
  message Request {
    string user_id = 1 [
      (buf.validate.field).string.uuid = true,
      (buf.validate.field).ignore_empty = true
    ]; // @gotags: query:"user_id"
    string project_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: query:"project_id"
    string server_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: query:"server_id"
    ServerActivity.Response activity = 4;
  }

  message Response {}
}
// -----------------------------------------------------

// rpc UpdateHostKey
message UpdateHostKey {
  message Request {
    string server_id = 1 [(buf.validate.field).string.uuid = true]; // @gotags: query:"server_id"
    bytes hostkey = 2;
  }

  message Response {}
}
// -----------------------------------------------------

// rpc AddSession
message AddSession {
  message Request {
    string account_id = 1 [(buf.validate.field).string.uuid = true]; // @gotags: query:"account_id"
    SessionStatus status = 2;
    google.protobuf.Timestamp created_at = 3;
    string message = 4;
  }

  message Response {
    string session_id = 1;
  }
}
// -----------------------------------------------------

// rpc ServerNameByID
message ServerNameByID {
  message Request {
    string user_id = 1 [
      (buf.validate.field).string.uuid = true,
      (buf.validate.field).ignore_empty = true
    ]; // @gotags: query:"user_id"
    string project_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: query:"project_id"
    string server_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: query:"server_id"
  }

  message Response {
    string server_name = 1;
  }
}
// -----------------------------------------------------

// rpc ListShareServers
message ListShareServers {
  message Request {
    int32 limit = 1;
    int32 offset = 2;
    string sort_by = 3;
    string user_id = 4 [
      (buf.validate.field).string.uuid = true,
      (buf.validate.field).ignore_empty = true
    ]; // @gotags: query:"user_id"
  }

  message Response {
    message SharedServer {
      string user_login = 1;
      string project_login = 2;
      string server_id = 3;
      string server_token = 4;
      bool server_online = 5;
      string server_title = 6;
      string server_description = 7;
    }

    int32 total = 1;
    repeated SharedServer servers = 2;
  }
}
// -----------------------------------------------------

// rpc AddShareServer
message AddShareServer {
  message Request {
    string user_id = 1 [
      (buf.validate.field).string.uuid = true,
      (buf.validate.field).ignore_empty = true
    ]; // @gotags: query:"user_id"
    string project_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: query:"project_id"
    string server_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: query:"server_id"
  }

  message Response {}
}
// -----------------------------------------------------

// rpc UpdateShareServer
message UpdateShareServer {
  message Request {
    string user_id = 1 [
      (buf.validate.field).string.uuid = true,
      (buf.validate.field).ignore_empty = true
    ]; // @gotags: query:"user_id"
    string project_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: query:"project_id"
    string share_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: query:"share_id" 
  }

  message Response {}
}
// -----------------------------------------------------

// rpc DeleteShareServer
message DeleteShareServer {
  message Request {
    string user_id = 1 [
      (buf.validate.field).string.uuid = true,
      (buf.validate.field).ignore_empty = true
    ];
    string project_id = 2 [(buf.validate.field).string.uuid = true];
    string share_id = 3 [(buf.validate.field).string.uuid = true];
  }

  message Response {}
}
// -----------------------------------------------------
