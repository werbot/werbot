syntax = "proto3";

package user;

option go_package = "github.com/werbot/werbot/internal/grpc/proto/user";

import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "tagger/tagger.proto";

service UserHandlers {
    rpc ListUsers(ListUsers.Request) returns (ListUsers.Response) {}
    rpc GetUser(GetUser.Request) returns (GetUser.Response) {}
    rpc CreateUser(CreateUser.Request) returns (CreateUser.Response) {}
    rpc UpdateUser(UpdateUser.Request) returns (UpdateUser.Response) {}
    rpc DeleteUser(DeleteUser.Request) returns (DeleteUser.Response) {}
  
    rpc SignIn(SignIn.Request) returns (GetUser.Response) {}
    rpc ResetPassword(ResetPassword.Request) returns (ResetPassword.Response) {}
    rpc UpdatePassword(UpdatePassword.Request) returns (UpdatePassword.Response) {}
}

// -----------------------------------------------------
// global messages
extend google.protobuf.FieldOptions {
    string sql_name = 50000;
}

enum RoleUser {
    ROLE_USER_UNSPECIFIED = 0;
    USER = 1;
    MANAGER = 2;
    ADMIN = 3;
}

message UserParameters {
    string user_id = 1;
    RoleUser user_role = 2;
    string sub = 3;
}

message AuthUserInfo  {
    string user_id = 1;
    string name = 2;
    string email = 3;
    RoleUser user_role = 4;
}
// -----------------------------------------------------


// rpc ListUsers
message ListUsers {
    message Request {
        int32 limit = 1;
        int32 offset = 2;
        string sort_by = 3;
        string query = 4;
    }

    message Response {
        message UserInfo{
            int32 servers_count = 1;
            int32 projects_count = 2;
            int32 keys_count = 3;
            GetUser.Response user = 4;
        }
        int32 total = 1;
        repeated UserInfo users = 2;
    }
}

// rpc GetUser
message GetUser {
    message Request {
        string user_id = 1 [(tagger.tags) = "validate:\"omitempty,uuid\"  query:\"user_id\"  params:\"user_id\""];
    }

    message Response {
        string user_id = 1;
        string fio = 2;
        string name = 3;
        string email = 4;
        bool enabled = 5;
        bool confirmed = 6;
        RoleUser role = 7;
        string password =8;
        google.protobuf.Timestamp last_active = 9;
        google.protobuf.Timestamp register_date = 10;
    }
}
// -----------------------------------------------------


// rpc CreateUser
message CreateUser {
    message Request {
        string name = 1     [(tagger.tags) = "validate:\"required,alphanum\""];
        string email = 2    [(tagger.tags) = "validate:\"required,email\""];
        string fio = 3      [(tagger.tags) = "validate:\"required,min=5\""];
        bool enabled = 4;
        bool confirmed = 5;
        string password = 6 [(tagger.tags) = "validate:\"required,min=8\""];
    }

    message Response {
        string user_id = 1;
    }
}
// -----------------------------------------------------


// rpc UpdateUser
message UpdateUser {
    message Request {
        string user_id = 1  [(sql_name) = "id",        (tagger.tags) = "validate:\"uuid\""];
        string name = 2     [(sql_name) = "name",      (tagger.tags) = "validate:\"omitempty,alphanum\""];
        string email = 3    [(sql_name) = "email",     (tagger.tags) = "validate:\"required,email\""];
        string fio = 4      [(sql_name) = "fio",       (tagger.tags) = "validate:\"required,min=5\""];
        bool enabled = 5    [(sql_name) = "enabled"];
        bool confirmed = 6  [(sql_name) = "confirmed"];
    }

    message Response{}
}

// -----------------------------------------------------

// rpc DeleteUser
message DeleteUser{
    message Request {
        string user_id = 1;
        oneof request {
            string password = 2;
            string token = 3;
        }
    }

    message Response {
        string name = 1;
        string email = 2;
        string token = 3;
    }
}
// -----------------------------------------------------


// rpc SignIn
message SignIn {
    message Request {
        string email = 2    [(tagger.tags) = "validate:\"required,email\""];
        string password = 3 [(tagger.tags) = "validate:\"required\""];    
    }
}
// -----------------------------------------------------


// rpc ResetPassword
message ResetPassword {
    message Request {
        oneof request {
            string email = 1    [(tagger.tags) = "validate:\"email\""];
            string password = 2 [(tagger.tags) = "validate:\"min=8\""];
        }
        string token = 3        [(tagger.tags) = "validate:\"omitempty,uuid\""];
    }
    message Response {
        string message = 1;
        string token = 2;
    }
}
// -----------------------------------------------------


// rpc UpdatePassword
message UpdatePassword {
    message Request {
        string user_id = 1;
        string old_password = 2;
        string new_password = 3;
    }
    
    message Response{
        string message = 1;
    }
}
// -----------------------------------------------------
