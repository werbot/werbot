syntax = "proto3";

package scheme;

import "google/protobuf/timestamp.proto";
import "buf/validate/validate.proto";
import "pkg/utils/protoutils/ghoster/proto/ghoster.proto";
import "internal/core/firewall/proto/firewall/firewall.proto";
import "internal/core/scheme/proto/access/access.proto";
import "internal/core/scheme/proto/auth/auth.proto";

option go_package = "github.com/werbot/werbot/internal/core/scheme/proto/scheme";

service SchemeHandlers {
  // Scheme section
  rpc Schemes(Schemes.Request) returns (Schemes.Response) {}
  rpc Scheme(Scheme.Request) returns (Scheme.Response) {}
  rpc AddScheme(AddScheme.Request) returns (AddScheme.Response) {}
  rpc UpdateScheme(UpdateScheme.Request) returns (UpdateScheme.Response) {}
  rpc DeleteScheme(DeleteScheme.Request) returns (DeleteScheme.Response) {}

  // Scheme Access section
  rpc SchemeAccess(SchemeAccess.Request) returns (SchemeAccess.Response) {}

  // Scheme Activity section
  rpc SchemeActivity(SchemeActivity.Request) returns (SchemeActivity.Response) {}
  rpc UpdateSchemeActivity(UpdateSchemeActivity.Request) returns (UpdateSchemeActivity.Response) {}

  // Scheme Firewall section
  rpc SchemeFirewall(SchemeFirewall.Request) returns (SchemeFirewall.Response) {}
  rpc AddSchemeFirewall(AddSchemeFirewall.Request) returns (AddSchemeFirewall.Response) {}
  rpc UpdateSchemeFirewall(UpdateSchemeFirewall.Request) returns (UpdateSchemeFirewall.Response) {}
  rpc DeleteSchemeFirewall(DeleteSchemeFirewall.Request) returns (DeleteSchemeFirewall.Response) {}

  // All user shared schemes
  rpc UserSchemes(UserSchemes.Request) returns (UserSchemes.Response) {}

  // SYSTEM methods, using only in workers !!!!
  rpc SystemSchemesByAlias(SystemSchemesByAlias.Request) returns (SystemSchemesByAlias.Response) {}
  rpc SystemSchemeAccess(SystemSchemeAccess.Request) returns (SystemSchemeAccess.Response) {}

  rpc SystemHostKey(SystemHostKey.Request) returns (SystemHostKey.Response) {}
  rpc SystemUpdateHostKey(SystemUpdateHostKey.Request) returns (SystemUpdateHostKey.Response) {}
  // -------------------------
}

enum Address {
  address_unspecified = 0;
  IPv4 = 1;
  IPv6 = 2;
  Hostname = 3;
}

enum Type {
  type_unspecified = 0;
  healthcheck = 1;
  shell = 2;
  bastion = 3;
  invite = 4;
}

// rpc Schemes
message Schemes {
  message Request {
    bool is_admin = 1; // @gotags: json:"-"
    string owner_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"

    string project_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
    access.SchemeType scheme_type = 4;
    int32 limit = 5;
    int32 offset = 6;
    string sort_by = 7; // @gotags: json:"-"
  }

  message Response {
    int32 total = 1;
    repeated Scheme.Response schemes = 2;
  }
}
// -----------------------------------------------------

// rpc Scheme
message Scheme {
  message Request {
    bool is_admin = 1; // @gotags: json:"-"
    string owner_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"

    string project_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
    string scheme_id = 4 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
  }

  message Response {
    string scheme_id = 1;
    string project_id = 2 [(ghoster.secret) = true];
    string owner_id = 3;
    string address = 4;
    string alias = 5;
    string title = 6;
    string description = 7;
    bool audit = 8;
    bool active = 9;
    bool online = 10;
    auth.AuthMethod auth_method = 11;
    access.SchemeType scheme_type = 12;
    int32 count_members = 13;
    google.protobuf.Timestamp locked_at = 14 [(ghoster.secret) = true];
    google.protobuf.Timestamp archived_at = 15 [(ghoster.secret) = true];
    google.protobuf.Timestamp updated_at = 16 [(ghoster.secret) = true];
    google.protobuf.Timestamp created_at = 17;
  }
}
// -----------------------------------------------------

// rpc AddScheme
message AddScheme {
  message Request {
    string owner_id = 1 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"

    string project_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
    string title = 3;
    bool audit = 4;
    bool active = 5;
    string description = 6;
    access.AccessScheme scheme = 7;
  }

  message Response {
    string scheme_id = 1;
  }
}
// -----------------------------------------------------

// rpc UpdateScheme
message UpdateScheme {
  message Request {
    string owner_id = 1 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"

    string project_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
    string scheme_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"

    oneof setting {
      option (buf.validate.oneof).required = true;

      string title = 4 [(buf.validate.field).string = { min_len: 5 max_len: 128 }];
      bool audit = 5;
      bool active = 6;
      bool online = 7;
      string description = 8;
      access.AccessScheme scheme = 9;
    }
  }

  message Response {}
}
// -----------------------------------------------------

// rpc DeleteScheme
message DeleteScheme {
  message Request {
    string owner_id = 1 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"

    string project_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
    string scheme_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
  }

  message Response {}
}
// -----------------------------------------------------

// rpc SchemeAccess
message SchemeAccess {
  message Request {
    string owner_id = 1 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"

    string project_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
    string scheme_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"

    bool no_ghost = 99; // @gotags: json:"-"
  }

  message Response {
    access.AccessScheme scheme = 1;
  }
}
// -----------------------------------------------------

// rpc SchemeActivity
message SchemeActivity {
  message Request {
    string owner_id = 1 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"

    string project_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
    string scheme_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
    google.protobuf.Timestamp timestamp = 4;
  }

  message Response {
    oneof period {
      bool hour = 1;
      Week week = 2;
    }
  }

  message Week {
    repeated int32 mon = 1 [(buf.validate.field).repeated = {
      min_items: 23,
      max_items: 23,
      items: { int32: { in: [ 0, 1 ] } }
    }];
    repeated int32 tue = 2 [(buf.validate.field).repeated = {
      min_items: 23
      max_items: 23
      items: { int32: { in: [ 0, 1 ] } }
    }];
    repeated int32 wed = 3 [(buf.validate.field).repeated = {
      min_items: 23
      max_items: 23
      items: { int32: { in: [ 0, 1 ] } }
    }];
    repeated int32 thu = 4 [(buf.validate.field).repeated = {
      min_items: 23
      max_items: 23
      items: { int32: { in: [ 0, 1 ] } }
    }];
    repeated int32 fri = 5 [(buf.validate.field).repeated = {
      min_items: 23
      max_items: 23
      items: { int32: { in: [ 0, 1 ] } }
    }];
    repeated int32 sat = 6 [(buf.validate.field).repeated = {
      min_items: 23
      max_items: 23
      items: { int32: { in: [ 0, 1 ] } }
    }];
    repeated int32 sun = 7 [(buf.validate.field).repeated = {
      min_items: 23
      max_items: 23
      items: { int32: { in: [ 0, 1 ] } }
    }];
  }
}
// -----------------------------------------------------

// rpc UpdateSchemeActivity
message UpdateSchemeActivity {
  message Request {
    string owner_id = 1 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"

    string project_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
    string scheme_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
    SchemeActivity.Week activity = 4 [(buf.validate.field).required = true];
  }

  message Response {}
}
// -----------------------------------------------------

// rpc SchemeFirewall
message SchemeFirewall {
  message Request {
    string owner_id = 1 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"

    string project_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
    string scheme_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
  }

  message Response {
    Countries country = 1;
    Networks network = 2;
  }

  message Countries {
    bool wite_list = 1;
    int32 total = 2;
    repeated firewall.Country list = 3;
  }

  message Networks {
    bool wite_list = 1;
    int32 total = 2;
    repeated firewall.Network list = 3;
  }
}
// -----------------------------------------------------

// rpc AddSchemeFirewall
message AddSchemeFirewall {
  message Request {
    string owner_id = 1 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"

    string project_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
    string scheme_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
    oneof record {
      option (buf.validate.oneof).required = true;

      string network = 4 [(buf.validate.field).string.ip = true];
      string country_code = 5 [(buf.validate.field).string.len = 2];
    }
  }

  message Response {
    oneof record {
      string country_id = 1;
      string network_id = 2;
    }
  }
}
// -----------------------------------------------------

// rpc UpdateSchemeFirewall
message UpdateSchemeFirewall {
  message Request {
    string owner_id = 1 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"

    string project_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
    string scheme_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
    oneof status {
      option (buf.validate.oneof).required = true;

      bool country = 4;
      bool network = 5;
    }
  }

  message Response {}
}
// -----------------------------------------------------

// rpc DeleteSchemeFirewall
message DeleteSchemeFirewall {
  message Request {
    string owner_id = 1 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"

    string project_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
    string scheme_id = 3 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"
    oneof record {
      option (buf.validate.oneof).required = true;

      string country_id = 4 [(buf.validate.field).string.uuid = true];
      string network_id = 5 [(buf.validate.field).string.uuid = true];
    }
  }

  message Response {}
}
// -----------------------------------------------------

// rpc UserSchemes
message UserSchemes {
  message Request {
    bool is_admin = 1; // @gotags: json:"-"
    string user_id = 2 [(buf.validate.field).string.uuid = true]; // @gotags: json:"-"

    access.SchemeType scheme_type = 3;
    int32 limit = 4;
    int32 offset = 5;
    string sort_by = 6; // @gotags: json:"-"
  }

  message Response {
    map<int32, int32> total = 1;
    repeated Scheme.Response schemes = 2;
  }
}
// -----------------------------------------------------

// rpc SystemSchemesByAlias
message SystemSchemesByAlias {
  message Request {
    string alias = 1 [(buf.validate.field).string = { pattern: '^[a-zA-Z0-9_]+$' min_len: 3 max_len: 46 }, (buf.validate.field).required = true];
  }

  message Response {
    int32 total = 1;
    repeated Scheme.Response schemes = 2;
  }
}
// ------------------

// SystemSchemeAccess
message SystemSchemeAccess {
  message Request {
    string scheme_id = 1 [(buf.validate.field).string.uuid = true, (buf.validate.field).required = true];
    string client_ip = 2 [(buf.validate.field).string.ip = true, (buf.validate.field).required = true];
    google.protobuf.Timestamp timestamp = 3;
  }

  message Response {
    string project_id = 1;
    access.SchemeType scheme_type = 2;
    access.AccessScheme access = 3;
  }
}
// ------------------

// rpc SystemHostKey
message SystemHostKey {
  message Request {
    string scheme_id = 1 [(buf.validate.field).string.uuid = true, (buf.validate.field).required = true];
  }

  message Response {
    bytes hostkey = 1;
  }
}
// -----------------------------------------------------

// rpc SystemUpdateHostKey
message SystemUpdateHostKey {
  message Request {
    string scheme_id = 1 [(buf.validate.field).string.uuid = true, (buf.validate.field).required = true];
    bytes hostkey = 2 [(buf.validate.field).required = true];
  }

  message Response {}
}
// -----------------------------------------------------
