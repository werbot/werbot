// Code generated by protoc-gen-go. DO NOT EDIT.
// source: profile.proto

package profile

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/werbot/werbot/pkg/utils/protoutils/ghoster/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Role int32

const (
	Role_role_unspecified Role = 0
	Role_user             Role = 1
	Role_manager          Role = 2
	Role_admin            Role = 3
)

// Enum value maps for Role.
var (
	Role_name = map[int32]string{
		0: "role_unspecified",
		1: "user",
		2: "manager",
		3: "admin",
	}
	Role_value = map[string]int32{
		"role_unspecified": 0,
		"user":             1,
		"manager":          2,
		"admin":            3,
	}
)

func (x Role) Enum() *Role {
	p := new(Role)
	*p = x
	return p
}

func (x Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Role) Descriptor() protoreflect.EnumDescriptor {
	return file_profile_proto_enumTypes[0].Descriptor()
}

func (Role) Type() protoreflect.EnumType {
	return &file_profile_proto_enumTypes[0]
}

func (x Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Role.Descriptor instead.
func (Role) EnumDescriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{0}
}

type Status int32

const (
	Status_unspecified Status = 0
	Status_offline     Status = 1
	Status_online      Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "unspecified",
		1: "offline",
		2: "online",
	}
	Status_value = map[string]int32{
		"unspecified": 0,
		"offline":     1,
		"online":      2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_profile_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_profile_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{1}
}

type ProfileParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId string `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Roles     Role   `protobuf:"varint,3,opt,name=roles,proto3,enum=profile.Role" json:"roles,omitempty"`
	SessionId string `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *ProfileParameters) Reset() {
	*x = ProfileParameters{}
	mi := &file_profile_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileParameters) ProtoMessage() {}

func (x *ProfileParameters) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileParameters.ProtoReflect.Descriptor instead.
func (*ProfileParameters) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{0}
}

func (x *ProfileParameters) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (x *ProfileParameters) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProfileParameters) GetRoles() Role {
	if x != nil {
		return x.Roles
	}
	return Role_role_unspecified
}

func (x *ProfileParameters) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// rpc SignIn
type SignIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignIn) Reset() {
	*x = SignIn{}
	mi := &file_profile_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignIn) ProtoMessage() {}

func (x *SignIn) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignIn.ProtoReflect.Descriptor instead.
func (*SignIn) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{1}
}

// rpc Token
type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Token) Reset() {
	*x = Token{}
	mi := &file_profile_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{2}
}

// rpc ResetPassword
type ResetPassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetPassword) Reset() {
	*x = ResetPassword{}
	mi := &file_profile_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPassword) ProtoMessage() {}

func (x *ResetPassword) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPassword.ProtoReflect.Descriptor instead.
func (*ResetPassword) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{3}
}

// rpc Profiles
type Profiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Profiles) Reset() {
	*x = Profiles{}
	mi := &file_profile_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profiles) ProtoMessage() {}

func (x *Profiles) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profiles.ProtoReflect.Descriptor instead.
func (*Profiles) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{4}
}

// rpc Profile
type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Profile) Reset() {
	*x = Profile{}
	mi := &file_profile_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{5}
}

// rpc AddProfile
type AddProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddProfile) Reset() {
	*x = AddProfile{}
	mi := &file_profile_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProfile) ProtoMessage() {}

func (x *AddProfile) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProfile.ProtoReflect.Descriptor instead.
func (*AddProfile) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{6}
}

// rpc UpdateProfile
type UpdateProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateProfile) Reset() {
	*x = UpdateProfile{}
	mi := &file_profile_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfile) ProtoMessage() {}

func (x *UpdateProfile) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfile.ProtoReflect.Descriptor instead.
func (*UpdateProfile) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{7}
}

// rpc DeleteProfile
type DeleteProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProfile) Reset() {
	*x = DeleteProfile{}
	mi := &file_profile_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProfile) ProtoMessage() {}

func (x *DeleteProfile) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProfile.ProtoReflect.Descriptor instead.
func (*DeleteProfile) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{8}
}

// rpc UpdatePassword
type UpdatePassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePassword) Reset() {
	*x = UpdatePassword{}
	mi := &file_profile_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePassword) ProtoMessage() {}

func (x *UpdatePassword) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePassword.ProtoReflect.Descriptor instead.
func (*UpdatePassword) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{9}
}

// rpc ProfileIDByLogin
type ProfileIDByLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProfileIDByLogin) Reset() {
	*x = ProfileIDByLogin{}
	mi := &file_profile_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileIDByLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileIDByLogin) ProtoMessage() {}

func (x *ProfileIDByLogin) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileIDByLogin.ProtoReflect.Descriptor instead.
func (*ProfileIDByLogin) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{10}
}

// rpc UpdateStatus
type UpdateStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStatus) Reset() {
	*x = UpdateStatus{}
	mi := &file_profile_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatus) ProtoMessage() {}

func (x *UpdateStatus) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatus.ProtoReflect.Descriptor instead.
func (*UpdateStatus) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{11}
}

type SignIn_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *SignIn_Request) Reset() {
	*x = SignIn_Request{}
	mi := &file_profile_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignIn_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignIn_Request) ProtoMessage() {}

func (x *SignIn_Request) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignIn_Request.ProtoReflect.Descriptor instead.
func (*SignIn_Request) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{1, 0}
}

func (x *SignIn_Request) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SignIn_Request) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SignIn_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignIn_Response) Reset() {
	*x = SignIn_Response{}
	mi := &file_profile_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignIn_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignIn_Response) ProtoMessage() {}

func (x *SignIn_Response) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignIn_Response.ProtoReflect.Descriptor instead.
func (*SignIn_Response) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{1, 1}
}

type Token_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Refresh string `protobuf:"bytes,1,opt,name=refresh,proto3" json:"refresh,omitempty"`
}

func (x *Token_Request) Reset() {
	*x = Token_Request{}
	mi := &file_profile_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Token_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token_Request) ProtoMessage() {}

func (x *Token_Request) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token_Request.ProtoReflect.Descriptor instead.
func (*Token_Request) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Token_Request) GetRefresh() string {
	if x != nil {
		return x.Refresh
	}
	return ""
}

type Token_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Access  string `protobuf:"bytes,1,opt,name=access,proto3" json:"access_token,omitempty"`    
	Refresh string `protobuf:"bytes,2,opt,name=refresh,proto3" json:"refresh_token,omitempty"`  
}

func (x *Token_Response) Reset() {
	*x = Token_Response{}
	mi := &file_profile_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Token_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token_Response) ProtoMessage() {}

func (x *Token_Response) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token_Response.ProtoReflect.Descriptor instead.
func (*Token_Response) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Token_Response) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

func (x *Token_Response) GetRefresh() string {
	if x != nil {
		return x.Refresh
	}
	return ""
}

type ResetPassword_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*ResetPassword_Request_Email
	//	*ResetPassword_Request_Token
	//	*ResetPassword_Request_Password
	Request isResetPassword_Request_Request `protobuf_oneof:"request"`
}

func (x *ResetPassword_Request) Reset() {
	*x = ResetPassword_Request{}
	mi := &file_profile_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetPassword_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPassword_Request) ProtoMessage() {}

func (x *ResetPassword_Request) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPassword_Request.ProtoReflect.Descriptor instead.
func (*ResetPassword_Request) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{3, 0}
}

func (m *ResetPassword_Request) GetRequest() isResetPassword_Request_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *ResetPassword_Request) GetEmail() string {
	if x, ok := x.GetRequest().(*ResetPassword_Request_Email); ok {
		return x.Email
	}
	return ""
}

func (x *ResetPassword_Request) GetToken() string {
	if x, ok := x.GetRequest().(*ResetPassword_Request_Token); ok {
		return x.Token
	}
	return ""
}

func (x *ResetPassword_Request) GetPassword() *ResetPassword_Password {
	if x, ok := x.GetRequest().(*ResetPassword_Request_Password); ok {
		return x.Password
	}
	return nil
}

type isResetPassword_Request_Request interface {
	isResetPassword_Request_Request()
}

type ResetPassword_Request_Email struct {
	Email string `protobuf:"bytes,1,opt,name=email,proto3,oneof"`
}

type ResetPassword_Request_Token struct {
	Token string `protobuf:"bytes,2,opt,name=token,proto3,oneof"`
}

type ResetPassword_Request_Password struct {
	Password *ResetPassword_Password `protobuf:"bytes,3,opt,name=password,proto3,oneof"`
}

func (*ResetPassword_Request_Email) isResetPassword_Request_Request() {}

func (*ResetPassword_Request_Token) isResetPassword_Request_Request() {}

func (*ResetPassword_Request_Password) isResetPassword_Request_Request() {}

type ResetPassword_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId string `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
}

func (x *ResetPassword_Response) Reset() {
	*x = ResetPassword_Response{}
	mi := &file_profile_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetPassword_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPassword_Response) ProtoMessage() {}

func (x *ResetPassword_Response) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPassword_Response.ProtoReflect.Descriptor instead.
func (*ResetPassword_Response) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{3, 1}
}

func (x *ResetPassword_Response) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

type ResetPassword_Password struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ResetPassword_Password) Reset() {
	*x = ResetPassword_Password{}
	mi := &file_profile_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetPassword_Password) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPassword_Password) ProtoMessage() {}

func (x *ResetPassword_Password) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPassword_Password.ProtoReflect.Descriptor instead.
func (*ResetPassword_Password) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{3, 2}
}

func (x *ResetPassword_Password) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ResetPassword_Password) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type Profiles_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAdmin bool   `protobuf:"varint,1,opt,name=is_admin,json=isAdmin,proto3" json:"-"`  
	Limit   int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  int32  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy  string `protobuf:"bytes,6,opt,name=sort_by,json=sortBy,proto3" json:"-"`  
}

func (x *Profiles_Request) Reset() {
	*x = Profiles_Request{}
	mi := &file_profile_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profiles_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profiles_Request) ProtoMessage() {}

func (x *Profiles_Request) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profiles_Request.ProtoReflect.Descriptor instead.
func (*Profiles_Request) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Profiles_Request) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *Profiles_Request) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Profiles_Request) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Profiles_Request) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

type Profiles_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int32               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Profiles []*Profile_Response `protobuf:"bytes,2,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *Profiles_Response) Reset() {
	*x = Profiles_Response{}
	mi := &file_profile_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profiles_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profiles_Response) ProtoMessage() {}

func (x *Profiles_Response) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profiles_Response.ProtoReflect.Descriptor instead.
func (*Profiles_Response) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{4, 1}
}

func (x *Profiles_Response) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Profiles_Response) GetProfiles() []*Profile_Response {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type Profile_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAdmin   bool   `protobuf:"varint,1,opt,name=is_admin,json=isAdmin,proto3" json:"-"`       
	ProfileId string `protobuf:"bytes,2,opt,name=profile_id,json=profileId,proto3" json:"-"`  
}

func (x *Profile_Request) Reset() {
	*x = Profile_Request{}
	mi := &file_profile_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile_Request) ProtoMessage() {}

func (x *Profile_Request) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile_Request.ProtoReflect.Descriptor instead.
func (*Profile_Request) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Profile_Request) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *Profile_Request) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

type Profile_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId     string                 `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	Alias         string                 `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Surname       string                 `protobuf:"bytes,4,opt,name=surname,proto3" json:"surname,omitempty"`
	Email         string                 `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Active        bool                   `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
	Confirmed     bool                   `protobuf:"varint,7,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	Role          Role                   `protobuf:"varint,8,opt,name=role,proto3,enum=profile.Role" json:"role,omitempty"`
	Password      string                 `protobuf:"bytes,9,opt,name=password,proto3" json:"password,omitempty"`
	LockedAt      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=locked_at,json=lockedAt,proto3" json:"locked_at,omitempty"`
	ArchivedAt    *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=archived_at,json=archivedAt,proto3" json:"archived_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	SchemesCount  int32                  `protobuf:"varint,50,opt,name=schemes_count,json=schemesCount,proto3" json:"schemes_count,omitempty"`
	ProjectsCount int32                  `protobuf:"varint,51,opt,name=projects_count,json=projectsCount,proto3" json:"projects_count,omitempty"`
	KeysCount     int32                  `protobuf:"varint,52,opt,name=keys_count,json=keysCount,proto3" json:"keys_count,omitempty"`
}

func (x *Profile_Response) Reset() {
	*x = Profile_Response{}
	mi := &file_profile_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile_Response) ProtoMessage() {}

func (x *Profile_Response) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile_Response.ProtoReflect.Descriptor instead.
func (*Profile_Response) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{5, 1}
}

func (x *Profile_Response) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (x *Profile_Response) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Profile_Response) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Profile_Response) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *Profile_Response) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Profile_Response) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Profile_Response) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

func (x *Profile_Response) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_role_unspecified
}

func (x *Profile_Response) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Profile_Response) GetLockedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LockedAt
	}
	return nil
}

func (x *Profile_Response) GetArchivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ArchivedAt
	}
	return nil
}

func (x *Profile_Response) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Profile_Response) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Profile_Response) GetSchemesCount() int32 {
	if x != nil {
		return x.SchemesCount
	}
	return 0
}

func (x *Profile_Response) GetProjectsCount() int32 {
	if x != nil {
		return x.ProjectsCount
	}
	return 0
}

func (x *Profile_Response) GetKeysCount() int32 {
	if x != nil {
		return x.KeysCount
	}
	return 0
}

type AddProfile_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAdmin   bool   `protobuf:"varint,1,opt,name=is_admin,json=isAdmin,proto3" json:"-"`  
	Alias     string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Email     string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Surname   string `protobuf:"bytes,5,opt,name=surname,proto3" json:"surname,omitempty"`
	Active    bool   `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
	Confirmed bool   `protobuf:"varint,7,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	Password  string `protobuf:"bytes,8,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *AddProfile_Request) Reset() {
	*x = AddProfile_Request{}
	mi := &file_profile_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddProfile_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProfile_Request) ProtoMessage() {}

func (x *AddProfile_Request) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProfile_Request.ProtoReflect.Descriptor instead.
func (*AddProfile_Request) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{6, 0}
}

func (x *AddProfile_Request) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *AddProfile_Request) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *AddProfile_Request) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddProfile_Request) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddProfile_Request) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *AddProfile_Request) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddProfile_Request) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

func (x *AddProfile_Request) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AddProfile_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId string `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
}

func (x *AddProfile_Response) Reset() {
	*x = AddProfile_Response{}
	mi := &file_profile_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddProfile_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProfile_Response) ProtoMessage() {}

func (x *AddProfile_Response) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProfile_Response.ProtoReflect.Descriptor instead.
func (*AddProfile_Response) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{6, 1}
}

func (x *AddProfile_Response) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

type UpdateProfile_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAdmin   bool   `protobuf:"varint,1,opt,name=is_admin,json=isAdmin,proto3" json:"-"`       
	ProfileId string `protobuf:"bytes,2,opt,name=profile_id,json=profileId,proto3" json:"-"`  
	// Types that are assignable to Setting:
	//
	//	*UpdateProfile_Request_Name
	//	*UpdateProfile_Request_Surname
	//	*UpdateProfile_Request_Alias
	//	*UpdateProfile_Request_Email
	//	*UpdateProfile_Request_Active
	//	*UpdateProfile_Request_Confirmed
	//	*UpdateProfile_Request_Archived
	Setting isUpdateProfile_Request_Setting `protobuf_oneof:"setting"`
}

func (x *UpdateProfile_Request) Reset() {
	*x = UpdateProfile_Request{}
	mi := &file_profile_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProfile_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfile_Request) ProtoMessage() {}

func (x *UpdateProfile_Request) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfile_Request.ProtoReflect.Descriptor instead.
func (*UpdateProfile_Request) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{7, 0}
}

func (x *UpdateProfile_Request) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *UpdateProfile_Request) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (m *UpdateProfile_Request) GetSetting() isUpdateProfile_Request_Setting {
	if m != nil {
		return m.Setting
	}
	return nil
}

func (x *UpdateProfile_Request) GetName() string {
	if x, ok := x.GetSetting().(*UpdateProfile_Request_Name); ok {
		return x.Name
	}
	return ""
}

func (x *UpdateProfile_Request) GetSurname() string {
	if x, ok := x.GetSetting().(*UpdateProfile_Request_Surname); ok {
		return x.Surname
	}
	return ""
}

func (x *UpdateProfile_Request) GetAlias() string {
	if x, ok := x.GetSetting().(*UpdateProfile_Request_Alias); ok {
		return x.Alias
	}
	return ""
}

func (x *UpdateProfile_Request) GetEmail() string {
	if x, ok := x.GetSetting().(*UpdateProfile_Request_Email); ok {
		return x.Email
	}
	return ""
}

func (x *UpdateProfile_Request) GetActive() bool {
	if x, ok := x.GetSetting().(*UpdateProfile_Request_Active); ok {
		return x.Active
	}
	return false
}

func (x *UpdateProfile_Request) GetConfirmed() bool {
	if x, ok := x.GetSetting().(*UpdateProfile_Request_Confirmed); ok {
		return x.Confirmed
	}
	return false
}

func (x *UpdateProfile_Request) GetArchived() bool {
	if x, ok := x.GetSetting().(*UpdateProfile_Request_Archived); ok {
		return x.Archived
	}
	return false
}

type isUpdateProfile_Request_Setting interface {
	isUpdateProfile_Request_Setting()
}

type UpdateProfile_Request_Name struct {
	Name string `protobuf:"bytes,3,opt,name=name,proto3,oneof"`
}

type UpdateProfile_Request_Surname struct {
	Surname string `protobuf:"bytes,4,opt,name=surname,proto3,oneof"`
}

type UpdateProfile_Request_Alias struct {
	// use only for admin
	Alias string `protobuf:"bytes,5,opt,name=alias,proto3,oneof"`
}

type UpdateProfile_Request_Email struct {
	Email string `protobuf:"bytes,6,opt,name=email,proto3,oneof"`
}

type UpdateProfile_Request_Active struct {
	Active bool `protobuf:"varint,7,opt,name=active,proto3,oneof"`
}

type UpdateProfile_Request_Confirmed struct {
	Confirmed bool `protobuf:"varint,8,opt,name=confirmed,proto3,oneof"`
}

type UpdateProfile_Request_Archived struct {
	Archived bool `protobuf:"varint,9,opt,name=archived,proto3,oneof"`
}

func (*UpdateProfile_Request_Name) isUpdateProfile_Request_Setting() {}

func (*UpdateProfile_Request_Surname) isUpdateProfile_Request_Setting() {}

func (*UpdateProfile_Request_Alias) isUpdateProfile_Request_Setting() {}

func (*UpdateProfile_Request_Email) isUpdateProfile_Request_Setting() {}

func (*UpdateProfile_Request_Active) isUpdateProfile_Request_Setting() {}

func (*UpdateProfile_Request_Confirmed) isUpdateProfile_Request_Setting() {}

func (*UpdateProfile_Request_Archived) isUpdateProfile_Request_Setting() {}

type UpdateProfile_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateProfile_Response) Reset() {
	*x = UpdateProfile_Response{}
	mi := &file_profile_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProfile_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfile_Response) ProtoMessage() {}

func (x *UpdateProfile_Response) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfile_Response.ProtoReflect.Descriptor instead.
func (*UpdateProfile_Response) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{7, 1}
}

type DeleteProfile_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId string `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"-"`  
	// Types that are assignable to Request:
	//
	//	*DeleteProfile_Request_Password
	//	*DeleteProfile_Request_Token
	Request isDeleteProfile_Request_Request `protobuf_oneof:"request"`
}

func (x *DeleteProfile_Request) Reset() {
	*x = DeleteProfile_Request{}
	mi := &file_profile_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProfile_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProfile_Request) ProtoMessage() {}

func (x *DeleteProfile_Request) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProfile_Request.ProtoReflect.Descriptor instead.
func (*DeleteProfile_Request) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{8, 0}
}

func (x *DeleteProfile_Request) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (m *DeleteProfile_Request) GetRequest() isDeleteProfile_Request_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *DeleteProfile_Request) GetPassword() string {
	if x, ok := x.GetRequest().(*DeleteProfile_Request_Password); ok {
		return x.Password
	}
	return ""
}

func (x *DeleteProfile_Request) GetToken() string {
	if x, ok := x.GetRequest().(*DeleteProfile_Request_Token); ok {
		return x.Token
	}
	return ""
}

type isDeleteProfile_Request_Request interface {
	isDeleteProfile_Request_Request()
}

type DeleteProfile_Request_Password struct {
	Password string `protobuf:"bytes,2,opt,name=password,proto3,oneof"`
}

type DeleteProfile_Request_Token struct {
	Token string `protobuf:"bytes,3,opt,name=token,proto3,oneof"`
}

func (*DeleteProfile_Request_Password) isDeleteProfile_Request_Request() {}

func (*DeleteProfile_Request_Token) isDeleteProfile_Request_Request() {}

type DeleteProfile_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProfile_Response) Reset() {
	*x = DeleteProfile_Response{}
	mi := &file_profile_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProfile_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProfile_Response) ProtoMessage() {}

func (x *DeleteProfile_Response) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProfile_Response.ProtoReflect.Descriptor instead.
func (*DeleteProfile_Response) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{8, 1}
}

type UpdatePassword_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId   string `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"-"`  
	OldPassword string `protobuf:"bytes,2,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	NewPassword string `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
}

func (x *UpdatePassword_Request) Reset() {
	*x = UpdatePassword_Request{}
	mi := &file_profile_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePassword_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePassword_Request) ProtoMessage() {}

func (x *UpdatePassword_Request) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePassword_Request.ProtoReflect.Descriptor instead.
func (*UpdatePassword_Request) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{9, 0}
}

func (x *UpdatePassword_Request) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (x *UpdatePassword_Request) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *UpdatePassword_Request) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type UpdatePassword_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdatePassword_Response) Reset() {
	*x = UpdatePassword_Response{}
	mi := &file_profile_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePassword_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePassword_Response) ProtoMessage() {}

func (x *UpdatePassword_Response) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePassword_Response.ProtoReflect.Descriptor instead.
func (*UpdatePassword_Response) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{9, 1}
}

func (x *UpdatePassword_Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ProfileIDByLogin_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Login       string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	Fingerprint string `protobuf:"bytes,2,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	ClientIp    string `protobuf:"bytes,3,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
}

func (x *ProfileIDByLogin_Request) Reset() {
	*x = ProfileIDByLogin_Request{}
	mi := &file_profile_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileIDByLogin_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileIDByLogin_Request) ProtoMessage() {}

func (x *ProfileIDByLogin_Request) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileIDByLogin_Request.ProtoReflect.Descriptor instead.
func (*ProfileIDByLogin_Request) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{10, 0}
}

func (x *ProfileIDByLogin_Request) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *ProfileIDByLogin_Request) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *ProfileIDByLogin_Request) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

type ProfileIDByLogin_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId string `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
}

func (x *ProfileIDByLogin_Response) Reset() {
	*x = ProfileIDByLogin_Response{}
	mi := &file_profile_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileIDByLogin_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileIDByLogin_Response) ProtoMessage() {}

func (x *ProfileIDByLogin_Response) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileIDByLogin_Response.ProtoReflect.Descriptor instead.
func (*ProfileIDByLogin_Response) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{10, 1}
}

func (x *ProfileIDByLogin_Response) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

type UpdateStatus_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"-"`  
	Status    Status `protobuf:"varint,2,opt,name=status,proto3,enum=profile.Status" json:"status,omitempty"`
}

func (x *UpdateStatus_Request) Reset() {
	*x = UpdateStatus_Request{}
	mi := &file_profile_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStatus_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatus_Request) ProtoMessage() {}

func (x *UpdateStatus_Request) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatus_Request.ProtoReflect.Descriptor instead.
func (*UpdateStatus_Request) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{11, 0}
}

func (x *UpdateStatus_Request) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *UpdateStatus_Request) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_unspecified
}

type UpdateStatus_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStatus_Response) Reset() {
	*x = UpdateStatus_Response{}
	mi := &file_profile_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStatus_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatus_Response) ProtoMessage() {}

func (x *UpdateStatus_Response) ProtoReflect() protoreflect.Message {
	mi := &file_profile_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatus_Response.ProtoReflect.Descriptor instead.
func (*UpdateStatus_Response) Descriptor() ([]byte, []int) {
	return file_profile_proto_rawDescGZIP(), []int{11, 1}
}

var File_profile_proto protoreflect.FileDescriptor

var file_profile_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x70, 0x6b, 0x67, 0x2f, 0x75, 0x74,
	0x69, 0x6c, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x67,
	0x68, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x68, 0x6f,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x11, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x1a, 0x9c, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x63,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4d, 0xba,
	0x48, 0x4a, 0xba, 0x01, 0x44, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6d, 0x75, 0x73, 0x74,
	0x20, 0x62, 0x65, 0x20, 0x61, 0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x0e, 0x74, 0x68, 0x69, 0x73, 0x2e,
	0x69, 0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x28, 0x29, 0xc8, 0x01, 0x01, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xba, 0x48, 0x09, 0xc8, 0x01, 0x01, 0x72, 0x04, 0x10,
	0x08, 0x18, 0x20, 0x88, 0xb5, 0x18, 0x01, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x72, 0x0a,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x1a, 0x3c, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x22, 0xdd, 0x02, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x1a, 0xc9, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x52, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3a,
	0xba, 0x48, 0x37, 0xba, 0x01, 0x34, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x15, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x61, 0x20, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x20, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0x0e, 0x74, 0x68, 0x69, 0x73,
	0x2e, 0x69, 0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x28, 0x29, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x00, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3d, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x1a, 0x55, 0x0a, 0x08, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10,
	0x08, 0x18, 0x20, 0x88, 0xb5, 0x18, 0x01, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x1e, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0xd0, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x6b,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x1a, 0x57, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x22, 0xc8, 0x05, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x1a, 0x4d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72,
	0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x1a,
	0xed, 0x04, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x04, 0x88, 0xb5, 0x18, 0x01, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x88, 0xb5, 0x18, 0x01, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x3d, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0x88, 0xb5, 0x18, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x41, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0x88, 0xb5, 0x18, 0x01, 0x52, 0x0a, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0x88, 0xb5, 0x18, 0x01, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x34,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x92, 0x03, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0xd8,
	0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xba, 0x48, 0x16, 0xc8, 0x01, 0x01, 0x72, 0x11, 0x10, 0x03,
	0x18, 0x20, 0x32, 0x0b, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24, 0x52,
	0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3d, 0xba, 0x48, 0x3a, 0xba, 0x01, 0x34, 0x0a, 0x0b, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x15, 0x6d, 0x75, 0x73, 0x74,
	0x20, 0x62, 0x65, 0x20, 0x61, 0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x1a, 0x0e, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x69, 0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x28,
	0x29, 0xc8, 0x01, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0x48, 0x09, 0xc8, 0x01,
	0x01, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xba, 0x48, 0x09, 0xc8, 0x01, 0x01, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x52, 0x07, 0x73, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xba,
	0x48, 0x09, 0xc8, 0x01, 0x01, 0x72, 0x04, 0x10, 0x08, 0x18, 0x20, 0x88, 0xb5, 0x18, 0x01, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x29, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0xa4, 0x03, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x86, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x27, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x48,
	0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10,
	0x03, 0x18, 0x20, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31,
	0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xba,
	0x48, 0x16, 0xd0, 0x01, 0x01, 0x72, 0x11, 0x10, 0x03, 0x18, 0x20, 0x32, 0x0b, 0x5e, 0x5b, 0x61,
	0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24, 0x48, 0x00, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x12, 0x52, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x3a, 0xba, 0x48, 0x37, 0xba, 0x01, 0x34, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x15, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x61,
	0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0x0e, 0x74, 0x68,
	0x69, 0x73, 0x2e, 0x69, 0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x28, 0x29, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x1e, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x12,
	0x1c, 0x0a, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x42, 0x10, 0x0a,
	0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x1a,
	0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x96, 0x01,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba,
	0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x08, 0x18, 0x20, 0x88,
	0xb5, 0x18, 0x01, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x23, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xba, 0x48, 0x08, 0xd0, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x00, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x10, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xd5, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x9c, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0c, 0x6f, 0x6c,
	0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x10, 0xba, 0x48, 0x09, 0xc8, 0x01, 0x01, 0x72, 0x04, 0x10, 0x08, 0x18, 0x20, 0x88, 0xb5,
	0x18, 0x01, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x33, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xba, 0x48, 0x09, 0xc8, 0x01, 0x01, 0x72, 0x04, 0x10,
	0x08, 0x18, 0x20, 0x88, 0xb5, 0x18, 0x01, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x1a, 0x24, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x10, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x42, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a,
	0x67, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x12, 0x24, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x70, 0x01, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x1a, 0x29, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x1a, 0x5b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x3e, 0x0a, 0x04,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x10, 0x03, 0x2a, 0x32, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x6f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x02,
	0x32, 0xa4, 0x06, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x73, 0x12, 0x3e, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x12, 0x17,
	0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x49, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x42, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x44, 0x42, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x44, 0x42, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x74, 0x2f, 0x77, 0x65, 0x72,
	0x62, 0x6f, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_profile_proto_rawDescOnce sync.Once
	file_profile_proto_rawDescData = file_profile_proto_rawDesc
)

func file_profile_proto_rawDescGZIP() []byte {
	file_profile_proto_rawDescOnce.Do(func() {
		file_profile_proto_rawDescData = protoimpl.X.CompressGZIP(file_profile_proto_rawDescData)
	})
	return file_profile_proto_rawDescData
}

var file_profile_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_profile_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_profile_proto_goTypes = []any{
	(Role)(0),                         // 0: profile.Role
	(Status)(0),                       // 1: profile.Status
	(*ProfileParameters)(nil),         // 2: profile.ProfileParameters
	(*SignIn)(nil),                    // 3: profile.SignIn
	(*Token)(nil),                     // 4: profile.Token
	(*ResetPassword)(nil),             // 5: profile.ResetPassword
	(*Profiles)(nil),                  // 6: profile.Profiles
	(*Profile)(nil),                   // 7: profile.Profile
	(*AddProfile)(nil),                // 8: profile.AddProfile
	(*UpdateProfile)(nil),             // 9: profile.UpdateProfile
	(*DeleteProfile)(nil),             // 10: profile.DeleteProfile
	(*UpdatePassword)(nil),            // 11: profile.UpdatePassword
	(*ProfileIDByLogin)(nil),          // 12: profile.ProfileIDByLogin
	(*UpdateStatus)(nil),              // 13: profile.UpdateStatus
	(*SignIn_Request)(nil),            // 14: profile.SignIn.Request
	(*SignIn_Response)(nil),           // 15: profile.SignIn.Response
	(*Token_Request)(nil),             // 16: profile.Token.Request
	(*Token_Response)(nil),            // 17: profile.Token.Response
	(*ResetPassword_Request)(nil),     // 18: profile.ResetPassword.Request
	(*ResetPassword_Response)(nil),    // 19: profile.ResetPassword.Response
	(*ResetPassword_Password)(nil),    // 20: profile.ResetPassword.Password
	(*Profiles_Request)(nil),          // 21: profile.Profiles.Request
	(*Profiles_Response)(nil),         // 22: profile.Profiles.Response
	(*Profile_Request)(nil),           // 23: profile.Profile.Request
	(*Profile_Response)(nil),          // 24: profile.Profile.Response
	(*AddProfile_Request)(nil),        // 25: profile.AddProfile.Request
	(*AddProfile_Response)(nil),       // 26: profile.AddProfile.Response
	(*UpdateProfile_Request)(nil),     // 27: profile.UpdateProfile.Request
	(*UpdateProfile_Response)(nil),    // 28: profile.UpdateProfile.Response
	(*DeleteProfile_Request)(nil),     // 29: profile.DeleteProfile.Request
	(*DeleteProfile_Response)(nil),    // 30: profile.DeleteProfile.Response
	(*UpdatePassword_Request)(nil),    // 31: profile.UpdatePassword.Request
	(*UpdatePassword_Response)(nil),   // 32: profile.UpdatePassword.Response
	(*ProfileIDByLogin_Request)(nil),  // 33: profile.ProfileIDByLogin.Request
	(*ProfileIDByLogin_Response)(nil), // 34: profile.ProfileIDByLogin.Response
	(*UpdateStatus_Request)(nil),      // 35: profile.UpdateStatus.Request
	(*UpdateStatus_Response)(nil),     // 36: profile.UpdateStatus.Response
	(*timestamppb.Timestamp)(nil),     // 37: google.protobuf.Timestamp
}
var file_profile_proto_depIdxs = []int32{
	0,  // 0: profile.ProfileParameters.roles:type_name -> profile.Role
	20, // 1: profile.ResetPassword.Request.password:type_name -> profile.ResetPassword.Password
	24, // 2: profile.Profiles.Response.profiles:type_name -> profile.Profile.Response
	0,  // 3: profile.Profile.Response.role:type_name -> profile.Role
	37, // 4: profile.Profile.Response.locked_at:type_name -> google.protobuf.Timestamp
	37, // 5: profile.Profile.Response.archived_at:type_name -> google.protobuf.Timestamp
	37, // 6: profile.Profile.Response.updated_at:type_name -> google.protobuf.Timestamp
	37, // 7: profile.Profile.Response.created_at:type_name -> google.protobuf.Timestamp
	1,  // 8: profile.UpdateStatus.Request.status:type_name -> profile.Status
	14, // 9: profile.ProfileHandlers.SignIn:input_type -> profile.SignIn.Request
	18, // 10: profile.ProfileHandlers.ResetPassword:input_type -> profile.ResetPassword.Request
	21, // 11: profile.ProfileHandlers.Profiles:input_type -> profile.Profiles.Request
	23, // 12: profile.ProfileHandlers.Profile:input_type -> profile.Profile.Request
	25, // 13: profile.ProfileHandlers.AddProfile:input_type -> profile.AddProfile.Request
	27, // 14: profile.ProfileHandlers.UpdateProfile:input_type -> profile.UpdateProfile.Request
	29, // 15: profile.ProfileHandlers.DeleteProfile:input_type -> profile.DeleteProfile.Request
	31, // 16: profile.ProfileHandlers.UpdatePassword:input_type -> profile.UpdatePassword.Request
	33, // 17: profile.ProfileHandlers.ProfileIDByLogin:input_type -> profile.ProfileIDByLogin.Request
	35, // 18: profile.ProfileHandlers.UpdateStatus:input_type -> profile.UpdateStatus.Request
	24, // 19: profile.ProfileHandlers.SignIn:output_type -> profile.Profile.Response
	19, // 20: profile.ProfileHandlers.ResetPassword:output_type -> profile.ResetPassword.Response
	22, // 21: profile.ProfileHandlers.Profiles:output_type -> profile.Profiles.Response
	24, // 22: profile.ProfileHandlers.Profile:output_type -> profile.Profile.Response
	26, // 23: profile.ProfileHandlers.AddProfile:output_type -> profile.AddProfile.Response
	28, // 24: profile.ProfileHandlers.UpdateProfile:output_type -> profile.UpdateProfile.Response
	30, // 25: profile.ProfileHandlers.DeleteProfile:output_type -> profile.DeleteProfile.Response
	32, // 26: profile.ProfileHandlers.UpdatePassword:output_type -> profile.UpdatePassword.Response
	34, // 27: profile.ProfileHandlers.ProfileIDByLogin:output_type -> profile.ProfileIDByLogin.Response
	36, // 28: profile.ProfileHandlers.UpdateStatus:output_type -> profile.UpdateStatus.Response
	19, // [19:29] is the sub-list for method output_type
	9,  // [9:19] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_profile_proto_init() }
func file_profile_proto_init() {
	if File_profile_proto != nil {
		return
	}
	file_profile_proto_msgTypes[16].OneofWrappers = []any{
		(*ResetPassword_Request_Email)(nil),
		(*ResetPassword_Request_Token)(nil),
		(*ResetPassword_Request_Password)(nil),
	}
	file_profile_proto_msgTypes[25].OneofWrappers = []any{
		(*UpdateProfile_Request_Name)(nil),
		(*UpdateProfile_Request_Surname)(nil),
		(*UpdateProfile_Request_Alias)(nil),
		(*UpdateProfile_Request_Email)(nil),
		(*UpdateProfile_Request_Active)(nil),
		(*UpdateProfile_Request_Confirmed)(nil),
		(*UpdateProfile_Request_Archived)(nil),
	}
	file_profile_proto_msgTypes[27].OneofWrappers = []any{
		(*DeleteProfile_Request_Password)(nil),
		(*DeleteProfile_Request_Token)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_profile_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_profile_proto_goTypes,
		DependencyIndexes: file_profile_proto_depIdxs,
		EnumInfos:         file_profile_proto_enumTypes,
		MessageInfos:      file_profile_proto_msgTypes,
	}.Build()
	File_profile_proto = out.File
	file_profile_proto_rawDesc = nil
	file_profile_proto_goTypes = nil
	file_profile_proto_depIdxs = nil
}
