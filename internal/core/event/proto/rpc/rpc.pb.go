// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package event

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	enum "github.com/werbot/werbot/internal/core/event/proto/enum"
	message "github.com/werbot/werbot/internal/core/event/proto/message"
	_ "github.com/werbot/werbot/pkg/utils/protoutils/ghoster/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// rpc Events
type Events struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Events) Reset() {
	*x = Events{}
	mi := &file_rpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Events) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Events) ProtoMessage() {}

func (x *Events) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Events.ProtoReflect.Descriptor instead.
func (*Events) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{0}
}

// rpc Event
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_rpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{1}
}

// rpc AddEvent
type AddEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddEvent) Reset() {
	*x = AddEvent{}
	mi := &file_rpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEvent) ProtoMessage() {}

func (x *AddEvent) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEvent.ProtoReflect.Descriptor instead.
func (*AddEvent) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{2}
}

type Events_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAdmin bool   `protobuf:"varint,1,opt,name=is_admin,json=isAdmin,proto3" json:"-"`  
	OwnerId string `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"-"`   
	// Types that are assignable to RelatedId:
	//
	//	*Events_Request_ProfileId
	//	*Events_Request_ProjectId
	//	*Events_Request_SchemeId
	RelatedId isEvents_Request_RelatedId `protobuf_oneof:"related_id"`
	// string related_id = 4 [(buf.validate.field).string.uuid = true, (buf.validate.field).required = true];
	Limit  int32  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy string `protobuf:"bytes,8,opt,name=sort_by,json=sortBy,proto3" json:"-"`  
}

func (x *Events_Request) Reset() {
	*x = Events_Request{}
	mi := &file_rpc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Events_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Events_Request) ProtoMessage() {}

func (x *Events_Request) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Events_Request.ProtoReflect.Descriptor instead.
func (*Events_Request) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Events_Request) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *Events_Request) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (m *Events_Request) GetRelatedId() isEvents_Request_RelatedId {
	if m != nil {
		return m.RelatedId
	}
	return nil
}

func (x *Events_Request) GetProfileId() string {
	if x, ok := x.GetRelatedId().(*Events_Request_ProfileId); ok {
		return x.ProfileId
	}
	return ""
}

func (x *Events_Request) GetProjectId() string {
	if x, ok := x.GetRelatedId().(*Events_Request_ProjectId); ok {
		return x.ProjectId
	}
	return ""
}

func (x *Events_Request) GetSchemeId() string {
	if x, ok := x.GetRelatedId().(*Events_Request_SchemeId); ok {
		return x.SchemeId
	}
	return ""
}

func (x *Events_Request) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Events_Request) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Events_Request) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

type isEvents_Request_RelatedId interface {
	isEvents_Request_RelatedId()
}

type Events_Request_ProfileId struct {
	ProfileId string `protobuf:"bytes,3,opt,name=profile_id,json=profileId,proto3,oneof"`
}

type Events_Request_ProjectId struct {
	ProjectId string `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3,oneof"`
}

type Events_Request_SchemeId struct {
	SchemeId string `protobuf:"bytes,5,opt,name=scheme_id,json=schemeId,proto3,oneof"`
}

func (*Events_Request_ProfileId) isEvents_Request_RelatedId() {}

func (*Events_Request_ProjectId) isEvents_Request_RelatedId() {}

func (*Events_Request_SchemeId) isEvents_Request_RelatedId() {}

type Events_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  int32             `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Events []*Event_Response `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *Events_Response) Reset() {
	*x = Events_Response{}
	mi := &file_rpc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Events_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Events_Response) ProtoMessage() {}

func (x *Events_Response) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Events_Response.ProtoReflect.Descriptor instead.
func (*Events_Response) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Events_Response) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Events_Response) GetEvents() []*Event_Response {
	if x != nil {
		return x.Events
	}
	return nil
}

type Event_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAdmin bool   `protobuf:"varint,1,opt,name=is_admin,json=isAdmin,proto3" json:"-"`  
	OwnerId string `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"-"`   
	// Types that are assignable to EventId:
	//
	//	*Event_Request_ProfileId
	//	*Event_Request_ProjectId
	//	*Event_Request_SchemeId
	EventId   isEvent_Request_EventId `protobuf_oneof:"event_id"`
	SessionId string                  `protobuf:"bytes,6,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *Event_Request) Reset() {
	*x = Event_Request{}
	mi := &file_rpc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_Request) ProtoMessage() {}

func (x *Event_Request) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_Request.ProtoReflect.Descriptor instead.
func (*Event_Request) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Event_Request) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *Event_Request) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (m *Event_Request) GetEventId() isEvent_Request_EventId {
	if m != nil {
		return m.EventId
	}
	return nil
}

func (x *Event_Request) GetProfileId() string {
	if x, ok := x.GetEventId().(*Event_Request_ProfileId); ok {
		return x.ProfileId
	}
	return ""
}

func (x *Event_Request) GetProjectId() string {
	if x, ok := x.GetEventId().(*Event_Request_ProjectId); ok {
		return x.ProjectId
	}
	return ""
}

func (x *Event_Request) GetSchemeId() string {
	if x, ok := x.GetEventId().(*Event_Request_SchemeId); ok {
		return x.SchemeId
	}
	return ""
}

func (x *Event_Request) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type isEvent_Request_EventId interface {
	isEvent_Request_EventId()
}

type Event_Request_ProfileId struct {
	ProfileId string `protobuf:"bytes,3,opt,name=profile_id,json=profileId,proto3,oneof"`
}

type Event_Request_ProjectId struct {
	ProjectId string `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3,oneof"`
}

type Event_Request_SchemeId struct {
	SchemeId string `protobuf:"bytes,5,opt,name=scheme_id,json=schemeId,proto3,oneof"`
}

func (*Event_Request_ProfileId) isEvent_Request_EventId() {}

func (*Event_Request_ProjectId) isEvent_Request_EventId() {}

func (*Event_Request_SchemeId) isEvent_Request_EventId() {}

type Event_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerId string `protobuf:"bytes,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	// Types that are assignable to RelatedId:
	//
	//	*Event_Response_ProfileId
	//	*Event_Response_ProjectId
	//	*Event_Response_SchemeId
	RelatedId isEvent_Response_RelatedId `protobuf_oneof:"related_id"`
	Section   int32                      `protobuf:"varint,5,opt,name=section,proto3" json:"section,omitempty"`
	Type      enum.Type                  `protobuf:"varint,6,opt,name=type,proto3,enum=eventenum.Type" json:"type,omitempty"`
	Session   *message.Session           `protobuf:"bytes,7,opt,name=session,proto3" json:"session,omitempty"`
	MetaData  []byte                     `protobuf:"bytes,8,opt,name=meta_data,json=metaData,proto3" json:"meta_data,omitempty"`
	CreatedAt *timestamppb.Timestamp     `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Event_Response) Reset() {
	*x = Event_Response{}
	mi := &file_rpc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_Response) ProtoMessage() {}

func (x *Event_Response) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_Response.ProtoReflect.Descriptor instead.
func (*Event_Response) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Event_Response) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (m *Event_Response) GetRelatedId() isEvent_Response_RelatedId {
	if m != nil {
		return m.RelatedId
	}
	return nil
}

func (x *Event_Response) GetProfileId() string {
	if x, ok := x.GetRelatedId().(*Event_Response_ProfileId); ok {
		return x.ProfileId
	}
	return ""
}

func (x *Event_Response) GetProjectId() string {
	if x, ok := x.GetRelatedId().(*Event_Response_ProjectId); ok {
		return x.ProjectId
	}
	return ""
}

func (x *Event_Response) GetSchemeId() string {
	if x, ok := x.GetRelatedId().(*Event_Response_SchemeId); ok {
		return x.SchemeId
	}
	return ""
}

func (x *Event_Response) GetSection() int32 {
	if x != nil {
		return x.Section
	}
	return 0
}

func (x *Event_Response) GetType() enum.Type {
	if x != nil {
		return x.Type
	}
	return enum.Type(0)
}

func (x *Event_Response) GetSession() *message.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *Event_Response) GetMetaData() []byte {
	if x != nil {
		return x.MetaData
	}
	return nil
}

func (x *Event_Response) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type isEvent_Response_RelatedId interface {
	isEvent_Response_RelatedId()
}

type Event_Response_ProfileId struct {
	ProfileId string `protobuf:"bytes,2,opt,name=profile_id,json=profileId,proto3,oneof"`
}

type Event_Response_ProjectId struct {
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3,oneof"`
}

type Event_Response_SchemeId struct {
	SchemeId string `protobuf:"bytes,4,opt,name=scheme_id,json=schemeId,proto3,oneof"`
}

func (*Event_Response_ProfileId) isEvent_Response_RelatedId() {}

func (*Event_Response_ProjectId) isEvent_Response_RelatedId() {}

func (*Event_Response_SchemeId) isEvent_Response_RelatedId() {}

type AddEvent_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerId string `protobuf:"bytes,1,opt,name=owner_id,json=ownerId,proto3" json:"-"`  
	// Types that are assignable to Section:
	//
	//	*AddEvent_Request_Profile
	//	*AddEvent_Request_Project
	//	*AddEvent_Request_Scheme
	Section  isAddEvent_Request_Section `protobuf_oneof:"section"`
	Type     enum.Type                  `protobuf:"varint,5,opt,name=type,proto3,enum=eventenum.Type" json:"type,omitempty"`
	Session  *message.Session           `protobuf:"bytes,6,opt,name=session,proto3" json:"session,omitempty"`
	MetaData []byte                     `protobuf:"bytes,7,opt,name=meta_data,json=metaData,proto3" json:"meta_data,omitempty"`
}

func (x *AddEvent_Request) Reset() {
	*x = AddEvent_Request{}
	mi := &file_rpc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddEvent_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEvent_Request) ProtoMessage() {}

func (x *AddEvent_Request) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEvent_Request.ProtoReflect.Descriptor instead.
func (*AddEvent_Request) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{2, 0}
}

func (x *AddEvent_Request) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (m *AddEvent_Request) GetSection() isAddEvent_Request_Section {
	if m != nil {
		return m.Section
	}
	return nil
}

func (x *AddEvent_Request) GetProfile() *message.Profile {
	if x, ok := x.GetSection().(*AddEvent_Request_Profile); ok {
		return x.Profile
	}
	return nil
}

func (x *AddEvent_Request) GetProject() *message.Project {
	if x, ok := x.GetSection().(*AddEvent_Request_Project); ok {
		return x.Project
	}
	return nil
}

func (x *AddEvent_Request) GetScheme() *message.Scheme {
	if x, ok := x.GetSection().(*AddEvent_Request_Scheme); ok {
		return x.Scheme
	}
	return nil
}

func (x *AddEvent_Request) GetType() enum.Type {
	if x != nil {
		return x.Type
	}
	return enum.Type(0)
}

func (x *AddEvent_Request) GetSession() *message.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *AddEvent_Request) GetMetaData() []byte {
	if x != nil {
		return x.MetaData
	}
	return nil
}

type isAddEvent_Request_Section interface {
	isAddEvent_Request_Section()
}

type AddEvent_Request_Profile struct {
	Profile *message.Profile `protobuf:"bytes,2,opt,name=profile,proto3,oneof"`
}

type AddEvent_Request_Project struct {
	Project *message.Project `protobuf:"bytes,3,opt,name=project,proto3,oneof"`
}

type AddEvent_Request_Scheme struct {
	Scheme *message.Scheme `protobuf:"bytes,4,opt,name=scheme,proto3,oneof"`
}

func (*AddEvent_Request_Profile) isAddEvent_Request_Section() {}

func (*AddEvent_Request_Project) isAddEvent_Request_Section() {}

func (*AddEvent_Request_Scheme) isAddEvent_Request_Section() {}

type AddEvent_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId string `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
}

func (x *AddEvent_Response) Reset() {
	*x = AddEvent_Response{}
	mi := &file_rpc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddEvent_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEvent_Response) ProtoMessage() {}

func (x *AddEvent_Response) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEvent_Response.ProtoReflect.Descriptor instead.
func (*AddEvent_Response) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{2, 1}
}

func (x *AddEvent_Response) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

var File_rpc_proto protoreflect.FileDescriptor

var file_rpc_proto_rawDesc = []byte{
	0x0a, 0x09, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x30, 0x70, 0x6b, 0x67, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x29, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e,
	0x75, 0x6d, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x83,
	0x03, 0x0a, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xa7, 0x02, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x26, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xc8, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52,
	0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48,
	0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x48, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x00, 0x52, 0x08, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x42, 0x13,
	0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x12, 0x05, 0xba, 0x48,
	0x02, 0x08, 0x01, 0x1a, 0x4f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0xf9, 0x04, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x8a,
	0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xc8, 0x01, 0x01, 0x72,
	0x03, 0xb0, 0x01, 0x01, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x00, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48,
	0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01,
	0x48, 0x00, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0b, 0xba, 0x48, 0x08, 0xd0, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x11, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x1a, 0xe2, 0x02, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x88, 0xb5, 0x18, 0x01,
	0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x64,
	0x22, 0x8f, 0x03, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xd9, 0x02,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x08, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08,
	0xc8, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x75,
	0x6d, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xc8, 0x01, 0x01, 0x82, 0x01,
	0x02, 0x10, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x42, 0x10, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x1a, 0x27, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x64, 0x32, 0xc3, 0x01, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x15,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x36, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x74, 0x2f, 0x77, 0x65,
	0x72, 0x62, 0x6f, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_proto_rawDescOnce sync.Once
	file_rpc_proto_rawDescData = file_rpc_proto_rawDesc
)

func file_rpc_proto_rawDescGZIP() []byte {
	file_rpc_proto_rawDescOnce.Do(func() {
		file_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_proto_rawDescData)
	})
	return file_rpc_proto_rawDescData
}

var file_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_rpc_proto_goTypes = []any{
	(*Events)(nil),                // 0: event.Events
	(*Event)(nil),                 // 1: event.Event
	(*AddEvent)(nil),              // 2: event.AddEvent
	(*Events_Request)(nil),        // 3: event.Events.Request
	(*Events_Response)(nil),       // 4: event.Events.Response
	(*Event_Request)(nil),         // 5: event.Event.Request
	(*Event_Response)(nil),        // 6: event.Event.Response
	(*AddEvent_Request)(nil),      // 7: event.AddEvent.Request
	(*AddEvent_Response)(nil),     // 8: event.AddEvent.Response
	(enum.Type)(0),                // 9: eventenum.Type
	(*message.Session)(nil),       // 10: eventmessage.Session
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
	(*message.Profile)(nil),       // 12: eventmessage.Profile
	(*message.Project)(nil),       // 13: eventmessage.Project
	(*message.Scheme)(nil),        // 14: eventmessage.Scheme
}
var file_rpc_proto_depIdxs = []int32{
	6,  // 0: event.Events.Response.events:type_name -> event.Event.Response
	9,  // 1: event.Event.Response.type:type_name -> eventenum.Type
	10, // 2: event.Event.Response.session:type_name -> eventmessage.Session
	11, // 3: event.Event.Response.created_at:type_name -> google.protobuf.Timestamp
	12, // 4: event.AddEvent.Request.profile:type_name -> eventmessage.Profile
	13, // 5: event.AddEvent.Request.project:type_name -> eventmessage.Project
	14, // 6: event.AddEvent.Request.scheme:type_name -> eventmessage.Scheme
	9,  // 7: event.AddEvent.Request.type:type_name -> eventenum.Type
	10, // 8: event.AddEvent.Request.session:type_name -> eventmessage.Session
	3,  // 9: event.EventHandlers.Events:input_type -> event.Events.Request
	5,  // 10: event.EventHandlers.Event:input_type -> event.Event.Request
	7,  // 11: event.EventHandlers.AddEvent:input_type -> event.AddEvent.Request
	4,  // 12: event.EventHandlers.Events:output_type -> event.Events.Response
	6,  // 13: event.EventHandlers.Event:output_type -> event.Event.Response
	8,  // 14: event.EventHandlers.AddEvent:output_type -> event.AddEvent.Response
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_rpc_proto_init() }
func file_rpc_proto_init() {
	if File_rpc_proto != nil {
		return
	}
	file_rpc_proto_msgTypes[3].OneofWrappers = []any{
		(*Events_Request_ProfileId)(nil),
		(*Events_Request_ProjectId)(nil),
		(*Events_Request_SchemeId)(nil),
	}
	file_rpc_proto_msgTypes[5].OneofWrappers = []any{
		(*Event_Request_ProfileId)(nil),
		(*Event_Request_ProjectId)(nil),
		(*Event_Request_SchemeId)(nil),
	}
	file_rpc_proto_msgTypes[6].OneofWrappers = []any{
		(*Event_Response_ProfileId)(nil),
		(*Event_Response_ProjectId)(nil),
		(*Event_Response_SchemeId)(nil),
	}
	file_rpc_proto_msgTypes[7].OneofWrappers = []any{
		(*AddEvent_Request_Profile)(nil),
		(*AddEvent_Request_Project)(nil),
		(*AddEvent_Request_Scheme)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_proto_goTypes,
		DependencyIndexes: file_rpc_proto_depIdxs,
		MessageInfos:      file_rpc_proto_msgTypes,
	}.Build()
	File_rpc_proto = out.File
	file_rpc_proto_rawDesc = nil
	file_rpc_proto_goTypes = nil
	file_rpc_proto_depIdxs = nil
}
