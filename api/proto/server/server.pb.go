// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: server.proto

package server

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServerAuth int32

const (
	ServerAuth_SERVER_UNSPECIFIED ServerAuth = 0
	ServerAuth_PASSWORD           ServerAuth = 1
	ServerAuth_KEY                ServerAuth = 2
	ServerAuth_AGENT              ServerAuth = 3
)

// Enum value maps for ServerAuth.
var (
	ServerAuth_name = map[int32]string{
		0: "SERVER_UNSPECIFIED",
		1: "PASSWORD",
		2: "KEY",
		3: "AGENT",
	}
	ServerAuth_value = map[string]int32{
		"SERVER_UNSPECIFIED": 0,
		"PASSWORD":           1,
		"KEY":                2,
		"AGENT":              3,
	}
)

func (x ServerAuth) Enum() *ServerAuth {
	p := new(ServerAuth)
	*p = x
	return p
}

func (x ServerAuth) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerAuth) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[0].Descriptor()
}

func (ServerAuth) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[0]
}

func (x ServerAuth) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerAuth.Descriptor instead.
func (ServerAuth) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0}
}

type ServerScheme int32

const (
	ServerScheme_SERVER_SCHEME_UNSPECIFIED ServerScheme = 0
	ServerScheme_TCP                       ServerScheme = 1
	ServerScheme_UDP                       ServerScheme = 2
	ServerScheme_SSH                       ServerScheme = 3
	ServerScheme_TELNET                    ServerScheme = 4
	ServerScheme_RDP                       ServerScheme = 5
)

// Enum value maps for ServerScheme.
var (
	ServerScheme_name = map[int32]string{
		0: "SERVER_SCHEME_UNSPECIFIED",
		1: "TCP",
		2: "UDP",
		3: "SSH",
		4: "TELNET",
		5: "RDP",
	}
	ServerScheme_value = map[string]int32{
		"SERVER_SCHEME_UNSPECIFIED": 0,
		"TCP":                       1,
		"UDP":                       2,
		"SSH":                       3,
		"TELNET":                    4,
		"RDP":                       5,
	}
)

func (x ServerScheme) Enum() *ServerScheme {
	p := new(ServerScheme)
	*p = x
	return p
}

func (x ServerScheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerScheme) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[1].Descriptor()
}

func (ServerScheme) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[1]
}

func (x ServerScheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerScheme.Descriptor instead.
func (ServerScheme) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1}
}

type SessionStatus int32

const (
	SessionStatus_SESSION_STATUS_UNSPECIFIED SessionStatus = 0
	SessionStatus_OPENED                     SessionStatus = 1
	SessionStatus_CLOSED                     SessionStatus = 2
)

// Enum value maps for SessionStatus.
var (
	SessionStatus_name = map[int32]string{
		0: "SESSION_STATUS_UNSPECIFIED",
		1: "OPENED",
		2: "CLOSED",
	}
	SessionStatus_value = map[string]int32{
		"SESSION_STATUS_UNSPECIFIED": 0,
		"OPENED":                     1,
		"CLOSED":                     2,
	}
)

func (x SessionStatus) Enum() *SessionStatus {
	p := new(SessionStatus)
	*p = x
	return p
}

func (x SessionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[2].Descriptor()
}

func (SessionStatus) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[2]
}

func (x SessionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionStatus.Descriptor instead.
func (SessionStatus) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2}
}

type UserType int32

const (
	UserType_USER_TYPE_UNSPECIFIED UserType = 0
	UserType_HEALTHCHECK           UserType = 1
	UserType_SHELL                 UserType = 2
	UserType_BASTION               UserType = 3
	UserType_INVITE                UserType = 4
)

// Enum value maps for UserType.
var (
	UserType_name = map[int32]string{
		0: "USER_TYPE_UNSPECIFIED",
		1: "HEALTHCHECK",
		2: "SHELL",
		3: "BASTION",
		4: "INVITE",
	}
	UserType_value = map[string]int32{
		"USER_TYPE_UNSPECIFIED": 0,
		"HEALTHCHECK":           1,
		"SHELL":                 2,
		"BASTION":               3,
		"INVITE":                4,
	}
)

func (x UserType) Enum() *UserType {
	p := new(UserType)
	*p = x
	return p
}

func (x UserType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[3].Descriptor()
}

func (UserType) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[3]
}

func (x UserType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserType.Descriptor instead.
func (UserType) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3}
}

// -----------------------------------------------------
// use in API in body request
type ActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string                   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id"`           
	ProjectId string                   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" query:"project_id"`  
	Activity  *ServerActivity_Response `protobuf:"bytes,3,opt,name=activity,proto3" json:"activity,omitempty"`
}

func (x *ActivityRequest) Reset() {
	*x = ActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityRequest) ProtoMessage() {}

func (x *ActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityRequest.ProtoReflect.Descriptor instead.
func (*ActivityRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0}
}

func (x *ActivityRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ActivityRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ActivityRequest) GetActivity() *ServerActivity_Response {
	if x != nil {
		return x.Activity
	}
	return nil
}

// rpc ListServers
type ListServers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListServers) Reset() {
	*x = ListServers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServers) ProtoMessage() {}

func (x *ListServers) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServers.ProtoReflect.Descriptor instead.
func (*ListServers) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1}
}

// rpc Server
type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2}
}

// rpc AddServer
type AddServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddServer) Reset() {
	*x = AddServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServer) ProtoMessage() {}

func (x *AddServer) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServer.ProtoReflect.Descriptor instead.
func (*AddServer) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3}
}

// rpc UpdateServer
type UpdateServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServer) Reset() {
	*x = UpdateServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServer) ProtoMessage() {}

func (x *UpdateServer) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServer.ProtoReflect.Descriptor instead.
func (*UpdateServer) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{4}
}

// rpc DeleteServer
type DeleteServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteServer) Reset() {
	*x = DeleteServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServer) ProtoMessage() {}

func (x *DeleteServer) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServer.ProtoReflect.Descriptor instead.
func (*DeleteServer) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{5}
}

// rpc UpdateServerOnlineStatus
type UpdateServerOnlineStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerOnlineStatus) Reset() {
	*x = UpdateServerOnlineStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerOnlineStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerOnlineStatus) ProtoMessage() {}

func (x *UpdateServerOnlineStatus) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerOnlineStatus.ProtoReflect.Descriptor instead.
func (*UpdateServerOnlineStatus) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{6}
}

// rpc UpdateServerActiveStatus
type UpdateServerActiveStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerActiveStatus) Reset() {
	*x = UpdateServerActiveStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerActiveStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerActiveStatus) ProtoMessage() {}

func (x *UpdateServerActiveStatus) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerActiveStatus.ProtoReflect.Descriptor instead.
func (*UpdateServerActiveStatus) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{7}
}

// rpc ServerAccess
type ServerAccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerAccess) Reset() {
	*x = ServerAccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccess) ProtoMessage() {}

func (x *ServerAccess) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccess.ProtoReflect.Descriptor instead.
func (*ServerAccess) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{8}
}

// rpc UpdateServerAccess
type UpdateServerAccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerAccess) Reset() {
	*x = UpdateServerAccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerAccess) ProtoMessage() {}

func (x *UpdateServerAccess) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerAccess.ProtoReflect.Descriptor instead.
func (*UpdateServerAccess) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{9}
}

// rpc ServerActivity
type ServerActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerActivity) Reset() {
	*x = ServerActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerActivity) ProtoMessage() {}

func (x *ServerActivity) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerActivity.ProtoReflect.Descriptor instead.
func (*ServerActivity) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{10}
}

// rpc UpdateServerActivity
type UpdateServerActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerActivity) Reset() {
	*x = UpdateServerActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerActivity) ProtoMessage() {}

func (x *UpdateServerActivity) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerActivity.ProtoReflect.Descriptor instead.
func (*UpdateServerActivity) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{11}
}

// rpc UpdateServerActive
type UpdateServerActive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerActive) Reset() {
	*x = UpdateServerActive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerActive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerActive) ProtoMessage() {}

func (x *UpdateServerActive) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerActive.ProtoReflect.Descriptor instead.
func (*UpdateServerActive) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{12}
}

// rpc UpdateServerHostKey
type UpdateServerHostKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerHostKey) Reset() {
	*x = UpdateServerHostKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerHostKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerHostKey) ProtoMessage() {}

func (x *UpdateServerHostKey) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerHostKey.ProtoReflect.Descriptor instead.
func (*UpdateServerHostKey) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{13}
}

// rpc AddServerSession
type AddServerSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddServerSession) Reset() {
	*x = AddServerSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddServerSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServerSession) ProtoMessage() {}

func (x *AddServerSession) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServerSession.ProtoReflect.Descriptor instead.
func (*AddServerSession) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{14}
}

// rpc ServerNameByID
type ServerNameByID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerNameByID) Reset() {
	*x = ServerNameByID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerNameByID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerNameByID) ProtoMessage() {}

func (x *ServerNameByID) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerNameByID.ProtoReflect.Descriptor instead.
func (*ServerNameByID) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{15}
}

// rpc ListServersShareForUser
type ListServersShareForUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListServersShareForUser) Reset() {
	*x = ListServersShareForUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServersShareForUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersShareForUser) ProtoMessage() {}

func (x *ListServersShareForUser) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersShareForUser.ProtoReflect.Descriptor instead.
func (*ListServersShareForUser) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{16}
}

// rpc AddServerShareForUser
type AddServerShareForUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddServerShareForUser) Reset() {
	*x = AddServerShareForUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddServerShareForUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServerShareForUser) ProtoMessage() {}

func (x *AddServerShareForUser) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServerShareForUser.ProtoReflect.Descriptor instead.
func (*AddServerShareForUser) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{17}
}

// rpc UpdateServerShareForUser
type UpdateServerShareForUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerShareForUser) Reset() {
	*x = UpdateServerShareForUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerShareForUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerShareForUser) ProtoMessage() {}

func (x *UpdateServerShareForUser) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerShareForUser.ProtoReflect.Descriptor instead.
func (*UpdateServerShareForUser) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{18}
}

// rpc DeleteServerShareForUser
type DeleteServerShareForUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteServerShareForUser) Reset() {
	*x = DeleteServerShareForUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServerShareForUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServerShareForUser) ProtoMessage() {}

func (x *DeleteServerShareForUser) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServerShareForUser.ProtoReflect.Descriptor instead.
func (*DeleteServerShareForUser) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{19}
}

type ListServers_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	Query  string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListServers_Request) Reset() {
	*x = ListServers_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServers_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServers_Request) ProtoMessage() {}

func (x *ListServers_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServers_Request.ProtoReflect.Descriptor instead.
func (*ListServers_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListServers_Request) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListServers_Request) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListServers_Request) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListServers_Request) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type ListServers_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   int32              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Servers []*Server_Response `protobuf:"bytes,2,rep,name=servers,proto3" json:"servers,omitempty"`
}

func (x *ListServers_Response) Reset() {
	*x = ListServers_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServers_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServers_Response) ProtoMessage() {}

func (x *ListServers_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServers_Response.ProtoReflect.Descriptor instead.
func (*ListServers_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ListServers_Response) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListServers_Response) GetServers() []*Server_Response {
	if x != nil {
		return x.Servers
	}
	return nil
}

type Server_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" params:"user_id"`           
	ServerId  string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" query:"server_id" params:"server_id"`     
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" query:"project_id" params:"project_id"`  
}

func (x *Server_Request) Reset() {
	*x = Server_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_Request) ProtoMessage() {}

func (x *Server_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_Request.ProtoReflect.Descriptor instead.
func (*Server_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Server_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Server_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *Server_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type Server_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId           string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ProjectId          string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ProjectLogin       string `protobuf:"bytes,3,opt,name=project_login,json=projectLogin,proto3" json:"project_login,omitempty"`
	Address            string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Port               int32  `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	Token              string `protobuf:"bytes,6,opt,name=token,proto3" json:"token,omitempty"`
	Login              string `protobuf:"bytes,7,opt,name=login,proto3" json:"login,omitempty"`
	Password           string `protobuf:"bytes,8,opt,name=password,proto3" json:"password,omitempty"`
	Title              string `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
	Audit              bool   `protobuf:"varint,10,opt,name=audit,proto3" json:"audit,omitempty"`
	Online             bool   `protobuf:"varint,11,opt,name=online,proto3" json:"online,omitempty"`
	KeyPublic          string `protobuf:"bytes,12,opt,name=key_public,json=keyPublic,proto3" json:"key_public,omitempty"`
	KeyPrivate         string `protobuf:"bytes,13,opt,name=key_private,json=keyPrivate,proto3" json:"key_private,omitempty"`
	KeyPassword        string `protobuf:"bytes,14,opt,name=key_password,json=keyPassword,proto3" json:"key_password,omitempty"`
	AccountId          string `protobuf:"bytes,15,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Auth               string `protobuf:"bytes,16,opt,name=auth,proto3" json:"auth,omitempty"`
	Scheme             string `protobuf:"bytes,17,opt,name=scheme,proto3" json:"scheme,omitempty"`
	HostKey            []byte `protobuf:"bytes,18,opt,name=host_key,json=hostKey,proto3" json:"host_key,omitempty"`
	PrivateDescription string `protobuf:"bytes,19,opt,name=private_description,json=privateDescription,proto3" json:"private_description,omitempty"`
	PublicDescription  string `protobuf:"bytes,20,opt,name=public_description,json=publicDescription,proto3" json:"public_description,omitempty"`
	Active             bool   `protobuf:"varint,21,opt,name=active,proto3" json:"active,omitempty"`
	CountMembers       int32  `protobuf:"varint,22,opt,name=count_members,json=countMembers,proto3" json:"count_members,omitempty"`
}

func (x *Server_Response) Reset() {
	*x = Server_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_Response) ProtoMessage() {}

func (x *Server_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_Response.ProtoReflect.Descriptor instead.
func (*Server_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Server_Response) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *Server_Response) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Server_Response) GetProjectLogin() string {
	if x != nil {
		return x.ProjectLogin
	}
	return ""
}

func (x *Server_Response) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Server_Response) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Server_Response) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Server_Response) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *Server_Response) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Server_Response) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Server_Response) GetAudit() bool {
	if x != nil {
		return x.Audit
	}
	return false
}

func (x *Server_Response) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *Server_Response) GetKeyPublic() string {
	if x != nil {
		return x.KeyPublic
	}
	return ""
}

func (x *Server_Response) GetKeyPrivate() string {
	if x != nil {
		return x.KeyPrivate
	}
	return ""
}

func (x *Server_Response) GetKeyPassword() string {
	if x != nil {
		return x.KeyPassword
	}
	return ""
}

func (x *Server_Response) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Server_Response) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

func (x *Server_Response) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *Server_Response) GetHostKey() []byte {
	if x != nil {
		return x.HostKey
	}
	return nil
}

func (x *Server_Response) GetPrivateDescription() string {
	if x != nil {
		return x.PrivateDescription
	}
	return ""
}

func (x *Server_Response) GetPublicDescription() string {
	if x != nil {
		return x.PublicDescription
	}
	return ""
}

func (x *Server_Response) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Server_Response) GetCountMembers() int32 {
	if x != nil {
		return x.CountMembers
	}
	return 0
}

type AddServer_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId          string       `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Address            string       `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Port               int32        `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	Login              string       `protobuf:"bytes,5,opt,name=login,proto3" json:"login,omitempty"`
	Title              string       `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Auth               ServerAuth   `protobuf:"varint,7,opt,name=auth,proto3,enum=server.ServerAuth" json:"auth,omitempty"`
	Scheme             ServerScheme `protobuf:"varint,8,opt,name=scheme,proto3,enum=server.ServerScheme" json:"scheme,omitempty"`
	Audit              bool         `protobuf:"varint,9,opt,name=audit,proto3" json:"audit,omitempty"`
	Active             bool         `protobuf:"varint,10,opt,name=active,proto3" json:"active,omitempty"`
	PrivateDescription string       `protobuf:"bytes,11,opt,name=private_description,json=privateDescription,proto3" json:"private_description,omitempty"`
	PublicDescription  string       `protobuf:"bytes,12,opt,name=public_description,json=publicDescription,proto3" json:"public_description,omitempty"`
	Password           string       `protobuf:"bytes,13,opt,name=password,proto3" json:"password,omitempty"`
	PublicKey          string       `protobuf:"bytes,14,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	KeyUuid            string       `protobuf:"bytes,15,opt,name=key_uuid,json=keyUuid,proto3" json:"key_uuid,omitempty"`
}

func (x *AddServer_Request) Reset() {
	*x = AddServer_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddServer_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServer_Request) ProtoMessage() {}

func (x *AddServer_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServer_Request.ProtoReflect.Descriptor instead.
func (*AddServer_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3, 0}
}

func (x *AddServer_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddServer_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AddServer_Request) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddServer_Request) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *AddServer_Request) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *AddServer_Request) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddServer_Request) GetAuth() ServerAuth {
	if x != nil {
		return x.Auth
	}
	return ServerAuth_SERVER_UNSPECIFIED
}

func (x *AddServer_Request) GetScheme() ServerScheme {
	if x != nil {
		return x.Scheme
	}
	return ServerScheme_SERVER_SCHEME_UNSPECIFIED
}

func (x *AddServer_Request) GetAudit() bool {
	if x != nil {
		return x.Audit
	}
	return false
}

func (x *AddServer_Request) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddServer_Request) GetPrivateDescription() string {
	if x != nil {
		return x.PrivateDescription
	}
	return ""
}

func (x *AddServer_Request) GetPublicDescription() string {
	if x != nil {
		return x.PublicDescription
	}
	return ""
}

func (x *AddServer_Request) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddServer_Request) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *AddServer_Request) GetKeyUuid() string {
	if x != nil {
		return x.KeyUuid
	}
	return ""
}

type AddServer_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId  string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	KeyPublic string `protobuf:"bytes,2,opt,name=key_public,json=keyPublic,proto3" json:"key_public,omitempty"`
}

func (x *AddServer_Response) Reset() {
	*x = AddServer_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddServer_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServer_Response) ProtoMessage() {}

func (x *AddServer_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServer_Response.ProtoReflect.Descriptor instead.
func (*AddServer_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3, 1}
}

func (x *AddServer_Response) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *AddServer_Response) GetKeyPublic() string {
	if x != nil {
		return x.KeyPublic
	}
	return ""
}

type UpdateServer_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" params:"user_id"`           
	ServerId           string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" query:"server_id" params:"server_id"`     
	ProjectId          string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" query:"project_id" params:"project_id"`  
	Address            string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty" query:"address" params:"address"`                       
	Port               int32  `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty" query:"port" params:"port"`                            
	Login              string `protobuf:"bytes,6,opt,name=login,proto3" json:"login,omitempty" query:"login" params:"login"`                           
	Title              string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty" query:"title" params:"title"`                           
	PrivateDescription string `protobuf:"bytes,8,opt,name=private_description,json=privateDescription,proto3" json:"private_description,omitempty"`
	PublicDescription  string `protobuf:"bytes,9,opt,name=public_description,json=publicDescription,proto3" json:"public_description,omitempty"`
	Audit              bool   `protobuf:"varint,10,opt,name=audit,proto3" json:"audit,omitempty"`
	Active             bool   `protobuf:"varint,11,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *UpdateServer_Request) Reset() {
	*x = UpdateServer_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServer_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServer_Request) ProtoMessage() {}

func (x *UpdateServer_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServer_Request.ProtoReflect.Descriptor instead.
func (*UpdateServer_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{4, 0}
}

func (x *UpdateServer_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateServer_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *UpdateServer_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateServer_Request) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UpdateServer_Request) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *UpdateServer_Request) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *UpdateServer_Request) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateServer_Request) GetPrivateDescription() string {
	if x != nil {
		return x.PrivateDescription
	}
	return ""
}

func (x *UpdateServer_Request) GetPublicDescription() string {
	if x != nil {
		return x.PublicDescription
	}
	return ""
}

func (x *UpdateServer_Request) GetAudit() bool {
	if x != nil {
		return x.Audit
	}
	return false
}

func (x *UpdateServer_Request) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type UpdateServer_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServer_Response) Reset() {
	*x = UpdateServer_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServer_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServer_Response) ProtoMessage() {}

func (x *UpdateServer_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServer_Response.ProtoReflect.Descriptor instead.
func (*UpdateServer_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{4, 1}
}

type DeleteServer_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" params:"user_id"`           
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" query:"project_id" params:"project_id"`  
	ServerId  string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" query:"server_id" params:"server_id"`     
}

func (x *DeleteServer_Request) Reset() {
	*x = DeleteServer_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServer_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServer_Request) ProtoMessage() {}

func (x *DeleteServer_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServer_Request.ProtoReflect.Descriptor instead.
func (*DeleteServer_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{5, 0}
}

func (x *DeleteServer_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteServer_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteServer_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type DeleteServer_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteServer_Response) Reset() {
	*x = DeleteServer_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServer_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServer_Response) ProtoMessage() {}

func (x *DeleteServer_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServer_Response.ProtoReflect.Descriptor instead.
func (*DeleteServer_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{5, 1}
}

type UpdateServerOnlineStatus_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id"`        
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" query:"server_id"`  
	Status   bool   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateServerOnlineStatus_Request) Reset() {
	*x = UpdateServerOnlineStatus_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerOnlineStatus_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerOnlineStatus_Request) ProtoMessage() {}

func (x *UpdateServerOnlineStatus_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerOnlineStatus_Request.ProtoReflect.Descriptor instead.
func (*UpdateServerOnlineStatus_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{6, 0}
}

func (x *UpdateServerOnlineStatus_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateServerOnlineStatus_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *UpdateServerOnlineStatus_Request) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UpdateServerOnlineStatus_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerOnlineStatus_Response) Reset() {
	*x = UpdateServerOnlineStatus_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerOnlineStatus_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerOnlineStatus_Response) ProtoMessage() {}

func (x *UpdateServerOnlineStatus_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerOnlineStatus_Response.ProtoReflect.Descriptor instead.
func (*UpdateServerOnlineStatus_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{6, 1}
}

type UpdateServerActiveStatus_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id"`  
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Status   bool   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateServerActiveStatus_Request) Reset() {
	*x = UpdateServerActiveStatus_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerActiveStatus_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerActiveStatus_Request) ProtoMessage() {}

func (x *UpdateServerActiveStatus_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerActiveStatus_Request.ProtoReflect.Descriptor instead.
func (*UpdateServerActiveStatus_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{7, 0}
}

func (x *UpdateServerActiveStatus_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateServerActiveStatus_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *UpdateServerActiveStatus_Request) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UpdateServerActiveStatus_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerActiveStatus_Response) Reset() {
	*x = UpdateServerActiveStatus_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerActiveStatus_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerActiveStatus_Response) ProtoMessage() {}

func (x *UpdateServerActiveStatus_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerActiveStatus_Response.ProtoReflect.Descriptor instead.
func (*UpdateServerActiveStatus_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{7, 1}
}

type ServerAccess_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" params:"user_id"`           
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" query:"project_id" params:"project_id"`  
	ServerId  string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" query:"server_id" params:"server_id"`     
}

func (x *ServerAccess_Request) Reset() {
	*x = ServerAccess_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccess_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccess_Request) ProtoMessage() {}

func (x *ServerAccess_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccess_Request.ProtoReflect.Descriptor instead.
func (*ServerAccess_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ServerAccess_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ServerAccess_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ServerAccess_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type ServerAccess_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth          ServerAuth `protobuf:"varint,1,opt,name=auth,proto3,enum=server.ServerAuth" json:"auth,omitempty"`
	Password      string     `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	PublicKey     string     `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	PrivateKey    string     `protobuf:"bytes,4,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	PasswordKey   string     `protobuf:"bytes,5,opt,name=password_key,json=passwordKey,proto3" json:"password_key,omitempty"`
	FingeprintKey string     `protobuf:"bytes,6,opt,name=fingeprint_key,json=fingeprintKey,proto3" json:"fingeprint_key,omitempty"`
}

func (x *ServerAccess_Response) Reset() {
	*x = ServerAccess_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAccess_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccess_Response) ProtoMessage() {}

func (x *ServerAccess_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccess_Response.ProtoReflect.Descriptor instead.
func (*ServerAccess_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{8, 1}
}

func (x *ServerAccess_Response) GetAuth() ServerAuth {
	if x != nil {
		return x.Auth
	}
	return ServerAuth_SERVER_UNSPECIFIED
}

func (x *ServerAccess_Response) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ServerAccess_Response) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *ServerAccess_Response) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *ServerAccess_Response) GetPasswordKey() string {
	if x != nil {
		return x.PasswordKey
	}
	return ""
}

func (x *ServerAccess_Response) GetFingeprintKey() string {
	if x != nil {
		return x.FingeprintKey
	}
	return ""
}

type UpdateServerAccess_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string     `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id"`           
	ProjectId string     `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" query:"project_id"`  
	ServerId  string     `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" query:"server_id"`     
	Auth      ServerAuth `protobuf:"varint,4,opt,name=auth,proto3,enum=server.ServerAuth" json:"auth,omitempty"`
	Password  string     `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	PublicKey string     `protobuf:"bytes,6,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	KeyUuid   string     `protobuf:"bytes,7,opt,name=key_uuid,json=keyUuid,proto3" json:"key_uuid,omitempty"`
}

func (x *UpdateServerAccess_Request) Reset() {
	*x = UpdateServerAccess_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerAccess_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerAccess_Request) ProtoMessage() {}

func (x *UpdateServerAccess_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerAccess_Request.ProtoReflect.Descriptor instead.
func (*UpdateServerAccess_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{9, 0}
}

func (x *UpdateServerAccess_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateServerAccess_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateServerAccess_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *UpdateServerAccess_Request) GetAuth() ServerAuth {
	if x != nil {
		return x.Auth
	}
	return ServerAuth_SERVER_UNSPECIFIED
}

func (x *UpdateServerAccess_Request) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateServerAccess_Request) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *UpdateServerAccess_Request) GetKeyUuid() string {
	if x != nil {
		return x.KeyUuid
	}
	return ""
}

type UpdateServerAccess_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerAccess_Response) Reset() {
	*x = UpdateServerAccess_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerAccess_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerAccess_Response) ProtoMessage() {}

func (x *UpdateServerAccess_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerAccess_Response.ProtoReflect.Descriptor instead.
func (*UpdateServerAccess_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{9, 1}
}

type ServerActivity_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id"`           
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" query:"project_id"`  
	ServerId  string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *ServerActivity_Request) Reset() {
	*x = ServerActivity_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerActivity_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerActivity_Request) ProtoMessage() {}

func (x *ServerActivity_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerActivity_Request.ProtoReflect.Descriptor instead.
func (*ServerActivity_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{10, 0}
}

func (x *ServerActivity_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ServerActivity_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ServerActivity_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type ServerActivity_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Monday    []int32 `protobuf:"varint,1,rep,packed,name=monday,proto3" json:"monday,omitempty"`
	Tuesday   []int32 `protobuf:"varint,2,rep,packed,name=tuesday,proto3" json:"tuesday,omitempty"`
	Wednesday []int32 `protobuf:"varint,3,rep,packed,name=wednesday,proto3" json:"wednesday,omitempty"`
	Thursday  []int32 `protobuf:"varint,4,rep,packed,name=thursday,proto3" json:"thursday,omitempty"`
	Friday    []int32 `protobuf:"varint,5,rep,packed,name=friday,proto3" json:"friday,omitempty"`
	Saturday  []int32 `protobuf:"varint,6,rep,packed,name=saturday,proto3" json:"saturday,omitempty"`
	Sunday    []int32 `protobuf:"varint,7,rep,packed,name=sunday,proto3" json:"sunday,omitempty"`
}

func (x *ServerActivity_Response) Reset() {
	*x = ServerActivity_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerActivity_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerActivity_Response) ProtoMessage() {}

func (x *ServerActivity_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerActivity_Response.ProtoReflect.Descriptor instead.
func (*ServerActivity_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{10, 1}
}

func (x *ServerActivity_Response) GetMonday() []int32 {
	if x != nil {
		return x.Monday
	}
	return nil
}

func (x *ServerActivity_Response) GetTuesday() []int32 {
	if x != nil {
		return x.Tuesday
	}
	return nil
}

func (x *ServerActivity_Response) GetWednesday() []int32 {
	if x != nil {
		return x.Wednesday
	}
	return nil
}

func (x *ServerActivity_Response) GetThursday() []int32 {
	if x != nil {
		return x.Thursday
	}
	return nil
}

func (x *ServerActivity_Response) GetFriday() []int32 {
	if x != nil {
		return x.Friday
	}
	return nil
}

func (x *ServerActivity_Response) GetSaturday() []int32 {
	if x != nil {
		return x.Saturday
	}
	return nil
}

func (x *ServerActivity_Response) GetSunday() []int32 {
	if x != nil {
		return x.Sunday
	}
	return nil
}

type UpdateServerActivity_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string                   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id"`           
	ProjectId string                   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" query:"project_id"`  
	ServerId  string                   `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Activity  *ServerActivity_Response `protobuf:"bytes,4,opt,name=activity,proto3" json:"activity,omitempty"`
}

func (x *UpdateServerActivity_Request) Reset() {
	*x = UpdateServerActivity_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerActivity_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerActivity_Request) ProtoMessage() {}

func (x *UpdateServerActivity_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerActivity_Request.ProtoReflect.Descriptor instead.
func (*UpdateServerActivity_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{11, 0}
}

func (x *UpdateServerActivity_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateServerActivity_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateServerActivity_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *UpdateServerActivity_Request) GetActivity() *ServerActivity_Response {
	if x != nil {
		return x.Activity
	}
	return nil
}

type UpdateServerActivity_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerActivity_Response) Reset() {
	*x = UpdateServerActivity_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerActivity_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerActivity_Response) ProtoMessage() {}

func (x *UpdateServerActivity_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerActivity_Response.ProtoReflect.Descriptor instead.
func (*UpdateServerActivity_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{11, 1}
}

type UpdateServerActive_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id"`        
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" query:"server_id"`  
	Status   bool   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateServerActive_Request) Reset() {
	*x = UpdateServerActive_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerActive_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerActive_Request) ProtoMessage() {}

func (x *UpdateServerActive_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerActive_Request.ProtoReflect.Descriptor instead.
func (*UpdateServerActive_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{12, 0}
}

func (x *UpdateServerActive_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateServerActive_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *UpdateServerActive_Request) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UpdateServerActive_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerActive_Response) Reset() {
	*x = UpdateServerActive_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerActive_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerActive_Response) ProtoMessage() {}

func (x *UpdateServerActive_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerActive_Response.ProtoReflect.Descriptor instead.
func (*UpdateServerActive_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{12, 1}
}

type UpdateServerHostKey_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Hostkey  []byte `protobuf:"bytes,2,opt,name=hostkey,proto3" json:"hostkey,omitempty"`
}

func (x *UpdateServerHostKey_Request) Reset() {
	*x = UpdateServerHostKey_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerHostKey_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerHostKey_Request) ProtoMessage() {}

func (x *UpdateServerHostKey_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerHostKey_Request.ProtoReflect.Descriptor instead.
func (*UpdateServerHostKey_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{13, 0}
}

func (x *UpdateServerHostKey_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *UpdateServerHostKey_Request) GetHostkey() []byte {
	if x != nil {
		return x.Hostkey
	}
	return nil
}

type UpdateServerHostKey_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerHostKey_Response) Reset() {
	*x = UpdateServerHostKey_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerHostKey_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerHostKey_Response) ProtoMessage() {}

func (x *UpdateServerHostKey_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerHostKey_Response.ProtoReflect.Descriptor instead.
func (*UpdateServerHostKey_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{13, 1}
}

type AddServerSession_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Status    SessionStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=server.SessionStatus" json:"status,omitempty"`
	Created   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Message   string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Uuid      string                 `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *AddServerSession_Request) Reset() {
	*x = AddServerSession_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddServerSession_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServerSession_Request) ProtoMessage() {}

func (x *AddServerSession_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServerSession_Request.ProtoReflect.Descriptor instead.
func (*AddServerSession_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{14, 0}
}

func (x *AddServerSession_Request) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AddServerSession_Request) GetStatus() SessionStatus {
	if x != nil {
		return x.Status
	}
	return SessionStatus_SESSION_STATUS_UNSPECIFIED
}

func (x *AddServerSession_Request) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddServerSession_Request) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddServerSession_Request) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type AddServerSession_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *AddServerSession_Response) Reset() {
	*x = AddServerSession_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddServerSession_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServerSession_Response) ProtoMessage() {}

func (x *AddServerSession_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServerSession_Response.ProtoReflect.Descriptor instead.
func (*AddServerSession_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{14, 1}
}

func (x *AddServerSession_Response) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type ServerNameByID_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" params:"user_id"`           
	ServerId  string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" query:"server_id" params:"server_id"`     
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" query:"project_id" params:"project_id"`  
}

func (x *ServerNameByID_Request) Reset() {
	*x = ServerNameByID_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerNameByID_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerNameByID_Request) ProtoMessage() {}

func (x *ServerNameByID_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerNameByID_Request.ProtoReflect.Descriptor instead.
func (*ServerNameByID_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{15, 0}
}

func (x *ServerNameByID_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ServerNameByID_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ServerNameByID_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ServerNameByID_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerName string `protobuf:"bytes,1,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
}

func (x *ServerNameByID_Response) Reset() {
	*x = ServerNameByID_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerNameByID_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerNameByID_Response) ProtoMessage() {}

func (x *ServerNameByID_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerNameByID_Response.ProtoReflect.Descriptor instead.
func (*ServerNameByID_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{15, 1}
}

func (x *ServerNameByID_Response) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

type ListServersShareForUser_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	UserId string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ListServersShareForUser_Request) Reset() {
	*x = ListServersShareForUser_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServersShareForUser_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersShareForUser_Request) ProtoMessage() {}

func (x *ListServersShareForUser_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersShareForUser_Request.ProtoReflect.Descriptor instead.
func (*ListServersShareForUser_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{16, 0}
}

func (x *ListServersShareForUser_Request) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListServersShareForUser_Request) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListServersShareForUser_Request) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListServersShareForUser_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListServersShareForUser_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   int32                                            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Servers []*ListServersShareForUser_Response_SharedServer `protobuf:"bytes,2,rep,name=servers,proto3" json:"servers,omitempty"`
}

func (x *ListServersShareForUser_Response) Reset() {
	*x = ListServersShareForUser_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServersShareForUser_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersShareForUser_Response) ProtoMessage() {}

func (x *ListServersShareForUser_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersShareForUser_Response.ProtoReflect.Descriptor instead.
func (*ListServersShareForUser_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{16, 1}
}

func (x *ListServersShareForUser_Response) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListServersShareForUser_Response) GetServers() []*ListServersShareForUser_Response_SharedServer {
	if x != nil {
		return x.Servers
	}
	return nil
}

type ListServersShareForUser_Response_SharedServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserLogin         string `protobuf:"bytes,1,opt,name=user_login,json=userLogin,proto3" json:"user_login,omitempty"`
	ProjectLogin      string `protobuf:"bytes,2,opt,name=project_login,json=projectLogin,proto3" json:"project_login,omitempty"`
	ServerToken       string `protobuf:"bytes,3,opt,name=server_token,json=serverToken,proto3" json:"server_token,omitempty"`
	ServerId          string `protobuf:"bytes,4,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ServerOnline      bool   `protobuf:"varint,5,opt,name=server_online,json=serverOnline,proto3" json:"server_online,omitempty"`
	ServerTitle       string `protobuf:"bytes,6,opt,name=server_title,json=serverTitle,proto3" json:"server_title,omitempty"`
	ServerDescription string `protobuf:"bytes,7,opt,name=server_description,json=serverDescription,proto3" json:"server_description,omitempty"`
}

func (x *ListServersShareForUser_Response_SharedServer) Reset() {
	*x = ListServersShareForUser_Response_SharedServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServersShareForUser_Response_SharedServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersShareForUser_Response_SharedServer) ProtoMessage() {}

func (x *ListServersShareForUser_Response_SharedServer) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersShareForUser_Response_SharedServer.ProtoReflect.Descriptor instead.
func (*ListServersShareForUser_Response_SharedServer) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{16, 1, 0}
}

func (x *ListServersShareForUser_Response_SharedServer) GetUserLogin() string {
	if x != nil {
		return x.UserLogin
	}
	return ""
}

func (x *ListServersShareForUser_Response_SharedServer) GetProjectLogin() string {
	if x != nil {
		return x.ProjectLogin
	}
	return ""
}

func (x *ListServersShareForUser_Response_SharedServer) GetServerToken() string {
	if x != nil {
		return x.ServerToken
	}
	return ""
}

func (x *ListServersShareForUser_Response_SharedServer) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ListServersShareForUser_Response_SharedServer) GetServerOnline() bool {
	if x != nil {
		return x.ServerOnline
	}
	return false
}

func (x *ListServersShareForUser_Response_SharedServer) GetServerTitle() string {
	if x != nil {
		return x.ServerTitle
	}
	return ""
}

func (x *ListServersShareForUser_Response_SharedServer) GetServerDescription() string {
	if x != nil {
		return x.ServerDescription
	}
	return ""
}

type AddServerShareForUser_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ServerId  string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *AddServerShareForUser_Request) Reset() {
	*x = AddServerShareForUser_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddServerShareForUser_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServerShareForUser_Request) ProtoMessage() {}

func (x *AddServerShareForUser_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServerShareForUser_Request.ProtoReflect.Descriptor instead.
func (*AddServerShareForUser_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{17, 0}
}

func (x *AddServerShareForUser_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddServerShareForUser_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AddServerShareForUser_Request) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type AddServerShareForUser_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddServerShareForUser_Response) Reset() {
	*x = AddServerShareForUser_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddServerShareForUser_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServerShareForUser_Response) ProtoMessage() {}

func (x *AddServerShareForUser_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServerShareForUser_Response.ProtoReflect.Descriptor instead.
func (*AddServerShareForUser_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{17, 1}
}

type UpdateServerShareForUser_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ShareId   string `protobuf:"bytes,3,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
}

func (x *UpdateServerShareForUser_Request) Reset() {
	*x = UpdateServerShareForUser_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerShareForUser_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerShareForUser_Request) ProtoMessage() {}

func (x *UpdateServerShareForUser_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerShareForUser_Request.ProtoReflect.Descriptor instead.
func (*UpdateServerShareForUser_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{18, 0}
}

func (x *UpdateServerShareForUser_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateServerShareForUser_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateServerShareForUser_Request) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

type UpdateServerShareForUser_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerShareForUser_Response) Reset() {
	*x = UpdateServerShareForUser_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerShareForUser_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerShareForUser_Response) ProtoMessage() {}

func (x *UpdateServerShareForUser_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerShareForUser_Response.ProtoReflect.Descriptor instead.
func (*UpdateServerShareForUser_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{18, 1}
}

type DeleteServerShareForUser_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ShareId   string `protobuf:"bytes,3,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
}

func (x *DeleteServerShareForUser_Request) Reset() {
	*x = DeleteServerShareForUser_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServerShareForUser_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServerShareForUser_Request) ProtoMessage() {}

func (x *DeleteServerShareForUser_Request) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServerShareForUser_Request.ProtoReflect.Descriptor instead.
func (*DeleteServerShareForUser_Request) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{19, 0}
}

func (x *DeleteServerShareForUser_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteServerShareForUser_Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteServerShareForUser_Request) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

type DeleteServerShareForUser_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteServerShareForUser_Response) Reset() {
	*x = DeleteServerShareForUser_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServerShareForUser_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServerShareForUser_Response) ProtoMessage() {}

func (x *DeleteServerShareForUser_Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServerShareForUser_Response.ProtoReflect.Descriptor instead.
func (*DeleteServerShareForUser_Response) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{19, 1}
}

var File_server_proto protoreflect.FileDescriptor

var file_server_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x9a, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x3b, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0xca, 0x01,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x1a, 0x66, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x53, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0x9e, 0x06, 0x0a, 0x06, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x85, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72,
	0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0,
	0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x1a, 0x8b, 0x05,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x65, 0x79,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x2f,
	0x0a, 0x13, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2d, 0x0a, 0x12, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x91, 0x05, 0x0a, 0x09,
	0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0xbb, 0x04, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01,
	0xd0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xa8, 0x01, 0x01, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x1a, 0x06, 0x10, 0x80, 0x80,
	0x04, 0x28, 0x01, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xfa, 0x42, 0x13, 0x72, 0x11, 0x10,
	0x03, 0x18, 0x14, 0x32, 0x0b, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24,
	0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x03, 0x18,
	0x80, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x36, 0x0a, 0x06, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08,
	0x6b, 0x65, 0x79, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x1a, 0x46, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22,
	0xc2, 0x03, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x1a, 0xa5, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa,
	0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0,
	0x01, 0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xa8, 0x01, 0x01,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x1a, 0x06, 0x10, 0x80,
	0x80, 0x04, 0x28, 0x01, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xfa, 0x42, 0x13, 0x72, 0x11,
	0x10, 0x03, 0x18, 0x14, 0x32, 0x0b, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x2b,
	0x24, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x03,
	0x18, 0x80, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x82, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x1a, 0x6e, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x96, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x6e, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0,
	0x01, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x0a, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xee, 0x02, 0x0a, 0x0c, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x82, 0x01, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01,
	0xd0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01,
	0x01, 0xd0, 0x01, 0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x1a, 0xd8,
	0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4b,
	0x65, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x69, 0x6e, 0x67,
	0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xa3, 0x02, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x1a, 0x80, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa,
	0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x55,
	0x75, 0x69, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xcc, 0x02, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x1a, 0x75, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x1a, 0xc2, 0x01, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x79,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x07, 0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x64, 0x6e,
	0x65, 0x73, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x77, 0x65, 0x64,
	0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64,
	0x61, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64,
	0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x06, 0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x61,
	0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x73, 0x61,
	0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x22, 0xd7,
	0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x1a, 0xb2, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01,
	0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x3b, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x1a, 0x0a, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x1a,
	0x6e, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08,
	0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a,
	0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x63, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x4b,
	0x65, 0x79, 0x1a, 0x40, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f,
	0x73, 0x74, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x68, 0x6f, 0x73,
	0x74, 0x6b, 0x65, 0x79, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xfb, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0xbb, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x1a, 0x29, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xc2,
	0x01, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x1a, 0x82, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x1a, 0x2b, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x84, 0x04, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x1a,
	0x69, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42,
	0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0xfd, 0x02, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x4f, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x1a, 0x89,
	0x02, 0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x83, 0x01, 0x0a, 0x15, 0x41,
	0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x1a, 0x5e, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x84, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x5c, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x1a, 0x5c, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x49, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x46,
	0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x45, 0x59, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41,
	0x47, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x2a, 0x5d, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52,
	0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x43, 0x50, 0x10, 0x01, 0x12, 0x07,
	0x0a, 0x03, 0x55, 0x44, 0x50, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x53, 0x48, 0x10, 0x03,
	0x12, 0x0a, 0x0a, 0x06, 0x54, 0x45, 0x4c, 0x4e, 0x45, 0x54, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03,
	0x52, 0x44, 0x50, 0x10, 0x05, 0x2a, 0x47, 0x0a, 0x0d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x50, 0x45, 0x4e, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x5a,
	0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x43,
	0x48, 0x45, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x48, 0x45, 0x4c, 0x4c, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x41, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x0a,
	0x0a, 0x06, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x10, 0x04, 0x32, 0xa3, 0x0d, 0x0a, 0x0e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x4a, 0x0a,
	0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x06, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4d, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5f, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x53, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x24, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x4b, 0x65, 0x79,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x6f,
	0x73, 0x74, 0x4b, 0x65, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x59, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x42, 0x79, 0x49, 0x44, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x42, 0x79, 0x49, 0x44, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6e, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x68, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46,
	0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a,
	0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77,
	0x65, 0x72, 0x62, 0x6f, 0x74, 0x2f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x74, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_proto_rawDescOnce sync.Once
	file_server_proto_rawDescData = file_server_proto_rawDesc
)

func file_server_proto_rawDescGZIP() []byte {
	file_server_proto_rawDescOnce.Do(func() {
		file_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_proto_rawDescData)
	})
	return file_server_proto_rawDescData
}

var file_server_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_server_proto_msgTypes = make([]protoimpl.MessageInfo, 59)
var file_server_proto_goTypes = []interface{}{
	(ServerAuth)(0),                                       // 0: server.ServerAuth
	(ServerScheme)(0),                                     // 1: server.ServerScheme
	(SessionStatus)(0),                                    // 2: server.SessionStatus
	(UserType)(0),                                         // 3: server.UserType
	(*ActivityRequest)(nil),                               // 4: server.ActivityRequest
	(*ListServers)(nil),                                   // 5: server.ListServers
	(*Server)(nil),                                        // 6: server.Server
	(*AddServer)(nil),                                     // 7: server.AddServer
	(*UpdateServer)(nil),                                  // 8: server.UpdateServer
	(*DeleteServer)(nil),                                  // 9: server.DeleteServer
	(*UpdateServerOnlineStatus)(nil),                      // 10: server.UpdateServerOnlineStatus
	(*UpdateServerActiveStatus)(nil),                      // 11: server.UpdateServerActiveStatus
	(*ServerAccess)(nil),                                  // 12: server.ServerAccess
	(*UpdateServerAccess)(nil),                            // 13: server.UpdateServerAccess
	(*ServerActivity)(nil),                                // 14: server.ServerActivity
	(*UpdateServerActivity)(nil),                          // 15: server.UpdateServerActivity
	(*UpdateServerActive)(nil),                            // 16: server.UpdateServerActive
	(*UpdateServerHostKey)(nil),                           // 17: server.UpdateServerHostKey
	(*AddServerSession)(nil),                              // 18: server.AddServerSession
	(*ServerNameByID)(nil),                                // 19: server.ServerNameByID
	(*ListServersShareForUser)(nil),                       // 20: server.ListServersShareForUser
	(*AddServerShareForUser)(nil),                         // 21: server.AddServerShareForUser
	(*UpdateServerShareForUser)(nil),                      // 22: server.UpdateServerShareForUser
	(*DeleteServerShareForUser)(nil),                      // 23: server.DeleteServerShareForUser
	(*ListServers_Request)(nil),                           // 24: server.ListServers.Request
	(*ListServers_Response)(nil),                          // 25: server.ListServers.Response
	(*Server_Request)(nil),                                // 26: server.Server.Request
	(*Server_Response)(nil),                               // 27: server.Server.Response
	(*AddServer_Request)(nil),                             // 28: server.AddServer.Request
	(*AddServer_Response)(nil),                            // 29: server.AddServer.Response
	(*UpdateServer_Request)(nil),                          // 30: server.UpdateServer.Request
	(*UpdateServer_Response)(nil),                         // 31: server.UpdateServer.Response
	(*DeleteServer_Request)(nil),                          // 32: server.DeleteServer.Request
	(*DeleteServer_Response)(nil),                         // 33: server.DeleteServer.Response
	(*UpdateServerOnlineStatus_Request)(nil),              // 34: server.UpdateServerOnlineStatus.Request
	(*UpdateServerOnlineStatus_Response)(nil),             // 35: server.UpdateServerOnlineStatus.Response
	(*UpdateServerActiveStatus_Request)(nil),              // 36: server.UpdateServerActiveStatus.Request
	(*UpdateServerActiveStatus_Response)(nil),             // 37: server.UpdateServerActiveStatus.Response
	(*ServerAccess_Request)(nil),                          // 38: server.ServerAccess.Request
	(*ServerAccess_Response)(nil),                         // 39: server.ServerAccess.Response
	(*UpdateServerAccess_Request)(nil),                    // 40: server.UpdateServerAccess.Request
	(*UpdateServerAccess_Response)(nil),                   // 41: server.UpdateServerAccess.Response
	(*ServerActivity_Request)(nil),                        // 42: server.ServerActivity.Request
	(*ServerActivity_Response)(nil),                       // 43: server.ServerActivity.Response
	(*UpdateServerActivity_Request)(nil),                  // 44: server.UpdateServerActivity.Request
	(*UpdateServerActivity_Response)(nil),                 // 45: server.UpdateServerActivity.Response
	(*UpdateServerActive_Request)(nil),                    // 46: server.UpdateServerActive.Request
	(*UpdateServerActive_Response)(nil),                   // 47: server.UpdateServerActive.Response
	(*UpdateServerHostKey_Request)(nil),                   // 48: server.UpdateServerHostKey.Request
	(*UpdateServerHostKey_Response)(nil),                  // 49: server.UpdateServerHostKey.Response
	(*AddServerSession_Request)(nil),                      // 50: server.AddServerSession.Request
	(*AddServerSession_Response)(nil),                     // 51: server.AddServerSession.Response
	(*ServerNameByID_Request)(nil),                        // 52: server.ServerNameByID.Request
	(*ServerNameByID_Response)(nil),                       // 53: server.ServerNameByID.Response
	(*ListServersShareForUser_Request)(nil),               // 54: server.ListServersShareForUser.Request
	(*ListServersShareForUser_Response)(nil),              // 55: server.ListServersShareForUser.Response
	(*ListServersShareForUser_Response_SharedServer)(nil), // 56: server.ListServersShareForUser.Response.SharedServer
	(*AddServerShareForUser_Request)(nil),                 // 57: server.AddServerShareForUser.Request
	(*AddServerShareForUser_Response)(nil),                // 58: server.AddServerShareForUser.Response
	(*UpdateServerShareForUser_Request)(nil),              // 59: server.UpdateServerShareForUser.Request
	(*UpdateServerShareForUser_Response)(nil),             // 60: server.UpdateServerShareForUser.Response
	(*DeleteServerShareForUser_Request)(nil),              // 61: server.DeleteServerShareForUser.Request
	(*DeleteServerShareForUser_Response)(nil),             // 62: server.DeleteServerShareForUser.Response
	(*timestamppb.Timestamp)(nil),                         // 63: google.protobuf.Timestamp
}
var file_server_proto_depIdxs = []int32{
	43, // 0: server.ActivityRequest.activity:type_name -> server.ServerActivity.Response
	27, // 1: server.ListServers.Response.servers:type_name -> server.Server.Response
	0,  // 2: server.AddServer.Request.auth:type_name -> server.ServerAuth
	1,  // 3: server.AddServer.Request.scheme:type_name -> server.ServerScheme
	0,  // 4: server.ServerAccess.Response.auth:type_name -> server.ServerAuth
	0,  // 5: server.UpdateServerAccess.Request.auth:type_name -> server.ServerAuth
	43, // 6: server.UpdateServerActivity.Request.activity:type_name -> server.ServerActivity.Response
	2,  // 7: server.AddServerSession.Request.status:type_name -> server.SessionStatus
	63, // 8: server.AddServerSession.Request.created:type_name -> google.protobuf.Timestamp
	56, // 9: server.ListServersShareForUser.Response.servers:type_name -> server.ListServersShareForUser.Response.SharedServer
	24, // 10: server.ServerHandlers.ListServers:input_type -> server.ListServers.Request
	26, // 11: server.ServerHandlers.Server:input_type -> server.Server.Request
	28, // 12: server.ServerHandlers.AddServer:input_type -> server.AddServer.Request
	30, // 13: server.ServerHandlers.UpdateServer:input_type -> server.UpdateServer.Request
	32, // 14: server.ServerHandlers.DeleteServer:input_type -> server.DeleteServer.Request
	34, // 15: server.ServerHandlers.UpdateServerOnlineStatus:input_type -> server.UpdateServerOnlineStatus.Request
	36, // 16: server.ServerHandlers.UpdateServerActiveStatus:input_type -> server.UpdateServerActiveStatus.Request
	38, // 17: server.ServerHandlers.ServerAccess:input_type -> server.ServerAccess.Request
	40, // 18: server.ServerHandlers.UpdateServerAccess:input_type -> server.UpdateServerAccess.Request
	42, // 19: server.ServerHandlers.ServerActivity:input_type -> server.ServerActivity.Request
	44, // 20: server.ServerHandlers.UpdateServerActivity:input_type -> server.UpdateServerActivity.Request
	48, // 21: server.ServerHandlers.UpdateServerHostKey:input_type -> server.UpdateServerHostKey.Request
	50, // 22: server.ServerHandlers.AddServerSession:input_type -> server.AddServerSession.Request
	52, // 23: server.ServerHandlers.ServerNameByID:input_type -> server.ServerNameByID.Request
	54, // 24: server.ServerHandlers.ListServersShareForUser:input_type -> server.ListServersShareForUser.Request
	57, // 25: server.ServerHandlers.AddServerShareForUser:input_type -> server.AddServerShareForUser.Request
	59, // 26: server.ServerHandlers.UpdateServerShareForUser:input_type -> server.UpdateServerShareForUser.Request
	61, // 27: server.ServerHandlers.DeleteServerShareForUser:input_type -> server.DeleteServerShareForUser.Request
	25, // 28: server.ServerHandlers.ListServers:output_type -> server.ListServers.Response
	27, // 29: server.ServerHandlers.Server:output_type -> server.Server.Response
	29, // 30: server.ServerHandlers.AddServer:output_type -> server.AddServer.Response
	31, // 31: server.ServerHandlers.UpdateServer:output_type -> server.UpdateServer.Response
	33, // 32: server.ServerHandlers.DeleteServer:output_type -> server.DeleteServer.Response
	35, // 33: server.ServerHandlers.UpdateServerOnlineStatus:output_type -> server.UpdateServerOnlineStatus.Response
	37, // 34: server.ServerHandlers.UpdateServerActiveStatus:output_type -> server.UpdateServerActiveStatus.Response
	39, // 35: server.ServerHandlers.ServerAccess:output_type -> server.ServerAccess.Response
	41, // 36: server.ServerHandlers.UpdateServerAccess:output_type -> server.UpdateServerAccess.Response
	43, // 37: server.ServerHandlers.ServerActivity:output_type -> server.ServerActivity.Response
	45, // 38: server.ServerHandlers.UpdateServerActivity:output_type -> server.UpdateServerActivity.Response
	49, // 39: server.ServerHandlers.UpdateServerHostKey:output_type -> server.UpdateServerHostKey.Response
	51, // 40: server.ServerHandlers.AddServerSession:output_type -> server.AddServerSession.Response
	53, // 41: server.ServerHandlers.ServerNameByID:output_type -> server.ServerNameByID.Response
	55, // 42: server.ServerHandlers.ListServersShareForUser:output_type -> server.ListServersShareForUser.Response
	58, // 43: server.ServerHandlers.AddServerShareForUser:output_type -> server.AddServerShareForUser.Response
	60, // 44: server.ServerHandlers.UpdateServerShareForUser:output_type -> server.UpdateServerShareForUser.Response
	62, // 45: server.ServerHandlers.DeleteServerShareForUser:output_type -> server.DeleteServerShareForUser.Response
	28, // [28:46] is the sub-list for method output_type
	10, // [10:28] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_server_proto_init() }
func file_server_proto_init() {
	if File_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerOnlineStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerActiveStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerAccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerActive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerHostKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddServerSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerNameByID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServersShareForUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddServerShareForUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerShareForUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServerShareForUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServers_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServers_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddServer_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddServer_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServer_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServer_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServer_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServer_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerOnlineStatus_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerOnlineStatus_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerActiveStatus_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerActiveStatus_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccess_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAccess_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerAccess_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerAccess_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerActivity_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerActivity_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerActivity_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerActivity_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerActive_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerActive_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerHostKey_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerHostKey_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddServerSession_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddServerSession_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerNameByID_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerNameByID_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServersShareForUser_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServersShareForUser_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServersShareForUser_Response_SharedServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddServerShareForUser_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddServerShareForUser_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerShareForUser_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerShareForUser_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServerShareForUser_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServerShareForUser_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   59,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_proto_goTypes,
		DependencyIndexes: file_server_proto_depIdxs,
		EnumInfos:         file_server_proto_enumTypes,
		MessageInfos:      file_server_proto_msgTypes,
	}.Build()
	File_server_proto = out.File
	file_server_proto_rawDesc = nil
	file_server_proto_goTypes = nil
	file_server_proto_depIdxs = nil
}
