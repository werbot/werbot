syntax = "proto3";

package server;

option go_package = "github.com/werbot/werbot/api/proto/server";

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

service ServerHandlers {
  // Server section
  rpc ListServers(ListServers.Request) returns (ListServers.Response) {}
  rpc Server(Server.Request) returns (Server.Response) {}
  rpc AddServer(AddServer.Request) returns (AddServer.Response) {}
  rpc UpdateServer(UpdateServer.Request) returns (UpdateServer.Response) {}
  rpc DeleteServer(DeleteServer.Request) returns (DeleteServer.Response) {}

  // Server Access section
  rpc ServerAccess(ServerAccess.Request) returns (ServerAccess.Response) {}
  rpc UpdateServerAccess(UpdateServerAccess.Request) returns (UpdateServerAccess.Response) {}

  // Server Activity section
  rpc ServerActivity(ServerActivity.Request) returns (ServerActivity.Response) {}
  rpc UpdateServerActivity(UpdateServerActivity.Request) returns (UpdateServerActivity.Response) {}

  // share server
  rpc ListShareServers(ListShareServers.Request) returns (ListShareServers.Response) {}
  rpc AddShareServer(AddShareServer.Request) returns (AddShareServer.Response) {}
  rpc UpdateShareServer(UpdateShareServer.Request) returns (UpdateShareServer.Response) {}
  rpc DeleteShareServer(DeleteShareServer.Request) returns (DeleteShareServer.Response) {}

  // Other
  rpc UpdateHostKey(UpdateHostKey.Request) returns (UpdateHostKey.Response) {}
  rpc AddSession(AddSession.Request) returns (AddSession.Response) {}
  rpc ServerNameByID(ServerNameByID.Request) returns (ServerNameByID.Response) {}
}

enum Auth {
  auth_unspecified = 0;
  password = 1;
  key = 2;
  agent = 3;
}

enum ServerScheme {
  server_unspecified = 0;
  tcp = 1;
  udp = 2;
  ssh = 3;
  telnet = 4;
}

enum DatabaseScheme {
  database_unspecified = 0;
  mysql = 1;
  postgres = 2;
  redis = 3;
  mongodb = 4;
  elastic = 5;
  dynamodb = 6;
  cassandra = 7;
  sqlserver = 8;
  snowflake = 9;
}

enum DesktopScheme {
  desktop_unspecified = 0;
  rdp = 1;
  vnc = 2;
}

enum ContainersScheme {
  containers_unspecified = 0;
  docker = 1;
  k8s = 2;
}

enum CloudsScheme {
  clouds_unspecified = 0;
  aws = 1;
  google = 2;
  azure = 3;
  do = 4;
  hetzner = 5;
}

enum SessionStatus {
  session_unspecified = 0;
  opened = 1;
  closed = 2;
}

enum Type {
  type_unspecified = 0;
  healthcheck = 1;
  shell = 2;
  bastion = 3;
  invite = 4;
}


// rpc ListServers
message ListServers {
  message Request {
    int32 limit = 1;
    int32 offset = 2;
    string sort_by = 3;
    string query = 4;
  }

  message Response{
    int32 total = 1;
    repeated Server.Response servers = 2;
  }
}
// -----------------------------------------------------


// rpc Server
message Server {
  message Request {
    string user_id = 1    [(validate.rules).string = {ignore_empty: true, uuid: true}]; // @gotags: query:"user_id" params:"user_id"
    string server_id = 2  [(validate.rules).string = {ignore_empty: true, uuid: true}]; // @gotags: query:"server_id" params:"server_id"
    string project_id = 3 [(validate.rules).string.uuid = true];                        // @gotags: query:"project_id" params:"project_id"
  }

  message Response {
    string server_id = 1;
    string project_id = 2;
    string project_login = 3;
    string address = 4;
    int32 port = 5;
    string token = 6;
    string login = 7;
    string password = 8;
    string title = 9;
    bool audit =10;
    bool online = 11;
    string key_public = 12;
    string key_private = 13;
    string key_password = 14;
    string account_id = 15;
    string auth = 16;
    string scheme = 17;
    bytes host_key = 18;
    string private_description = 19;
    string public_description = 20;
    bool active = 21;
    int32 count_members = 22;
  }
}
// -----------------------------------------------------


// rpc AddServer
message AddServer {
  message Request {
    string user_id = 1      [(validate.rules).string = {ignore_empty: true, uuid: true}];
    string project_id = 2   [(validate.rules).string.uuid = true];
    string address = 3      [(validate.rules).string.address = true];
    int32 port = 4          [(validate.rules).int32 = {gte: 1, lt: 65536}];
    string login = 5        [(validate.rules).string = {pattern: '^[a-z0-9]+$', min_len: 3, max_len: 20}];
    string title = 6        [(validate.rules).string = {min_len: 3, max_len: 128}];
    Auth auth = 7           [(validate.rules).enum.defined_only = true];
    ServerScheme scheme = 8 [(validate.rules).enum.defined_only = true];
    bool audit = 9;
    bool active = 10;
    string private_description = 11;
    string public_description = 12;
    string password = 13;
    string public_key = 14;
    string key_uuid = 15;
  }

  message Response {
    string server_id = 1;
    string key_public = 2;
  }
}
// -----------------------------------------------------

// rpc UpdateServer
message UpdateServer {
  message Request {
    string user_id = 1     [(validate.rules).string = {ignore_empty: true, uuid: true}]; // @gotags: query:"user_id" params:"user_id"
    string project_id = 2  [(validate.rules).string.uuid = true];                        // @gotags: query:"project_id" params:"project_id"
    string server_id = 3   [(validate.rules).string.uuid = true];                        // @gotags: query:"server_id" params:"server_id"
    oneof setting {
      Info info = 4;
      bool audit = 5;
      bool active = 6;
      bool online = 7;
    }
  }

  message Response {}

  message Info {
    string address = 1 [(validate.rules).string.address = true];                                      // @gotags: query:"address" params:"address"
    int32 port = 2     [(validate.rules).int32 = {gte: 1, lt: 65536}];                                // @gotags: query:"port" params:"port"
    string login = 3   [(validate.rules).string = {pattern: '^[a-z0-9]+$', min_len: 3, max_len: 20}]; // @gotags: query:"login" params:"login"
    string title = 4   [(validate.rules).string = {min_len: 3, max_len: 128}];                        // @gotags: query:"title" params:"title"
    string private_description = 5;
    string public_description = 6;
  }
}
// -----------------------------------------------------


// rpc DeleteServer
message DeleteServer {
  message Request {
    string user_id = 1    [(validate.rules).string = {ignore_empty: true, uuid: true}]; // @gotags: query:"user_id" params:"user_id"
    string project_id = 2 [(validate.rules).string.uuid = true];                        // @gotags: query:"project_id" params:"project_id"
    string server_id = 3  [(validate.rules).string.uuid = true];                        // @gotags: query:"server_id" params:"server_id"
  }

  message Response {}
}
// -----------------------------------------------------


// rpc ServerAccess
message ServerAccess {
  message Request {
    string user_id = 1     [(validate.rules).string = {ignore_empty: true, uuid: true}]; // @gotags: query:"user_id" params:"user_id"
    string project_id = 2  [(validate.rules).string.uuid = true];                        // @gotags: query:"project_id" params:"project_id"
    string server_id = 3   [(validate.rules).string.uuid = true];                        // @gotags: query:"server_id" params:"server_id"
  }

  message Response {
    Auth auth = 1;
    oneof access {
      string password = 2;
      Key key = 3;
    }
  }

  message Key {
    string public = 1;
    string private = 2;
    string password = 3;
    string fingeprint = 4;
  }
}
// -----------------------------------------------------


// rpc UpdateServerAccess
message UpdateServerAccess {
  message Request {
    string user_id = 1    [(validate.rules).string = {ignore_empty: true, uuid: true}]; // @gotags: query:"user_id"
    string project_id = 2 [(validate.rules).string.uuid = true];                        // @gotags: query:"project_id"
    string server_id = 3  [(validate.rules).string.uuid = true];                        // @gotags: query:"server_id"
    Auth auth = 4;
    string password = 5;
    string public_key = 6;
    string key_uuid = 7; // temp uuid for new generate key
  }

  message Response {}
}
// -----------------------------------------------------


// rpc ServerActivity
message ServerActivity {
  message Request {
    string user_id = 1    [(validate.rules).string = {ignore_empty: true, uuid: true}]; // @gotags: query:"user_id"
    string project_id = 2 [(validate.rules).string.uuid = true];                        // @gotags: query:"project_id"
    string server_id = 3  [(validate.rules).string.uuid = true];                        // @gotags: query:"server_id"
  }

  message Response {
    repeated int32 monday = 1;
    repeated int32 tuesday = 2;
    repeated int32 wednesday = 3;
    repeated int32 thursday = 4;
    repeated int32 friday = 5;
    repeated int32 saturday = 6;
    repeated int32 sunday = 7;
  }
}
// -----------------------------------------------------


// rpc UpdateServerActivity
message UpdateServerActivity {
  message Request {
    string user_id = 1    [(validate.rules).string = {ignore_empty: true, uuid: true}]; // @gotags: query:"user_id"
    string project_id = 2 [(validate.rules).string.uuid = true];                        // @gotags: query:"project_id"
    string server_id = 3  [(validate.rules).string.uuid = true];                        // @gotags: query:"server_id"
    ServerActivity.Response activity = 4;
  }

  message Response {}
}
// -----------------------------------------------------


// rpc UpdateHostKey
message UpdateHostKey {
  message Request {
    string server_id = 1 [(validate.rules).string.uuid = true]; // @gotags: query:"server_id"
    bytes hostkey = 2;
  }

  message Response {}
}
// -----------------------------------------------------


// rpc AddSession
message AddSession {
  message Request {
    string account_id = 1 [(validate.rules).string.uuid = true];  // @gotags: query:"account_id"
    SessionStatus status = 2;
    google.protobuf.Timestamp created = 3;
    string message = 4;
  }

  message Response {
    string session_id = 1;
  }
}
// -----------------------------------------------------



// rpc ServerNameByID
message ServerNameByID {
  message Request {
    string user_id = 1    [(validate.rules).string = {ignore_empty: true, uuid: true}]; // @gotags: query:"user_id" params:"user_id"
    string project_id = 2 [(validate.rules).string.uuid = true];                        // @gotags: query:"project_id" params:"project_id"
    string server_id = 3  [(validate.rules).string.uuid = true];                        // @gotags: query:"server_id" params:"server_id"
  }

  message Response {
    string server_name = 1;
  }
}
// -----------------------------------------------------


// rpc ListShareServers
message ListShareServers {
  message Request {
    int32 limit = 1;
    int32 offset = 2;
    string sort_by = 3;
    string user_id = 4 [(validate.rules).string = {ignore_empty: true, uuid: true}]; // @gotags: query:"user_id" params:"user_id"
}

  message Response {
    message SharedServer {
        string user_login = 1;
        string project_login = 2;
        string server_id = 3;
        string server_token = 4;
        bool server_online = 5;
        string server_title = 6;
        string server_description = 7;
    }

    int32 total = 1;
    repeated SharedServer servers = 2;
  }
}
// -----------------------------------------------------


// rpc AddShareServer
message AddShareServer {
  message Request{
    string user_id = 1    [(validate.rules).string = {ignore_empty: true, uuid: true}]; // @gotags: query:"user_id" params:"user_id"
    string project_id = 2 [(validate.rules).string.uuid = true];                        // @gotags: query:"project_id" params:"project_id"
    string server_id = 3  [(validate.rules).string.uuid = true];                        // @gotags: query:"server_id" params:"server_id"
  }

  message Response {}
}
// -----------------------------------------------------


// rpc UpdateShareServer
message UpdateShareServer {
  message Request{
    string user_id = 1    [(validate.rules).string = {ignore_empty: true, uuid: true}]; // @gotags: query:"user_id" params:"user_id"
    string project_id = 2 [(validate.rules).string.uuid = true];                        // @gotags: query:"project_id" params:"project_id"
    string share_id = 3   [(validate.rules).string.uuid = true];                        // @gotags: query:"share_id" params:"share_id"
  }

  message Response {}
}
// -----------------------------------------------------


// rpc DeleteShareServer
message DeleteShareServer {
  message Request{
    string user_id = 1    [(validate.rules).string = {ignore_empty: true, uuid: true}]; // @gotags: query:"user_id" params:"user_id"
    string project_id = 2 [(validate.rules).string.uuid = true];                        // @gotags: query:"project_id" params:"project_id"
    string share_id = 3   [(validate.rules).string.uuid = true];                        // @gotags: query:"share_id" params:"share_id"
  }

  message Response {}
}
// -----------------------------------------------------
