syntax = "proto3";

package license;

option go_package = "github.com/werbot/werbot/api/proto/license";

import "google/protobuf/timestamp.proto";

service LicenseHandlers {
    rpc AddLicense(AddLicense.Request) returns (AddLicense.Response) {}
    rpc License(License.Request) returns (License.Response) {}
    rpc LicenseExpired(LicenseExpired.Request)   returns (LicenseExpired.Response) {}
}

// -----------------------------------------------------
// global messages
message LicenseInfo {
    message Limits {
        int32 companies = 1;
        int32 servers = 2;
        int32 users = 3;
        repeated string modules = 4;
    }

    int32 version = 1;
    string issued = 2;
    string customer = 3;
    string subscriber = 4;
    string type = 5;
    repeated string ip = 6;
    google.protobuf.Timestamp issued_at = 7;
    google.protobuf.Timestamp expires_at = 8;
    Limits limits = 9;
}
// -----------------------------------------------------


// rpc AddLicense
message AddLicense{
    message Request{
        string ip = 1;         // @gotags: validate:"required,ip"
        string customer = 2;   // @gotags: validate:"omitempty,uuid"
        string subscriber = 3; // @gotags: validate:"omitempty,uuid"
        string token = 4;      // @gotags: validate:"omitempty,alphanum,len=32"
    }

    message Response {
        bytes license = 1;
    }
}
// -----------------------------------------------------


// rpc License
message License {
    message Request {}

    message Response {
        LicenseInfo license = 1;
        bool expired = 2;
    }
}
// -----------------------------------------------------


// rpc LicenseExpired
message LicenseExpired {
    message Request {
        bytes license = 1;
    }
    message Response {
        bool status = 1;
    }
}
// -----------------------------------------------------

