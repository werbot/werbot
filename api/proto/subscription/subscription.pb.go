// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: subscription.proto

package subscription

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Sections int32

const (
	Sections_servers        Sections = 0
	Sections_members        Sections = 1
	Sections_invites        Sections = 2
	Sections_ldap           Sections = 3
	Sections_tasks          Sections = 4
	Sections_security       Sections = 5
	Sections_log_activities Sections = 6
)

// Enum value maps for Sections.
var (
	Sections_name = map[int32]string{
		0: "servers",
		1: "members",
		2: "invites",
		3: "ldap",
		4: "tasks",
		5: "security",
		6: "log_activities",
	}
	Sections_value = map[string]int32{
		"servers":        0,
		"members":        1,
		"invites":        2,
		"ldap":           3,
		"tasks":          4,
		"security":       5,
		"log_activities": 6,
	}
)

func (x Sections) Enum() *Sections {
	p := new(Sections)
	*p = x
	return p
}

func (x Sections) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sections) Descriptor() protoreflect.EnumDescriptor {
	return file_subscription_proto_enumTypes[0].Descriptor()
}

func (Sections) Type() protoreflect.EnumType {
	return &file_subscription_proto_enumTypes[0]
}

func (x Sections) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sections.Descriptor instead.
func (Sections) EnumDescriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{0}
}

// use only on http answer to ROLE_USER
type PlansLite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Plans []*PlansLite_PlanLite `protobuf:"bytes,2,rep,name=plans,proto3" json:"plans,omitempty"`
}

func (x *PlansLite) Reset() {
	*x = PlansLite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlansLite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlansLite) ProtoMessage() {}

func (x *PlansLite) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlansLite.ProtoReflect.Descriptor instead.
func (*PlansLite) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{0}
}

func (x *PlansLite) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PlansLite) GetPlans() []*PlansLite_PlanLite {
	if x != nil {
		return x.Plans
	}
	return nil
}

// rpc ListSubscriptions
type ListSubscriptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSubscriptions) Reset() {
	*x = ListSubscriptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubscriptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptions) ProtoMessage() {}

func (x *ListSubscriptions) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptions.ProtoReflect.Descriptor instead.
func (*ListSubscriptions) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{1}
}

// rpc Subscription
type Subscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{2}
}

// rpc AddSubscription
type AddSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddSubscription) Reset() {
	*x = AddSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSubscription) ProtoMessage() {}

func (x *AddSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSubscription.ProtoReflect.Descriptor instead.
func (*AddSubscription) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{3}
}

// rpc UpdateSubscription
type UpdateSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSubscription) Reset() {
	*x = UpdateSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscription) ProtoMessage() {}

func (x *UpdateSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscription.ProtoReflect.Descriptor instead.
func (*UpdateSubscription) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{4}
}

// rpc DeleteSubscription
type DeleteSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSubscription) Reset() {
	*x = DeleteSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubscription) ProtoMessage() {}

func (x *DeleteSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubscription.ProtoReflect.Descriptor instead.
func (*DeleteSubscription) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{5}
}

// rpc ListPlans
type ListPlans struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPlans) Reset() {
	*x = ListPlans{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlans) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlans) ProtoMessage() {}

func (x *ListPlans) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlans.ProtoReflect.Descriptor instead.
func (*ListPlans) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{6}
}

// rpc Plan
type Plan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Plan) Reset() {
	*x = Plan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan.ProtoReflect.Descriptor instead.
func (*Plan) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{7}
}

// rpc UpdatePlan
type UpdatePlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePlan) Reset() {
	*x = UpdatePlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlan) ProtoMessage() {}

func (x *UpdatePlan) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlan.ProtoReflect.Descriptor instead.
func (*UpdatePlan) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{8}
}

// rpc ListCustomers
type ListCustomers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListCustomers) Reset() {
	*x = ListCustomers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCustomers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomers) ProtoMessage() {}

func (x *ListCustomers) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomers.ProtoReflect.Descriptor instead.
func (*ListCustomers) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{9}
}

// rpc Customer
type Customer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Customer) Reset() {
	*x = Customer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Customer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Customer) ProtoMessage() {}

func (x *Customer) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Customer.ProtoReflect.Descriptor instead.
func (*Customer) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{10}
}

// rpc AddCustomer
type AddCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCustomer) Reset() {
	*x = AddCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomer) ProtoMessage() {}

func (x *AddCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomer.ProtoReflect.Descriptor instead.
func (*AddCustomer) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{11}
}

// rpc UpdateCustomer
type UpdateCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCustomer) Reset() {
	*x = UpdateCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomer) ProtoMessage() {}

func (x *UpdateCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomer.ProtoReflect.Descriptor instead.
func (*UpdateCustomer) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{12}
}

// rpc DeleteCustomer
type DeleteCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCustomer) Reset() {
	*x = DeleteCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCustomer) ProtoMessage() {}

func (x *DeleteCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCustomer.ProtoReflect.Descriptor instead.
func (*DeleteCustomer) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{13}
}

// rpc Changes
type Changes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Changes) Reset() {
	*x = Changes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Changes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Changes) ProtoMessage() {}

func (x *Changes) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Changes.ProtoReflect.Descriptor instead.
func (*Changes) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{14}
}

// rpc Invoices
type Invoices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Invoices) Reset() {
	*x = Invoices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invoices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoices) ProtoMessage() {}

func (x *Invoices) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoices.ProtoReflect.Descriptor instead.
func (*Invoices) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{15}
}

type PlansLite_PlanLite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId            string `protobuf:"bytes,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	Cost              int32  `protobuf:"varint,2,opt,name=cost,proto3" json:"cost,omitempty"`
	Period            int32  `protobuf:"varint,3,opt,name=period,proto3" json:"period,omitempty"`
	Title             string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Image             string `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	TrialPeriod       int32  `protobuf:"varint,6,opt,name=trial_period,json=trialPeriod,proto3" json:"trial_period,omitempty"`
	LimitsServers     int32  `protobuf:"varint,7,opt,name=limits_servers,json=limitsServers,proto3" json:"limits_servers,omitempty"`
	LimitsUsers       int32  `protobuf:"varint,8,opt,name=limits_users,json=limitsUsers,proto3" json:"limits_users,omitempty"`
	LimitsCompanies   int32  `protobuf:"varint,9,opt,name=limits_companies,json=limitsCompanies,proto3" json:"limits_companies,omitempty"`
	LimitsConnections int32  `protobuf:"varint,10,opt,name=limits_connections,json=limitsConnections,proto3" json:"limits_connections,omitempty"`
}

func (x *PlansLite_PlanLite) Reset() {
	*x = PlansLite_PlanLite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlansLite_PlanLite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlansLite_PlanLite) ProtoMessage() {}

func (x *PlansLite_PlanLite) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlansLite_PlanLite.ProtoReflect.Descriptor instead.
func (*PlansLite_PlanLite) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PlansLite_PlanLite) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *PlansLite_PlanLite) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *PlansLite_PlanLite) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *PlansLite_PlanLite) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PlansLite_PlanLite) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *PlansLite_PlanLite) GetTrialPeriod() int32 {
	if x != nil {
		return x.TrialPeriod
	}
	return 0
}

func (x *PlansLite_PlanLite) GetLimitsServers() int32 {
	if x != nil {
		return x.LimitsServers
	}
	return 0
}

func (x *PlansLite_PlanLite) GetLimitsUsers() int32 {
	if x != nil {
		return x.LimitsUsers
	}
	return 0
}

func (x *PlansLite_PlanLite) GetLimitsCompanies() int32 {
	if x != nil {
		return x.LimitsCompanies
	}
	return 0
}

func (x *PlansLite_PlanLite) GetLimitsConnections() int32 {
	if x != nil {
		return x.LimitsConnections
	}
	return 0
}

type ListSubscriptions_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	Query  string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	UserId string `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" params:"user_id"`  
}

func (x *ListSubscriptions_Request) Reset() {
	*x = ListSubscriptions_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubscriptions_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptions_Request) ProtoMessage() {}

func (x *ListSubscriptions_Request) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptions_Request.ProtoReflect.Descriptor instead.
func (*ListSubscriptions_Request) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListSubscriptions_Request) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListSubscriptions_Request) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListSubscriptions_Request) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListSubscriptions_Request) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListSubscriptions_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListSubscriptions_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total         int32                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Subscriptions []*Subscription_Response `protobuf:"bytes,2,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
}

func (x *ListSubscriptions_Response) Reset() {
	*x = ListSubscriptions_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubscriptions_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptions_Response) ProtoMessage() {}

func (x *ListSubscriptions_Response) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptions_Response.ProtoReflect.Descriptor instead.
func (*ListSubscriptions_Response) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ListSubscriptions_Response) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSubscriptions_Response) GetSubscriptions() []*Subscription_Response {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

type Subscription_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
}

func (x *Subscription_Request) Reset() {
	*x = Subscription_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscription_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription_Request) ProtoMessage() {}

func (x *Subscription_Request) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription_Request.ProtoReflect.Descriptor instead.
func (*Subscription_Request) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Subscription_Request) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type Subscription_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	CustomerId     string                 `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CustomerName   string                 `protobuf:"bytes,3,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	PlanId         string                 `protobuf:"bytes,4,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	PlanName       string                 `protobuf:"bytes,5,opt,name=plan_name,json=planName,proto3" json:"plan_name,omitempty"`
	StartDate      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	State          string                 `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	StripeId       string                 `protobuf:"bytes,9,opt,name=stripe_id,json=stripeId,proto3" json:"stripe_id,omitempty"`
}

func (x *Subscription_Response) Reset() {
	*x = Subscription_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscription_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription_Response) ProtoMessage() {}

func (x *Subscription_Response) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription_Response.ProtoReflect.Descriptor instead.
func (*Subscription_Response) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Subscription_Response) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *Subscription_Response) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *Subscription_Response) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *Subscription_Response) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *Subscription_Response) GetPlanName() string {
	if x != nil {
		return x.PlanName
	}
	return ""
}

func (x *Subscription_Response) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Subscription_Response) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *Subscription_Response) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Subscription_Response) GetStripeId() string {
	if x != nil {
		return x.StripeId
	}
	return ""
}

type AddSubscription_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	CustomerId     string                 `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CustomerName   string                 `protobuf:"bytes,3,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	PlanId         string                 `protobuf:"bytes,4,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	PlanName       string                 `protobuf:"bytes,5,opt,name=plan_name,json=planName,proto3" json:"plan_name,omitempty"`
	StartDate      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	State          string                 `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	StripeId       string                 `protobuf:"bytes,9,opt,name=stripe_id,json=stripeId,proto3" json:"stripe_id,omitempty"`
}

func (x *AddSubscription_Request) Reset() {
	*x = AddSubscription_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSubscription_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSubscription_Request) ProtoMessage() {}

func (x *AddSubscription_Request) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSubscription_Request.ProtoReflect.Descriptor instead.
func (*AddSubscription_Request) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{3, 0}
}

func (x *AddSubscription_Request) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *AddSubscription_Request) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *AddSubscription_Request) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *AddSubscription_Request) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *AddSubscription_Request) GetPlanName() string {
	if x != nil {
		return x.PlanName
	}
	return ""
}

func (x *AddSubscription_Request) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *AddSubscription_Request) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *AddSubscription_Request) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AddSubscription_Request) GetStripeId() string {
	if x != nil {
		return x.StripeId
	}
	return ""
}

type AddSubscription_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
}

func (x *AddSubscription_Response) Reset() {
	*x = AddSubscription_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSubscription_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSubscription_Response) ProtoMessage() {}

func (x *AddSubscription_Response) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSubscription_Response.ProtoReflect.Descriptor instead.
func (*AddSubscription_Response) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{3, 1}
}

func (x *AddSubscription_Response) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type UpdateSubscription_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty" query:"user_id" params:"user_id"`  
	CustomerId     string                 `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CustomerName   string                 `protobuf:"bytes,3,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	PlanId         string                 `protobuf:"bytes,4,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	PlanName       string                 `protobuf:"bytes,5,opt,name=plan_name,json=planName,proto3" json:"plan_name,omitempty"`
	StartDate      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	State          string                 `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	StripeId       string                 `protobuf:"bytes,9,opt,name=stripe_id,json=stripeId,proto3" json:"stripe_id,omitempty"`
}

func (x *UpdateSubscription_Request) Reset() {
	*x = UpdateSubscription_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscription_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscription_Request) ProtoMessage() {}

func (x *UpdateSubscription_Request) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscription_Request.ProtoReflect.Descriptor instead.
func (*UpdateSubscription_Request) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{4, 0}
}

func (x *UpdateSubscription_Request) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *UpdateSubscription_Request) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *UpdateSubscription_Request) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *UpdateSubscription_Request) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *UpdateSubscription_Request) GetPlanName() string {
	if x != nil {
		return x.PlanName
	}
	return ""
}

func (x *UpdateSubscription_Request) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *UpdateSubscription_Request) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *UpdateSubscription_Request) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *UpdateSubscription_Request) GetStripeId() string {
	if x != nil {
		return x.StripeId
	}
	return ""
}

type UpdateSubscription_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSubscription_Response) Reset() {
	*x = UpdateSubscription_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscription_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscription_Response) ProtoMessage() {}

func (x *UpdateSubscription_Response) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscription_Response.ProtoReflect.Descriptor instead.
func (*UpdateSubscription_Response) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{4, 1}
}

type DeleteSubscription_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty" query:"user_id" params:"user_id"`  
}

func (x *DeleteSubscription_Request) Reset() {
	*x = DeleteSubscription_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubscription_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubscription_Request) ProtoMessage() {}

func (x *DeleteSubscription_Request) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubscription_Request.ProtoReflect.Descriptor instead.
func (*DeleteSubscription_Request) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{5, 0}
}

func (x *DeleteSubscription_Request) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type DeleteSubscription_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSubscription_Response) Reset() {
	*x = DeleteSubscription_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubscription_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubscription_Response) ProtoMessage() {}

func (x *DeleteSubscription_Response) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubscription_Response.ProtoReflect.Descriptor instead.
func (*DeleteSubscription_Response) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{5, 1}
}

type ListPlans_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	Query  string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	UserId string `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" params:"user_id"`  
}

func (x *ListPlans_Request) Reset() {
	*x = ListPlans_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlans_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlans_Request) ProtoMessage() {}

func (x *ListPlans_Request) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlans_Request.ProtoReflect.Descriptor instead.
func (*ListPlans_Request) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ListPlans_Request) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPlans_Request) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListPlans_Request) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListPlans_Request) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListPlans_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListPlans_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32                          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Plans []*ListPlans_Response_PlanInfo `protobuf:"bytes,2,rep,name=plans,proto3" json:"plans,omitempty"`
}

func (x *ListPlans_Response) Reset() {
	*x = ListPlans_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlans_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlans_Response) ProtoMessage() {}

func (x *ListPlans_Response) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlans_Response.ProtoReflect.Descriptor instead.
func (*ListPlans_Response) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{6, 1}
}

func (x *ListPlans_Response) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListPlans_Response) GetPlans() []*ListPlans_Response_PlanInfo {
	if x != nil {
		return x.Plans
	}
	return nil
}

type ListPlans_Response_PlanInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionCount int32          `protobuf:"varint,1,opt,name=subscription_count,json=subscriptionCount,proto3" json:"subscription_count,omitempty"`
	Plan              *Plan_Response `protobuf:"bytes,2,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *ListPlans_Response_PlanInfo) Reset() {
	*x = ListPlans_Response_PlanInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlans_Response_PlanInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlans_Response_PlanInfo) ProtoMessage() {}

func (x *ListPlans_Response_PlanInfo) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlans_Response_PlanInfo.ProtoReflect.Descriptor instead.
func (*ListPlans_Response_PlanInfo) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{6, 1, 0}
}

func (x *ListPlans_Response_PlanInfo) GetSubscriptionCount() int32 {
	if x != nil {
		return x.SubscriptionCount
	}
	return 0
}

func (x *ListPlans_Response_PlanInfo) GetPlan() *Plan_Response {
	if x != nil {
		return x.Plan
	}
	return nil
}

type Plan_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId string `protobuf:"bytes,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty" query:"user_id" params:"user_id"`  
}

func (x *Plan_Request) Reset() {
	*x = Plan_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plan_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan_Request) ProtoMessage() {}

func (x *Plan_Request) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan_Request.ProtoReflect.Descriptor instead.
func (*Plan_Request) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Plan_Request) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

type Plan_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId            string           `protobuf:"bytes,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	Cost              int32            `protobuf:"varint,2,opt,name=cost,proto3" json:"cost,omitempty"`
	Period            int32            `protobuf:"varint,3,opt,name=period,proto3" json:"period,omitempty"`
	Title             string           `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	StripeId          string           `protobuf:"bytes,5,opt,name=stripe_id,json=stripeId,proto3" json:"stripe_id,omitempty"`
	AllowedSections   []string         `protobuf:"bytes,6,rep,name=allowed_sections,json=allowedSections,proto3" json:"allowed_sections,omitempty"`
	Benefits          map[int32]string `protobuf:"bytes,7,rep,name=benefits,proto3" json:"benefits,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Image             string           `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`
	Active            bool             `protobuf:"varint,9,opt,name=active,proto3" json:"active,omitempty"`
	Trial             bool             `protobuf:"varint,10,opt,name=trial,proto3" json:"trial,omitempty"`
	TrialPeriod       int32            `protobuf:"varint,11,opt,name=trial_period,json=trialPeriod,proto3" json:"trial_period,omitempty"`
	LimitsServers     int32            `protobuf:"varint,12,opt,name=limits_servers,json=limitsServers,proto3" json:"limits_servers,omitempty"`
	LimitsUsers       int32            `protobuf:"varint,13,opt,name=limits_users,json=limitsUsers,proto3" json:"limits_users,omitempty"`
	LimitsCompanies   int32            `protobuf:"varint,14,opt,name=limits_companies,json=limitsCompanies,proto3" json:"limits_companies,omitempty"`
	LimitsConnections int32            `protobuf:"varint,15,opt,name=limits_connections,json=limitsConnections,proto3" json:"limits_connections,omitempty"`
	Default           bool             `protobuf:"varint,16,opt,name=default,proto3" json:"default,omitempty"`
}

func (x *Plan_Response) Reset() {
	*x = Plan_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plan_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan_Response) ProtoMessage() {}

func (x *Plan_Response) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan_Response.ProtoReflect.Descriptor instead.
func (*Plan_Response) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{7, 1}
}

func (x *Plan_Response) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *Plan_Response) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *Plan_Response) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *Plan_Response) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Plan_Response) GetStripeId() string {
	if x != nil {
		return x.StripeId
	}
	return ""
}

func (x *Plan_Response) GetAllowedSections() []string {
	if x != nil {
		return x.AllowedSections
	}
	return nil
}

func (x *Plan_Response) GetBenefits() map[int32]string {
	if x != nil {
		return x.Benefits
	}
	return nil
}

func (x *Plan_Response) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Plan_Response) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Plan_Response) GetTrial() bool {
	if x != nil {
		return x.Trial
	}
	return false
}

func (x *Plan_Response) GetTrialPeriod() int32 {
	if x != nil {
		return x.TrialPeriod
	}
	return 0
}

func (x *Plan_Response) GetLimitsServers() int32 {
	if x != nil {
		return x.LimitsServers
	}
	return 0
}

func (x *Plan_Response) GetLimitsUsers() int32 {
	if x != nil {
		return x.LimitsUsers
	}
	return 0
}

func (x *Plan_Response) GetLimitsCompanies() int32 {
	if x != nil {
		return x.LimitsCompanies
	}
	return 0
}

func (x *Plan_Response) GetLimitsConnections() int32 {
	if x != nil {
		return x.LimitsConnections
	}
	return 0
}

func (x *Plan_Response) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

type UpdatePlan_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId            string           `protobuf:"bytes,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty" query:"user_id" params:"user_id"`  
	Cost              int32            `protobuf:"varint,2,opt,name=cost,proto3" json:"cost,omitempty"`
	Period            int32            `protobuf:"varint,3,opt,name=period,proto3" json:"period,omitempty"`
	Title             string           `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	StripeId          string           `protobuf:"bytes,5,opt,name=stripe_id,json=stripeId,proto3" json:"stripe_id,omitempty"`
	AllowedSections   []string         `protobuf:"bytes,6,rep,name=allowed_sections,json=allowedSections,proto3" json:"allowed_sections,omitempty"`
	Benefits          map[int32]string `protobuf:"bytes,7,rep,name=benefits,proto3" json:"benefits,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Image             string           `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`
	Active            bool             `protobuf:"varint,9,opt,name=active,proto3" json:"active,omitempty"`
	Trial             bool             `protobuf:"varint,10,opt,name=trial,proto3" json:"trial,omitempty"`
	TrialPeriod       int32            `protobuf:"varint,11,opt,name=trial_period,json=trialPeriod,proto3" json:"trial_period,omitempty"`
	LimitsServers     int32            `protobuf:"varint,12,opt,name=limits_servers,json=limitsServers,proto3" json:"limits_servers,omitempty"`
	LimitsUsers       int32            `protobuf:"varint,13,opt,name=limits_users,json=limitsUsers,proto3" json:"limits_users,omitempty"`
	LimitsCompanies   int32            `protobuf:"varint,14,opt,name=limits_companies,json=limitsCompanies,proto3" json:"limits_companies,omitempty"`
	LimitsConnections int32            `protobuf:"varint,15,opt,name=limits_connections,json=limitsConnections,proto3" json:"limits_connections,omitempty"`
	Default           bool             `protobuf:"varint,16,opt,name=default,proto3" json:"default,omitempty"`
}

func (x *UpdatePlan_Request) Reset() {
	*x = UpdatePlan_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlan_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlan_Request) ProtoMessage() {}

func (x *UpdatePlan_Request) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlan_Request.ProtoReflect.Descriptor instead.
func (*UpdatePlan_Request) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{8, 0}
}

func (x *UpdatePlan_Request) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *UpdatePlan_Request) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *UpdatePlan_Request) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *UpdatePlan_Request) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdatePlan_Request) GetStripeId() string {
	if x != nil {
		return x.StripeId
	}
	return ""
}

func (x *UpdatePlan_Request) GetAllowedSections() []string {
	if x != nil {
		return x.AllowedSections
	}
	return nil
}

func (x *UpdatePlan_Request) GetBenefits() map[int32]string {
	if x != nil {
		return x.Benefits
	}
	return nil
}

func (x *UpdatePlan_Request) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *UpdatePlan_Request) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *UpdatePlan_Request) GetTrial() bool {
	if x != nil {
		return x.Trial
	}
	return false
}

func (x *UpdatePlan_Request) GetTrialPeriod() int32 {
	if x != nil {
		return x.TrialPeriod
	}
	return 0
}

func (x *UpdatePlan_Request) GetLimitsServers() int32 {
	if x != nil {
		return x.LimitsServers
	}
	return 0
}

func (x *UpdatePlan_Request) GetLimitsUsers() int32 {
	if x != nil {
		return x.LimitsUsers
	}
	return 0
}

func (x *UpdatePlan_Request) GetLimitsCompanies() int32 {
	if x != nil {
		return x.LimitsCompanies
	}
	return 0
}

func (x *UpdatePlan_Request) GetLimitsConnections() int32 {
	if x != nil {
		return x.LimitsConnections
	}
	return 0
}

func (x *UpdatePlan_Request) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

type UpdatePlan_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePlan_Response) Reset() {
	*x = UpdatePlan_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlan_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlan_Response) ProtoMessage() {}

func (x *UpdatePlan_Response) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlan_Response.ProtoReflect.Descriptor instead.
func (*UpdatePlan_Response) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{8, 1}
}

type ListCustomers_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
}

func (x *ListCustomers_Request) Reset() {
	*x = ListCustomers_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCustomers_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomers_Request) ProtoMessage() {}

func (x *ListCustomers_Request) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomers_Request.ProtoReflect.Descriptor instead.
func (*ListCustomers_Request) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ListCustomers_Request) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListCustomers_Request) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListCustomers_Request) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

type ListCustomers_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total     int32                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Customers []*Customer_Response `protobuf:"bytes,2,rep,name=customers,proto3" json:"customers,omitempty"`
}

func (x *ListCustomers_Response) Reset() {
	*x = ListCustomers_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCustomers_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomers_Response) ProtoMessage() {}

func (x *ListCustomers_Response) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomers_Response.ProtoReflect.Descriptor instead.
func (*ListCustomers_Response) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{9, 1}
}

func (x *ListCustomers_Response) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListCustomers_Response) GetCustomers() []*Customer_Response {
	if x != nil {
		return x.Customers
	}
	return nil
}

type Customer_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" params:"user_id"`  
}

func (x *Customer_Request) Reset() {
	*x = Customer_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Customer_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Customer_Request) ProtoMessage() {}

func (x *Customer_Request) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Customer_Request.ProtoReflect.Descriptor instead.
func (*Customer_Request) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Customer_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Customer_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StripeId string `protobuf:"bytes,2,opt,name=stripe_id,json=stripeId,proto3" json:"stripe_id,omitempty"`
}

func (x *Customer_Response) Reset() {
	*x = Customer_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Customer_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Customer_Response) ProtoMessage() {}

func (x *Customer_Response) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Customer_Response.ProtoReflect.Descriptor instead.
func (*Customer_Response) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{10, 1}
}

func (x *Customer_Response) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Customer_Response) GetStripeId() string {
	if x != nil {
		return x.StripeId
	}
	return ""
}

type AddCustomer_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StripeId string `protobuf:"bytes,2,opt,name=stripe_id,json=stripeId,proto3" json:"stripe_id,omitempty"`
}

func (x *AddCustomer_Request) Reset() {
	*x = AddCustomer_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomer_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomer_Request) ProtoMessage() {}

func (x *AddCustomer_Request) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomer_Request.ProtoReflect.Descriptor instead.
func (*AddCustomer_Request) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{11, 0}
}

func (x *AddCustomer_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddCustomer_Request) GetStripeId() string {
	if x != nil {
		return x.StripeId
	}
	return ""
}

type AddCustomer_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *AddCustomer_Response) Reset() {
	*x = AddCustomer_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomer_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomer_Response) ProtoMessage() {}

func (x *AddCustomer_Response) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomer_Response.ProtoReflect.Descriptor instead.
func (*AddCustomer_Response) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{11, 1}
}

func (x *AddCustomer_Response) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

type UpdateCustomer_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StripeId string `protobuf:"bytes,2,opt,name=stripe_id,json=stripeId,proto3" json:"stripe_id,omitempty"`
}

func (x *UpdateCustomer_Request) Reset() {
	*x = UpdateCustomer_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomer_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomer_Request) ProtoMessage() {}

func (x *UpdateCustomer_Request) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomer_Request.ProtoReflect.Descriptor instead.
func (*UpdateCustomer_Request) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{12, 0}
}

func (x *UpdateCustomer_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateCustomer_Request) GetStripeId() string {
	if x != nil {
		return x.StripeId
	}
	return ""
}

type UpdateCustomer_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCustomer_Response) Reset() {
	*x = UpdateCustomer_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomer_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomer_Response) ProtoMessage() {}

func (x *UpdateCustomer_Response) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomer_Response.ProtoReflect.Descriptor instead.
func (*UpdateCustomer_Response) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{12, 1}
}

type DeleteCustomer_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" params:"user_id"`  
}

func (x *DeleteCustomer_Request) Reset() {
	*x = DeleteCustomer_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCustomer_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCustomer_Request) ProtoMessage() {}

func (x *DeleteCustomer_Request) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCustomer_Request.ProtoReflect.Descriptor instead.
func (*DeleteCustomer_Request) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{13, 0}
}

func (x *DeleteCustomer_Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteCustomer_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCustomer_Response) Reset() {
	*x = DeleteCustomer_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCustomer_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCustomer_Response) ProtoMessage() {}

func (x *DeleteCustomer_Response) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCustomer_Response.ProtoReflect.Descriptor instead.
func (*DeleteCustomer_Response) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{13, 1}
}

type Changes_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	Query  string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *Changes_Request) Reset() {
	*x = Changes_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Changes_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Changes_Request) ProtoMessage() {}

func (x *Changes_Request) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Changes_Request.ProtoReflect.Descriptor instead.
func (*Changes_Request) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{14, 0}
}

func (x *Changes_Request) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Changes_Request) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Changes_Request) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *Changes_Request) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type Changes_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  int32                      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Change []*Changes_Response_Change `protobuf:"bytes,2,rep,name=change,proto3" json:"change,omitempty"`
}

func (x *Changes_Response) Reset() {
	*x = Changes_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Changes_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Changes_Response) ProtoMessage() {}

func (x *Changes_Response) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Changes_Response.ProtoReflect.Descriptor instead.
func (*Changes_Response) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{14, 1}
}

func (x *Changes_Response) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Changes_Response) GetChange() []*Changes_Response_Change {
	if x != nil {
		return x.Change
	}
	return nil
}

type Changes_Response_Change struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChangeId       string                 `protobuf:"bytes,1,opt,name=change_id,json=changeId,proto3" json:"change_id,omitempty"`
	SubscriptionId string                 `protobuf:"bytes,2,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	PlanId         string                 `protobuf:"bytes,3,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	Date           *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *Changes_Response_Change) Reset() {
	*x = Changes_Response_Change{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Changes_Response_Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Changes_Response_Change) ProtoMessage() {}

func (x *Changes_Response_Change) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Changes_Response_Change.ProtoReflect.Descriptor instead.
func (*Changes_Response_Change) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{14, 1, 0}
}

func (x *Changes_Response_Change) GetChangeId() string {
	if x != nil {
		return x.ChangeId
	}
	return ""
}

func (x *Changes_Response_Change) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *Changes_Response_Change) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *Changes_Response_Change) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type Invoices_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	Query  string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *Invoices_Request) Reset() {
	*x = Invoices_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invoices_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoices_Request) ProtoMessage() {}

func (x *Invoices_Request) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoices_Request.ProtoReflect.Descriptor instead.
func (*Invoices_Request) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{15, 0}
}

func (x *Invoices_Request) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Invoices_Request) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Invoices_Request) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *Invoices_Request) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type Invoices_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   int32                        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Invoice []*Invoices_Response_Invoice `protobuf:"bytes,2,rep,name=invoice,proto3" json:"invoice,omitempty"`
}

func (x *Invoices_Response) Reset() {
	*x = Invoices_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invoices_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoices_Response) ProtoMessage() {}

func (x *Invoices_Response) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoices_Response.ProtoReflect.Descriptor instead.
func (*Invoices_Response) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{15, 1}
}

func (x *Invoices_Response) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Invoices_Response) GetInvoice() []*Invoices_Response_Invoice {
	if x != nil {
		return x.Invoice
	}
	return nil
}

type Invoices_Response_Invoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceId      string                 `protobuf:"bytes,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	SubscriptionId string                 `protobuf:"bytes,2,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	PlanId         string                 `protobuf:"bytes,3,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	StripeId       string                 `protobuf:"bytes,4,opt,name=stripe_id,json=stripeId,proto3" json:"stripe_id,omitempty"`
	Url            string                 `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Status         string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Date           *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
	Amount         int32                  `protobuf:"varint,8,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency       string                 `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	PeriodStart    *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=period_start,json=periodStart,proto3" json:"period_start,omitempty"`
	PeriodEnd      *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=period_end,json=periodEnd,proto3" json:"period_end,omitempty"`
}

func (x *Invoices_Response_Invoice) Reset() {
	*x = Invoices_Response_Invoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invoices_Response_Invoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoices_Response_Invoice) ProtoMessage() {}

func (x *Invoices_Response_Invoice) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoices_Response_Invoice.ProtoReflect.Descriptor instead.
func (*Invoices_Response_Invoice) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{15, 1, 0}
}

func (x *Invoices_Response_Invoice) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *Invoices_Response_Invoice) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *Invoices_Response_Invoice) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *Invoices_Response_Invoice) GetStripeId() string {
	if x != nil {
		return x.StripeId
	}
	return ""
}

func (x *Invoices_Response_Invoice) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Invoices_Response_Invoice) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Invoices_Response_Invoice) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Invoices_Response_Invoice) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Invoices_Response_Invoice) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Invoices_Response_Invoice) GetPeriodStart() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodStart
	}
	return nil
}

func (x *Invoices_Response_Invoice) GetPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodEnd
	}
	return nil
}

var File_subscription_proto protoreflect.FileDescriptor

var file_subscription_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9e, 0x03, 0x0a,
	0x09, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x4c, 0x69, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x36, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x6c, 0x61, 0x6e, 0x73, 0x4c, 0x69, 0x74, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x4c, 0x69, 0x74,
	0x65, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x1a, 0xc2, 0x02, 0x0a, 0x08, 0x50, 0x6c, 0x61,
	0x6e, 0x4c, 0x69, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x72,
	0x69, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x12, 0x2d,
	0x0a, 0x12, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8f, 0x02,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x8c, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa,
	0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x1a, 0x6b, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x49, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x99, 0x03, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x32, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x1a, 0xd4, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x49, 0x64, 0x22, 0x9c, 0x03, 0x0a, 0x0f,
	0x41, 0x64, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0xd3, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c,
	0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61,
	0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x69,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72,
	0x69, 0x70, 0x65, 0x49, 0x64, 0x1a, 0x33, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x83, 0x03, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0xe0, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01,
	0xd0, 0x01, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x69, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x69,
	0x70, 0x65, 0x49, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x61, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72,
	0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xea, 0x02, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x73, 0x1a, 0x8c, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x72, 0x74, 0x42, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08,
	0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x1a, 0xcd, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x70,
	0x6c, 0x61, 0x6e, 0x73, 0x1a, 0x6a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2d, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2f, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6c, 0x61,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e,
	0x22, 0x90, 0x05, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x6e, 0x1a, 0x2f, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0,
	0x01, 0x01, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x1a, 0xd6, 0x04, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x29, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x45, 0x0a, 0x08, 0x62, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x74, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x72, 0x69,
	0x61, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x12, 0x2d, 0x0a,
	0x12, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x1a, 0x3b, 0x0a, 0x0d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x82, 0x05, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x1a, 0xe7, 0x04, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x06, 0x70, 0x6c,
	0x61, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x69, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4a,
	0x0a, 0x08, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x69, 0x61,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x1a,
	0x3b, 0x0a, 0x0d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x0a, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc2, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x1a, 0x50, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x1a, 0x5f, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3d,
	0x0a, 0x09, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x09, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x22, 0x7d, 0x0a,
	0x08, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x1a, 0x2f, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0,
	0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x40, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x0b,
	0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x1a, 0x3f, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x49, 0x64, 0x1a, 0x2b, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x1a, 0x3f, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x49, 0x64, 0x1a, 0x0a, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x1a, 0x2f, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01,
	0xd0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xed, 0x02, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x1a, 0x66, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x1a, 0xf9, 0x01, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3d,
	0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0x97, 0x01,
	0x0a, 0x06, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0xea, 0x04, 0x0a, 0x08, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x73, 0x1a, 0x66, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x1a, 0xf5, 0x03, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x41, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x1a, 0x8f, 0x03, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x45, 0x6e, 0x64, 0x2a, 0x68, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x0b, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x73, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x6c, 0x64, 0x61, 0x70, 0x10,
	0x03, 0x12, 0x09, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x6c, 0x6f,
	0x67, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x10, 0x06, 0x32, 0xe5,
	0x0a, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x68, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x59, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0f,
	0x41, 0x64, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41,
	0x64, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6b, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x04,
	0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1a, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x6c, 0x61, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x53, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x20, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x23, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4d, 0x0a, 0x08, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x1e,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x56, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x12, 0x21, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x07, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x08, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x74, 0x2f, 0x77, 0x65, 0x72, 0x62,
	0x6f, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_subscription_proto_rawDescOnce sync.Once
	file_subscription_proto_rawDescData = file_subscription_proto_rawDesc
)

func file_subscription_proto_rawDescGZIP() []byte {
	file_subscription_proto_rawDescOnce.Do(func() {
		file_subscription_proto_rawDescData = protoimpl.X.CompressGZIP(file_subscription_proto_rawDescData)
	})
	return file_subscription_proto_rawDescData
}

var file_subscription_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_subscription_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_subscription_proto_goTypes = []interface{}{
	(Sections)(0),                       // 0: subscription.Sections
	(*PlansLite)(nil),                   // 1: subscription.PlansLite
	(*ListSubscriptions)(nil),           // 2: subscription.ListSubscriptions
	(*Subscription)(nil),                // 3: subscription.Subscription
	(*AddSubscription)(nil),             // 4: subscription.AddSubscription
	(*UpdateSubscription)(nil),          // 5: subscription.UpdateSubscription
	(*DeleteSubscription)(nil),          // 6: subscription.DeleteSubscription
	(*ListPlans)(nil),                   // 7: subscription.ListPlans
	(*Plan)(nil),                        // 8: subscription.Plan
	(*UpdatePlan)(nil),                  // 9: subscription.UpdatePlan
	(*ListCustomers)(nil),               // 10: subscription.ListCustomers
	(*Customer)(nil),                    // 11: subscription.Customer
	(*AddCustomer)(nil),                 // 12: subscription.AddCustomer
	(*UpdateCustomer)(nil),              // 13: subscription.UpdateCustomer
	(*DeleteCustomer)(nil),              // 14: subscription.DeleteCustomer
	(*Changes)(nil),                     // 15: subscription.Changes
	(*Invoices)(nil),                    // 16: subscription.Invoices
	(*PlansLite_PlanLite)(nil),          // 17: subscription.PlansLite.PlanLite
	(*ListSubscriptions_Request)(nil),   // 18: subscription.ListSubscriptions.Request
	(*ListSubscriptions_Response)(nil),  // 19: subscription.ListSubscriptions.Response
	(*Subscription_Request)(nil),        // 20: subscription.Subscription.Request
	(*Subscription_Response)(nil),       // 21: subscription.Subscription.Response
	(*AddSubscription_Request)(nil),     // 22: subscription.AddSubscription.Request
	(*AddSubscription_Response)(nil),    // 23: subscription.AddSubscription.Response
	(*UpdateSubscription_Request)(nil),  // 24: subscription.UpdateSubscription.Request
	(*UpdateSubscription_Response)(nil), // 25: subscription.UpdateSubscription.Response
	(*DeleteSubscription_Request)(nil),  // 26: subscription.DeleteSubscription.Request
	(*DeleteSubscription_Response)(nil), // 27: subscription.DeleteSubscription.Response
	(*ListPlans_Request)(nil),           // 28: subscription.ListPlans.Request
	(*ListPlans_Response)(nil),          // 29: subscription.ListPlans.Response
	(*ListPlans_Response_PlanInfo)(nil), // 30: subscription.ListPlans.Response.PlanInfo
	(*Plan_Request)(nil),                // 31: subscription.Plan.Request
	(*Plan_Response)(nil),               // 32: subscription.Plan.Response
	nil,                                 // 33: subscription.Plan.Response.BenefitsEntry
	(*UpdatePlan_Request)(nil),          // 34: subscription.UpdatePlan.Request
	(*UpdatePlan_Response)(nil),         // 35: subscription.UpdatePlan.Response
	nil,                                 // 36: subscription.UpdatePlan.Request.BenefitsEntry
	(*ListCustomers_Request)(nil),       // 37: subscription.ListCustomers.Request
	(*ListCustomers_Response)(nil),      // 38: subscription.ListCustomers.Response
	(*Customer_Request)(nil),            // 39: subscription.Customer.Request
	(*Customer_Response)(nil),           // 40: subscription.Customer.Response
	(*AddCustomer_Request)(nil),         // 41: subscription.AddCustomer.Request
	(*AddCustomer_Response)(nil),        // 42: subscription.AddCustomer.Response
	(*UpdateCustomer_Request)(nil),      // 43: subscription.UpdateCustomer.Request
	(*UpdateCustomer_Response)(nil),     // 44: subscription.UpdateCustomer.Response
	(*DeleteCustomer_Request)(nil),      // 45: subscription.DeleteCustomer.Request
	(*DeleteCustomer_Response)(nil),     // 46: subscription.DeleteCustomer.Response
	(*Changes_Request)(nil),             // 47: subscription.Changes.Request
	(*Changes_Response)(nil),            // 48: subscription.Changes.Response
	(*Changes_Response_Change)(nil),     // 49: subscription.Changes.Response.Change
	(*Invoices_Request)(nil),            // 50: subscription.Invoices.Request
	(*Invoices_Response)(nil),           // 51: subscription.Invoices.Response
	(*Invoices_Response_Invoice)(nil),   // 52: subscription.Invoices.Response.Invoice
	(*timestamppb.Timestamp)(nil),       // 53: google.protobuf.Timestamp
}
var file_subscription_proto_depIdxs = []int32{
	17, // 0: subscription.PlansLite.plans:type_name -> subscription.PlansLite.PlanLite
	21, // 1: subscription.ListSubscriptions.Response.subscriptions:type_name -> subscription.Subscription.Response
	53, // 2: subscription.Subscription.Response.start_date:type_name -> google.protobuf.Timestamp
	53, // 3: subscription.Subscription.Response.end_date:type_name -> google.protobuf.Timestamp
	53, // 4: subscription.AddSubscription.Request.start_date:type_name -> google.protobuf.Timestamp
	53, // 5: subscription.AddSubscription.Request.end_date:type_name -> google.protobuf.Timestamp
	53, // 6: subscription.UpdateSubscription.Request.start_date:type_name -> google.protobuf.Timestamp
	53, // 7: subscription.UpdateSubscription.Request.end_date:type_name -> google.protobuf.Timestamp
	30, // 8: subscription.ListPlans.Response.plans:type_name -> subscription.ListPlans.Response.PlanInfo
	32, // 9: subscription.ListPlans.Response.PlanInfo.plan:type_name -> subscription.Plan.Response
	33, // 10: subscription.Plan.Response.benefits:type_name -> subscription.Plan.Response.BenefitsEntry
	36, // 11: subscription.UpdatePlan.Request.benefits:type_name -> subscription.UpdatePlan.Request.BenefitsEntry
	40, // 12: subscription.ListCustomers.Response.customers:type_name -> subscription.Customer.Response
	49, // 13: subscription.Changes.Response.change:type_name -> subscription.Changes.Response.Change
	53, // 14: subscription.Changes.Response.Change.date:type_name -> google.protobuf.Timestamp
	52, // 15: subscription.Invoices.Response.invoice:type_name -> subscription.Invoices.Response.Invoice
	53, // 16: subscription.Invoices.Response.Invoice.date:type_name -> google.protobuf.Timestamp
	53, // 17: subscription.Invoices.Response.Invoice.period_start:type_name -> google.protobuf.Timestamp
	53, // 18: subscription.Invoices.Response.Invoice.period_end:type_name -> google.protobuf.Timestamp
	18, // 19: subscription.SubscriptionHandlers.ListSubscriptions:input_type -> subscription.ListSubscriptions.Request
	20, // 20: subscription.SubscriptionHandlers.Subscription:input_type -> subscription.Subscription.Request
	22, // 21: subscription.SubscriptionHandlers.AddSubscription:input_type -> subscription.AddSubscription.Request
	24, // 22: subscription.SubscriptionHandlers.UpdateSubscription:input_type -> subscription.UpdateSubscription.Request
	26, // 23: subscription.SubscriptionHandlers.DeleteSubscription:input_type -> subscription.DeleteSubscription.Request
	28, // 24: subscription.SubscriptionHandlers.ListPlans:input_type -> subscription.ListPlans.Request
	31, // 25: subscription.SubscriptionHandlers.Plan:input_type -> subscription.Plan.Request
	34, // 26: subscription.SubscriptionHandlers.UpdatePlan:input_type -> subscription.UpdatePlan.Request
	37, // 27: subscription.SubscriptionHandlers.ListCustomers:input_type -> subscription.ListCustomers.Request
	39, // 28: subscription.SubscriptionHandlers.Customer:input_type -> subscription.Customer.Request
	41, // 29: subscription.SubscriptionHandlers.AddCustomer:input_type -> subscription.AddCustomer.Request
	43, // 30: subscription.SubscriptionHandlers.UpdateCustomer:input_type -> subscription.UpdateCustomer.Request
	45, // 31: subscription.SubscriptionHandlers.DeleteCustomer:input_type -> subscription.DeleteCustomer.Request
	47, // 32: subscription.SubscriptionHandlers.Changes:input_type -> subscription.Changes.Request
	50, // 33: subscription.SubscriptionHandlers.Invoices:input_type -> subscription.Invoices.Request
	19, // 34: subscription.SubscriptionHandlers.ListSubscriptions:output_type -> subscription.ListSubscriptions.Response
	21, // 35: subscription.SubscriptionHandlers.Subscription:output_type -> subscription.Subscription.Response
	23, // 36: subscription.SubscriptionHandlers.AddSubscription:output_type -> subscription.AddSubscription.Response
	25, // 37: subscription.SubscriptionHandlers.UpdateSubscription:output_type -> subscription.UpdateSubscription.Response
	27, // 38: subscription.SubscriptionHandlers.DeleteSubscription:output_type -> subscription.DeleteSubscription.Response
	29, // 39: subscription.SubscriptionHandlers.ListPlans:output_type -> subscription.ListPlans.Response
	32, // 40: subscription.SubscriptionHandlers.Plan:output_type -> subscription.Plan.Response
	35, // 41: subscription.SubscriptionHandlers.UpdatePlan:output_type -> subscription.UpdatePlan.Response
	38, // 42: subscription.SubscriptionHandlers.ListCustomers:output_type -> subscription.ListCustomers.Response
	40, // 43: subscription.SubscriptionHandlers.Customer:output_type -> subscription.Customer.Response
	42, // 44: subscription.SubscriptionHandlers.AddCustomer:output_type -> subscription.AddCustomer.Response
	44, // 45: subscription.SubscriptionHandlers.UpdateCustomer:output_type -> subscription.UpdateCustomer.Response
	46, // 46: subscription.SubscriptionHandlers.DeleteCustomer:output_type -> subscription.DeleteCustomer.Response
	48, // 47: subscription.SubscriptionHandlers.Changes:output_type -> subscription.Changes.Response
	51, // 48: subscription.SubscriptionHandlers.Invoices:output_type -> subscription.Invoices.Response
	34, // [34:49] is the sub-list for method output_type
	19, // [19:34] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_subscription_proto_init() }
func file_subscription_proto_init() {
	if File_subscription_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_subscription_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlansLite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubscriptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlans); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCustomers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Customer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Changes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invoices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlansLite_PlanLite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubscriptions_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubscriptions_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscription_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscription_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSubscription_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSubscription_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubscription_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubscription_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSubscription_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSubscription_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlans_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlans_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlans_Response_PlanInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plan_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plan_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlan_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlan_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCustomers_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCustomers_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Customer_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Customer_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomer_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomer_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomer_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomer_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCustomer_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCustomer_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Changes_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Changes_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Changes_Response_Change); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invoices_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invoices_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invoices_Response_Invoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_subscription_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_subscription_proto_goTypes,
		DependencyIndexes: file_subscription_proto_depIdxs,
		EnumInfos:         file_subscription_proto_enumTypes,
		MessageInfos:      file_subscription_proto_msgTypes,
	}.Build()
	File_subscription_proto = out.File
	file_subscription_proto_rawDesc = nil
	file_subscription_proto_goTypes = nil
	file_subscription_proto_depIdxs = nil
}
