syntax = "proto3";

package account;

option go_package = "github.com/werbot/werbot/api/proto/account";

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

service AccountHandlers {
  // Account section
  rpc ListAccounts(ListAccounts.Request) returns (ListAccounts.Response) {}
  rpc Account(Account.Request) returns (Account.Response) {}
  rpc AddAccount(AddAccount.Request) returns (AddAccount.Response) {}
  rpc UpdateAccount(UpdateAccount.Request) returns (UpdateAccount.Response) {}
  rpc DeleteAccount(DeleteAccount.Request) returns (DeleteAccount.Response) {}

  rpc AccountIDByName(AccountIDByName.Request) returns (AccountIDByName.Response) {}

  rpc UpdateStatus(UpdateStatus.Request) returns (UpdateStatus.Response) {}

  rpc SessionAccount(SessionAccount.Request) returns (SessionAccount.Response) {}
  rpc FindByTokenAccount(FindByTokenAccount.Request) returns (FindByTokenAccount.Response) {}
}

enum AccountStatus {
  unspecified = 0;
  offLine = 1;
  onLine = 2;
}

// rpc ListAccounts
message ListAccounts {
  message Request {
    int32 limit = 1;
    int32 offset = 2;
    string sort_by = 3;
    string query = 4;
  }

  message Response{
    int32 total = 1;
    repeated Account.Response accounts = 2;
  }
}
// -----------------------------------------------------


// rpc Account
message Account {
  message Request {
    string account_id = 1 [(validate.rules).string.uuid = true];
  }

  message Response {
    string account_id = 1;
    bool online = 2;
    bool active = 3;
    string user_fio = 4;
    google.protobuf.Timestamp last_activity = 5;
    string connection_login = 6;
  }
}
// -----------------------------------------------------


// rpc AddAccount
message AddAccount {
  message Request {
    string account_id = 1 [(validate.rules).string.uuid = true];
  }

  message Response {}
}
// -----------------------------------------------------


// rpc UpdateAccount
message UpdateAccount {
  message Request {
    string account_id = 1 [(validate.rules).string.uuid = true];
  }

  message Response {}
}
// -----------------------------------------------------


// rpc DeleteAccount
message DeleteAccount {
  message Request {
    string account_id = 1 [(validate.rules).string.uuid = true];
  }

  message Response {}
}
// -----------------------------------------------------


// rpc AccountIDByName
message AccountIDByName {
  message Request {
    string username = 1;
    string fingerprint = 2;
    string client_ip = 3 [(validate.rules).string.ip = true];
  }

  message Response {
    string user_id = 1;
  }
}
// -----------------------------------------------------


// rpc UpdateStatus
message UpdateStatus {
  message Request {
    string account_id = 1 [(validate.rules).string.uuid = true];
    AccountStatus status = 2;
  }

  message Response {
    int32 total = 1;
    repeated Account.Response accounts = 2;
  }
}
// -----------------------------------------------------


// rpc SessionAccount
message SessionAccount {
  message Request {
    string name = 1;
  }

  message Response {
    int32 total = 1;
    repeated Account.Response accounts = 2;
  }
}
// -----------------------------------------------------


// rpc SessionAccount
message FindByTokenAccount {
  message Request {
    string name = 1;
  }

  message Response {}
}
// -----------------------------------------------------
