version: "3.7"

networks:
  public:
    driver: bridge
  private:
    #internal: true
    driver: bridge
    ipam:
      config:
        - subnet: 10.16.0.0/16
          gateway: 10.16.0.1

volumes:
  postgres_data: {}
  redis_data: {}

x-logging: &default-logging
  driver: json-file
  options:
    max-size: "20M"
    max-file: "10"
    tag: "{{.ImageName}}|{{.Name}}"

x-resources: &default-resources
  limits:
    memory: 50M
    cpus: "0.15"

x-environment: &grpc-environment
  GRPCSERVER_HOST: buffet:50051
  GRPCSERVER_TOKEN: ${GRPCSERVER_TOKEN:-grpcServerToken}

services:
  acme:
    image: neilpang/acme.sh:latest
    container_name: service.acmesh
    restart: always
    environment:
      CF_Email: ${DNS_CLOUDFLARE_EMAIL:-}
      CF_Key: ${DNS_CLOUDFLARE_API_KEY:-}
      DEPLOY_DOCKER_CONTAINER_LABEL: sh.acme.autoload.domain="*.${DOMAIN:-}"
      DEPLOY_DOCKER_CONTAINER_RELOAD_CMD: "killall -0 haproxy"
    volumes:
      - ./haproxy/data/acme:/acme.sh
      - ./haproxy/data/certs:/etc/haproxy
      - /var/run/docker.sock:/var/run/docker.sock
    command: daemon
    networks:
      - private
    labels:
      com.werbot.group: "service"
    logging: *default-logging

  haproxy:
    image: haproxy:2.7-alpine
    container_name: service.haproxy
    restart: always
    ports:
      - "8404:8404"
      - "80:80"
      - "443:443"
      - "22:22"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./haproxy/config.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - ./haproxy/data/certs:/usr/local/etc/haproxy/certs:ro
      - ./haproxy/blacklist-agent.txt:/usr/local/etc/haproxy/blacklist-agent.txt:ro
      - ./haproxy/cloudflare-ips.txt:/usr/local/etc/haproxy/cdn-ips.txt:ro
    dns:
      - 127.0.0.11
    networks:
      - private
    labels:
      com.werbot.group: "service"
      sh.acme.autoload.domain: "*.${DOMAIN:-}"
    logging: *default-logging

  postgres:
    image: postgres:16-alpine
    container_name: service.postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-werbot}
      POSTGRES_DB: ${POSTGRES_DB:-werbot}
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-postgresPassword}"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./core/postgres_certificate.key:/var/lib/postgresql/server.crt:ro
      - ./core/postgres_private.key:/var/lib/postgresql/server.key:ro
      - postgres_data:/var/lib/postgresql/data
    command: -c ssl=on -c ssl_cert_file=/var/lib/postgresql/server.crt -c ssl_key_file=/var/lib/postgresql/server.key
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-werbot}"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - private
    labels:
      com.werbot.group: "service"
    logging: *default-logging

  redis:
    image: redis:7-alpine
    container_name: service.redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    command: redis-server --requirepass "${REDIS_PASSWORD:-redisPassword}"
    networks:
      - private
    labels:
      com.werbot.group: "service"
    logging: *default-logging

  app:
    image: ghcr.io/werbot/werbot.web:latest
    restart: always
    environment:
      API_DSN: ${API_DSN:-localhost:8088}
    deploy:
      replicas: 1
      resources: *default-resources
    networks:
      - private
    labels:
      com.werbot.group: "werbot"
    logging: *default-logging

  avocado:
    image: ghcr.io/werbot/avocado:latest
    restart: always
    environment:
      SECURITY_AES_KEY: ${SECURITY_AES_KEY:-securittAesKey}
      <<: *grpc-environment
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./core/grpc_certificate.key:/grpc_certificate.key:ro
      - ./core/grpc_private.key:/grpc_private.key:ro
      - ./core/server.key:/server.key:ro
      - ./core/license.key:/license.key:ro
    deploy:
      replicas: 1
      resources: *default-resources
    networks:
      - private
    labels:
      com.werbot.group: "werbot"
    logging: *default-logging

  buffet:
    image: ghcr.io/werbot/buffet:latest
    restart: always
    environment:
      SECURITY_AES_KEY: ${SECURITY_AES_KEY:-securittAesKey}
      GRPCSERVER_TOKEN: ${GRPCSERVER_TOKEN:-grpcServerToken}
      LICENSE_KEY_PUBLIC: ${LICENSE_KEY_PUBLIC:-} # check it
      POSTGRES_HOST: service.postgres:5432
      POSTGRES_USER: ${POSTGRES_USER:-werbot}
      POSTGRES_DB: ${POSTGRES_DB:-werbot}
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-postgresPassword}"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./core/grpc_certificate.key:/grpc_certificate.key:ro
      - ./core/grpc_private.key:/grpc_private.key:ro
      - ./core/license.key:/license.key:ro
      - ./core/GeoLite2-Country.mmdb:/etc/geoip2/GeoLite2-Country.mmdb:ro
      #- ./storage:/storage
    deploy:
      replicas: 1
      resources: *default-resources
    networks:
      - private
    labels:
      com.werbot.group: "werbot"
    logging: *default-logging

  ghost:
    image: ghcr.io/werbot/ghost:latest
    container_name: werbot.ghost
    restart: always
    environment: *grpc-environment
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./core/grpc_certificate.key:/grpc_certificate.key:ro
      - ./core/grpc_private.key:/grpc_private.key:ro
      - ./core:/data
    networks:
      - private
    labels:
      com.werbot.group: "werbot"
    logging: *default-logging

  taco:
    image: ghcr.io/werbot/taco:latest
    restart: always
    environment:
      REDIS_ADDR: service.redis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redisPassword}
      ACCESS_TOKEN_DURATION: ${ACCESS_TOKEN_DURATION:-15m}
      # REFRESH_TOKEN_DURATION: ${ACCESS_TOKEN_DURATION:-168h}
      LICENSE_KEY_PUBLIC: ${LICENSE_KEY_PUBLIC:-} # check it
      LICENSE_KEY_PRIVATE: ${LICENSE_KEY_PRIVATE:-} # check it
      API_DSN: ${API_DSN:-localhost:8088}
      <<: *grpc-environment
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./core/grpc_certificate.key:/grpc_certificate.key:ro
      - ./core/grpc_private.key:/grpc_private.key:ro
      - ./core/jwt_public.key:/jwt_public.key:ro
      - ./core/jwt_private.key:/jwt_private.key:ro
    deploy:
      replicas: 1
      resources: *default-resources
    networks:
      - private
    labels:
      com.werbot.group: "werbot"
    logging: *default-logging
